"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[189],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,y=d["".concat(i,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(y,l(l({ref:t},p),{},{components:n})):r.createElement(y,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1736:(e,t,n)=>{n.d(t,{Z:()=>N});var r=n(7462),a=n(7294),o=n(6010);const l={plain:{backgroundColor:"#2a2734",color:"#9a86fd"},styles:[{types:["comment","prolog","doctype","cdata","punctuation"],style:{color:"#6c6783"}},{types:["namespace"],style:{opacity:.7}},{types:["tag","operator","number"],style:{color:"#e09142"}},{types:["property","function"],style:{color:"#9a86fd"}},{types:["tag-id","selector","atrule-id"],style:{color:"#eeebff"}},{types:["attr-name"],style:{color:"#c4b9fe"}},{types:["boolean","string","entity","url","attr-value","keyword","control","directive","unit","statement","regex","at-rule","placeholder","variable"],style:{color:"#ffcc99"}},{types:["deleted"],style:{textDecorationLine:"line-through"}},{types:["inserted"],style:{textDecorationLine:"underline"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["important"],style:{color:"#c4b9fe"}}]};var s={Prism:n(7410).default,theme:l};function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(){return c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},c.apply(this,arguments)}var p=/\r\n|\r|\n/,u=function(e){0===e.length?e.push({types:["plain"],content:"\n",empty:!0}):1===e.length&&""===e[0].content&&(e[0].content="\n",e[0].empty=!0)},d=function(e,t){var n=e.length;return n>0&&e[n-1]===t?e:e.concat(t)},m=function(e,t){var n=e.plain,r=Object.create(null),a=e.styles.reduce((function(e,n){var r=n.languages,a=n.style;return r&&!r.includes(t)||n.types.forEach((function(t){var n=c({},e[t],a);e[t]=n})),e}),r);return a.root=n,a.plain=c({},n,{backgroundColor:null}),a};function y(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(n[r]=e[r]);return n}const f=function(e){function t(){for(var t=this,n=[],r=arguments.length;r--;)n[r]=arguments[r];e.apply(this,n),i(this,"getThemeDict",(function(e){if(void 0!==t.themeDict&&e.theme===t.prevTheme&&e.language===t.prevLanguage)return t.themeDict;t.prevTheme=e.theme,t.prevLanguage=e.language;var n=e.theme?m(e.theme,e.language):void 0;return t.themeDict=n})),i(this,"getLineProps",(function(e){var n=e.key,r=e.className,a=e.style,o=c({},y(e,["key","className","style","line"]),{className:"token-line",style:void 0,key:void 0}),l=t.getThemeDict(t.props);return void 0!==l&&(o.style=l.plain),void 0!==a&&(o.style=void 0!==o.style?c({},o.style,a):a),void 0!==n&&(o.key=n),r&&(o.className+=" "+r),o})),i(this,"getStyleForToken",(function(e){var n=e.types,r=e.empty,a=n.length,o=t.getThemeDict(t.props);if(void 0!==o){if(1===a&&"plain"===n[0])return r?{display:"inline-block"}:void 0;if(1===a&&!r)return o[n[0]];var l=r?{display:"inline-block"}:{},s=n.map((function(e){return o[e]}));return Object.assign.apply(Object,[l].concat(s))}})),i(this,"getTokenProps",(function(e){var n=e.key,r=e.className,a=e.style,o=e.token,l=c({},y(e,["key","className","style","token"]),{className:"token "+o.types.join(" "),children:o.content,style:t.getStyleForToken(o),key:void 0});return void 0!==a&&(l.style=void 0!==l.style?c({},l.style,a):a),void 0!==n&&(l.key=n),r&&(l.className+=" "+r),l})),i(this,"tokenize",(function(e,t,n,r){var a={code:t,grammar:n,language:r,tokens:[]};e.hooks.run("before-tokenize",a);var o=a.tokens=e.tokenize(a.code,a.grammar,a.language);return e.hooks.run("after-tokenize",a),o}))}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.render=function(){var e=this.props,t=e.Prism,n=e.language,r=e.code,a=e.children,o=this.getThemeDict(this.props),l=t.languages[n];return a({tokens:function(e){for(var t=[[]],n=[e],r=[0],a=[e.length],o=0,l=0,s=[],i=[s];l>-1;){for(;(o=r[l]++)<a[l];){var c=void 0,m=t[l],y=n[l][o];if("string"==typeof y?(m=l>0?m:["plain"],c=y):(m=d(m,y.type),y.alias&&(m=d(m,y.alias)),c=y.content),"string"==typeof c){var f=c.split(p),h=f.length;s.push({types:m,content:f[0]});for(var g=1;g<h;g++)u(s),i.push(s=[]),s.push({types:m,content:f[g]})}else l++,t.push(m),n.push(c),r.push(0),a.push(c.length)}l--,t.pop(),n.pop(),r.pop(),a.pop()}return u(s),i}(void 0!==l?this.tokenize(t,r,l,n):[r]),className:"prism-code language-"+n,style:void 0!==o?o.root:{},getLineProps:this.getLineProps,getTokenProps:this.getTokenProps})},t}(a.Component);var h=n(5999),g=n(5450);const v="codeBlockContainer_I0IT",b="codeBlockContent_wNvx",w="codeBlockTitle_BvAR",k="codeBlock_jd64",C="codeBlockStandalone_csWH",T="copyButton_wuS7",x="codeBlockLines_mRuA";function N(e){var t,n=e.children,l=e.className,i=void 0===l?"":l,c=e.metastring,p=e.title,u=e.language,d=(0,g.useThemeConfig)().prism,m=(0,a.useState)(!1),y=m[0],N=m[1],O=(0,a.useState)(!1),E=O[0],P=O[1];(0,a.useEffect)((function(){P(!0)}),[]);var j=(0,g.parseCodeBlockTitle)(c)||p,L=(0,g.usePrismTheme)();if(a.Children.toArray(n).some((function(e){return(0,a.isValidElement)(e)})))return a.createElement(f,(0,r.Z)({},s,{key:String(E),theme:L,code:"",language:"text"}),(function(e){var t=e.className,r=e.style;return a.createElement("pre",{tabIndex:0,className:(0,o.Z)(t,C,"thin-scrollbar",v,i,g.ThemeClassNames.common.codeBlock),style:r},a.createElement("code",{className:x},n))}));var A=Array.isArray(n)?n.join(""):n,B=null!=(t=null!=u?u:(0,g.parseLanguage)(i))?t:d.defaultLanguage,D=(0,g.parseLines)(A,c,B),S=D.highlightLines,R=D.code,Z=function(){!function(e,t){var n=(void 0===t?{}:t).target,r=void 0===n?document.body:n,a=document.createElement("textarea"),o=document.activeElement;a.value=e,a.setAttribute("readonly",""),a.style.contain="strict",a.style.position="absolute",a.style.left="-9999px",a.style.fontSize="12pt";var l=document.getSelection(),s=!1;l.rangeCount>0&&(s=l.getRangeAt(0)),r.append(a),a.select(),a.selectionStart=0,a.selectionEnd=e.length;var i=!1;try{i=document.execCommand("copy")}catch(c){}a.remove(),s&&(l.removeAllRanges(),l.addRange(s)),o&&o.focus()}(R),N(!0),setTimeout((function(){return N(!1)}),2e3)};return a.createElement(f,(0,r.Z)({},s,{key:String(E),theme:L,code:R,language:null!=B?B:"text"}),(function(e){var t,n=e.className,l=e.style,s=e.tokens,c=e.getLineProps,p=e.getTokenProps;return a.createElement("div",{className:(0,o.Z)(v,i,(t={},t["language-"+B]=B&&!i.includes("language-"+B),t),g.ThemeClassNames.common.codeBlock)},j&&a.createElement("div",{style:l,className:w},j),a.createElement("div",{className:(0,o.Z)(b,B)},a.createElement("pre",{tabIndex:0,className:(0,o.Z)(n,k,"thin-scrollbar"),style:l},a.createElement("code",{className:x},s.map((function(e,t){1===e.length&&"\n"===e[0].content&&(e[0].content="");var n=c({line:e,key:t});return S.includes(t)&&(n.className+=" docusaurus-highlight-code-line"),a.createElement("span",(0,r.Z)({key:t},n),e.map((function(e,t){return a.createElement("span",(0,r.Z)({key:t},p({token:e,key:t})))})),a.createElement("br",null))})))),a.createElement("button",{type:"button","aria-label":(0,h.I)({id:"theme.CodeBlock.copyButtonAriaLabel",message:"Copy code to clipboard",description:"The ARIA label for copy code blocks button"}),className:(0,o.Z)(T,"clean-btn"),onClick:Z},y?a.createElement(h.Z,{id:"theme.CodeBlock.copied",description:"The copied button label on code blocks"},"Copied"):a.createElement(h.Z,{id:"theme.CodeBlock.copy",description:"The copy button label on code blocks"},"Copy"))))}))}},4753:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>y,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),l=n(1736);var s=["components"],i={id:"basic-crawler",title:"Basic crawler"},c=void 0,p={unversionedId:"examples/basic-crawler",id:"examples/basic-crawler",title:"Basic crawler",description:"This is the most bare-bones example of the Apify SDK, which demonstrates some of its building blocks such as the",source:"@site/../docs/examples/basic_crawler.mdx",sourceDirName:"examples",slug:"/examples/basic-crawler",permalink:"/apify-ts/docs/next/examples/basic-crawler",tags:[],version:"current",frontMatter:{id:"basic-crawler",title:"Basic crawler"},sidebar:"docs",previous:{title:"Add data to dataset",permalink:"/apify-ts/docs/next/examples/add-data-to-dataset"},next:{title:"Call actor",permalink:"/apify-ts/docs/next/examples/call-actor"}},u={},d=[],m={toc:d};function y(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This is the most bare-bones example of the Apify SDK, which demonstrates some of its building blocks such as the\n",(0,o.kt)("a",{parentName:"p",href:"/docs/api/basic-crawler",target:null,rel:null},(0,o.kt)("inlineCode",{parentName:"a"},"BasicCrawler")),". You probably don't need to go this deep though, and it would be better to start with one of the full\nfeatured crawlers like ",(0,o.kt)("a",{parentName:"p",href:"https://sdk.apify.com/docs/examples/cheerio-crawler",target:null,rel:null},(0,o.kt)("inlineCode",{parentName:"a"},"CheerioCrawler"))," or\n",(0,o.kt)("a",{parentName:"p",href:"https://sdk.apify.com/docs/examples/playwright-crawler",target:null,rel:null},(0,o.kt)("inlineCode",{parentName:"a"},"PlaywrightCrawler")),"."),(0,o.kt)("p",null,"The script simply downloads several web pages with plain HTTP requests using the ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/utils#requestasbrowser",target:null,rel:null},(0,o.kt)("inlineCode",{parentName:"a"},"Apify.utils.requestAsBrowser()")),"\nconvenience function and stores their raw HTML and URL in the default dataset. In local configuration, the data will be stored as JSON files in\n",(0,o.kt)("inlineCode",{parentName:"p"},"./apify_storage/datasets/default"),"."),(0,o.kt)(l.Z,{className:"language-js",mdxType:"CodeBlock"},"const Apify = require('apify');\n\n// Apify.main() function wraps the crawler logic (it is optional).\nApify.main(async () => {\n    // Create and initialize an instance of the RequestList class that contains\n    // a list of URLs to crawl. Here we use just a few hard-coded URLs.\n    const requestList = await Apify.openRequestList('start-urls',\n        [\n            { url: 'http://www.google.com/' },\n            { url: 'http://www.example.com/' },\n            { url: 'http://www.bing.com/' },\n            { url: 'http://www.wikipedia.com/' },\n        ]);\n\n    // Create a BasicCrawler - the simplest crawler that enables\n    // users to implement the crawling logic themselves.\n    const crawler = new Apify.BasicCrawler({\n        // Let the crawler fetch URLs from our list.\n        requestList,\n\n        // This function will be called for each URL to crawl.\n        handleRequestFunction: async ({ request }) => {\n            const { url } = request;\n            console.log(`Processing ${url}...`);\n\n            // Fetch the page HTML via Apify utils requestAsBrowser\n            const { body } = await Apify.utils.requestAsBrowser({ url });\n\n            // Store the HTML and URL to the default dataset.\n            await Apify.pushData({\n                url: request.url,\n                html: body,\n            });\n        },\n    });\n\n    // Run the crawler and wait for it to finish.\n    await crawler.run();\n\n    console.log('Crawler finished.');\n});\n"))}y.isMDXComponent=!0}}]);