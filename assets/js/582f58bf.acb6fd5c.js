"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5403],{457:e=>{e.exports=JSON.parse('[{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":3,"name":"@crawlers/basic","kind":2,"kindString":"Module","flags":{},"children":[{"id":2710,"name":"ACTOR_EVENT_NAMES_EX","kind":16777216,"kindString":"Reference","flags":{},"target":1549,"permalink":"/apify-ts/api/next/basic-crawler#ACTOR_EVENT_NAMES_EX","previousId":2764,"nextId":2711},{"id":2711,"name":"APIFY_API_BASE_URL","kind":16777216,"kindString":"Reference","flags":{},"target":1556,"permalink":"/apify-ts/api/next/basic-crawler#APIFY_API_BASE_URL","previousId":2710,"nextId":2719},{"id":2719,"name":"ActorRunWithOutput","kind":16777216,"kindString":"Reference","flags":{},"target":1578,"permalink":"/apify-ts/api/next/basic-crawler#ActorRunWithOutput","previousId":2711,"nextId":2623},{"id":2623,"name":"AutoscaledPool","kind":16777216,"kindString":"Reference","flags":{},"target":256,"permalink":"/apify-ts/api/next/basic-crawler#AutoscaledPool","previousId":2719,"nextId":2622},{"id":2622,"name":"AutoscaledPoolOptions","kind":16777216,"kindString":"Reference","flags":{},"target":236,"permalink":"/apify-ts/api/next/basic-crawler#AutoscaledPoolOptions","previousId":2623,"nextId":2712},{"id":2712,"name":"COUNTRY_CODE_REGEX","kind":16777216,"kindString":"Reference","flags":{},"target":1557,"permalink":"/apify-ts/api/next/basic-crawler#COUNTRY_CODE_REGEX","previousId":2622,"nextId":2746},{"id":2746,"name":"CheerioRoot","kind":16777216,"kindString":"Reference","flags":{},"target":1780,"permalink":"/apify-ts/api/next/basic-crawler#CheerioRoot","previousId":2712,"nextId":2628},{"id":2628,"name":"ClientInfo","kind":16777216,"kindString":"Reference","flags":{},"target":458,"permalink":"/apify-ts/api/next/basic-crawler#ClientInfo","previousId":2746,"nextId":2707},{"id":2707,"name":"Configuration","kind":16777216,"kindString":"Reference","flags":{},"target":1453,"permalink":"/apify-ts/api/next/basic-crawler#Configuration","previousId":2628,"nextId":2706},{"id":2706,"name":"ConfigurationOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1430,"permalink":"/apify-ts/api/next/basic-crawler#ConfigurationOptions","previousId":2707,"nextId":2631},{"id":2631,"name":"CrawlerHandleFailedRequestInput","kind":16777216,"kindString":"Reference","flags":{},"target":504,"permalink":"/apify-ts/api/next/basic-crawler#CrawlerHandleFailedRequestInput","previousId":2706,"nextId":2630},{"id":2630,"name":"CrawlingContext","kind":16777216,"kindString":"Reference","flags":{},"target":499,"permalink":"/apify-ts/api/next/basic-crawler#CrawlingContext","previousId":2631,"nextId":2655},{"id":2655,"name":"CreateSession","kind":16777216,"kindString":"Reference","flags":{},"target":772,"permalink":"/apify-ts/api/next/basic-crawler#CreateSession","previousId":2630,"nextId":2708},{"id":2708,"name":"DEFAULT_USER_AGENT","kind":16777216,"kindString":"Reference","flags":{},"target":1543,"permalink":"/apify-ts/api/next/basic-crawler#DEFAULT_USER_AGENT","previousId":2655,"nextId":2666},{"id":2666,"name":"Dataset","kind":16777216,"kindString":"Reference","flags":{},"target":992,"permalink":"/apify-ts/api/next/basic-crawler#Dataset","previousId":2708,"nextId":2667},{"id":2667,"name":"DatasetConsumer","kind":16777216,"kindString":"Reference","flags":{},"target":1034,"permalink":"/apify-ts/api/next/basic-crawler#DatasetConsumer","previousId":2666,"nextId":2671},{"id":2671,"name":"DatasetContent","kind":16777216,"kindString":"Reference","flags":{},"target":1057,"permalink":"/apify-ts/api/next/basic-crawler#DatasetContent","previousId":2667,"nextId":2664},{"id":2664,"name":"DatasetDataOptions","kind":16777216,"kindString":"Reference","flags":{},"target":973,"permalink":"/apify-ts/api/next/basic-crawler#DatasetDataOptions","previousId":2671,"nextId":2665},{"id":2665,"name":"DatasetIteratorOptions","kind":16777216,"kindString":"Reference","flags":{},"target":982,"permalink":"/apify-ts/api/next/basic-crawler#DatasetIteratorOptions","previousId":2664,"nextId":2668},{"id":2668,"name":"DatasetMapper","kind":16777216,"kindString":"Reference","flags":{},"target":1039,"permalink":"/apify-ts/api/next/basic-crawler#DatasetMapper","previousId":2665,"nextId":2670},{"id":2670,"name":"DatasetOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1052,"permalink":"/apify-ts/api/next/basic-crawler#DatasetOptions","previousId":2668,"nextId":2669},{"id":2669,"name":"DatasetReducer","kind":16777216,"kindString":"Reference","flags":{},"target":1045,"permalink":"/apify-ts/api/next/basic-crawler#DatasetReducer","previousId":2670,"nextId":2751},{"id":2751,"name":"DownloadListOfUrlsOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1791,"permalink":"/apify-ts/api/next/basic-crawler#DownloadListOfUrlsOptions","previousId":2669,"nextId":2649},{"id":2649,"name":"EVENT_SESSION_RETIRED","kind":16777216,"kindString":"Reference","flags":{},"target":674,"permalink":"/apify-ts/api/next/basic-crawler#EVENT_SESSION_RETIRED","previousId":2751,"nextId":2709},{"id":2709,"name":"EXIT_CODES","kind":16777216,"kindString":"Reference","flags":{},"target":1544,"permalink":"/apify-ts/api/next/basic-crawler#EXIT_CODES","previousId":2649,"nextId":2641},{"id":2641,"name":"EnqueueLinksOptions","kind":16777216,"kindString":"Reference","flags":{},"target":629,"permalink":"/apify-ts/api/next/basic-crawler#EnqueueLinksOptions","previousId":2709,"nextId":2752},{"id":2752,"name":"ExtractUrlsOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1795,"permalink":"/apify-ts/api/next/basic-crawler#ExtractUrlsOptions","previousId":2641,"nextId":2703},{"id":2703,"name":"IStorage","kind":16777216,"kindString":"Reference","flags":{},"target":1346,"permalink":"/apify-ts/api/next/basic-crawler#IStorage","previousId":2752,"nextId":2679},{"id":2679,"name":"KeyConsumer","kind":16777216,"kindString":"Reference","flags":{},"target":1128,"permalink":"/apify-ts/api/next/basic-crawler#KeyConsumer","previousId":2703,"nextId":2678},{"id":2678,"name":"KeyValueStore","kind":16777216,"kindString":"Reference","flags":{},"target":1090,"permalink":"/apify-ts/api/next/basic-crawler#KeyValueStore","previousId":2679,"nextId":2682},{"id":2682,"name":"KeyValueStoreIteratorOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1142,"permalink":"/apify-ts/api/next/basic-crawler#KeyValueStoreIteratorOptions","previousId":2678,"nextId":2680},{"id":2680,"name":"KeyValueStoreOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1135,"permalink":"/apify-ts/api/next/basic-crawler#KeyValueStoreOptions","previousId":2682,"nextId":2676},{"id":2676,"name":"KeyValueStoreValueTypes","kind":16777216,"kindString":"Reference","flags":{},"target":1082,"permalink":"/apify-ts/api/next/basic-crawler#KeyValueStoreValueTypes","previousId":2680,"nextId":2860},{"id":2860,"name":"Log","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":9}],"target":2114,"permalink":"/apify-ts/api/next/basic-crawler#Log","previousId":2676,"nextId":2862},{"id":2862,"name":"LogLevel","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":29}],"target":2181,"permalink":"/apify-ts/api/next/basic-crawler#LogLevel","previousId":2860,"nextId":2863},{"id":2863,"name":"Logger","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":39}],"target":2189,"permalink":"/apify-ts/api/next/basic-crawler#Logger","previousId":2862,"nextId":2864},{"id":2864,"name":"LoggerJson","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":47}],"target":2313,"permalink":"/apify-ts/api/next/basic-crawler#LoggerJson","previousId":2863,"nextId":2861},{"id":2861,"name":"LoggerOptions","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":14}],"target":2173,"permalink":"/apify-ts/api/next/basic-crawler#LoggerOptions","previousId":2864,"nextId":2865},{"id":2865,"name":"LoggerText","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":59}],"target":2438,"permalink":"/apify-ts/api/next/basic-crawler#LoggerText","previousId":2861,"nextId":2750},{"id":2750,"name":"MemoryInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1785,"permalink":"/apify-ts/api/next/basic-crawler#MemoryInfo","previousId":2865,"nextId":2733},{"id":2733,"name":"ProxyConfiguration","kind":16777216,"kindString":"Reference","flags":{},"target":1686,"permalink":"/apify-ts/api/next/basic-crawler#ProxyConfiguration","previousId":2750,"nextId":2730},{"id":2730,"name":"ProxyConfigurationFunction","kind":16777216,"kindString":"Reference","flags":{},"target":1667,"permalink":"/apify-ts/api/next/basic-crawler#ProxyConfigurationFunction","previousId":2733,"nextId":2731},{"id":2731,"name":"ProxyConfigurationOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1670,"permalink":"/apify-ts/api/next/basic-crawler#ProxyConfigurationOptions","previousId":2730,"nextId":2732},{"id":2732,"name":"ProxyInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1678,"permalink":"/apify-ts/api/next/basic-crawler#ProxyInfo","previousId":2731,"nextId":2720},{"id":2720,"name":"PseudoUrl","kind":16777216,"kindString":"Reference","flags":{},"target":1596,"permalink":"/apify-ts/api/next/basic-crawler#PseudoUrl","previousId":2732,"nextId":2646},{"id":2646,"name":"PseudoUrlInput","kind":16777216,"kindString":"Reference","flags":{},"target":652,"permalink":"/apify-ts/api/next/basic-crawler#PseudoUrlInput","previousId":2720,"nextId":2721},{"id":2721,"name":"PseudoUrlObject","kind":16777216,"kindString":"Reference","flags":{},"target":1609,"permalink":"/apify-ts/api/next/basic-crawler#PseudoUrlObject","previousId":2646,"nextId":2650},{"id":2650,"name":"PuppeteerCookie","kind":16777216,"kindString":"Reference","flags":{},"target":675,"permalink":"/apify-ts/api/next/basic-crawler#PuppeteerCookie","previousId":2721,"nextId":2728},{"id":2728,"name":"PushErrorMessageOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1660,"permalink":"/apify-ts/api/next/basic-crawler#PushErrorMessageOptions","previousId":2650,"nextId":2698},{"id":2698,"name":"QueueOperationInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1264,"permalink":"/apify-ts/api/next/basic-crawler#QueueOperationInfo","previousId":2728,"nextId":2702},{"id":2702,"name":"QueueOperationInfoOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1343,"permalink":"/apify-ts/api/next/basic-crawler#QueueOperationInfoOptions","previousId":2698,"nextId":2681},{"id":2681,"name":"RecordOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1140,"permalink":"/apify-ts/api/next/basic-crawler#RecordOptions","previousId":2702,"nextId":2726},{"id":2726,"name":"Request","kind":16777216,"kindString":"Reference","flags":{},"target":1626,"permalink":"/apify-ts/api/next/basic-crawler#Request","previousId":2681,"nextId":2687},{"id":2687,"name":"RequestList","kind":16777216,"kindString":"Reference","flags":{},"target":1158,"permalink":"/apify-ts/api/next/basic-crawler#RequestList","previousId":2726,"nextId":2686},{"id":2686,"name":"RequestListOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1151,"permalink":"/apify-ts/api/next/basic-crawler#RequestListOptions","previousId":2687,"nextId":2690},{"id":2690,"name":"RequestListSourcesFunction","kind":16777216,"kindString":"Reference","flags":{},"target":1249,"permalink":"/apify-ts/api/next/basic-crawler#RequestListSourcesFunction","previousId":2686,"nextId":2688},{"id":2688,"name":"RequestListState","kind":16777216,"kindString":"Reference","flags":{},"target":1241,"permalink":"/apify-ts/api/next/basic-crawler#RequestListState","previousId":2690,"nextId":2727},{"id":2727,"name":"RequestOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1649,"permalink":"/apify-ts/api/next/basic-crawler#RequestOptions","previousId":2688,"nextId":2700},{"id":2700,"name":"RequestQueue","kind":16777216,"kindString":"Reference","flags":{},"target":1270,"permalink":"/apify-ts/api/next/basic-crawler#RequestQueue","previousId":2727,"nextId":2699},{"id":2699,"name":"RequestQueueOperationOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1268,"permalink":"/apify-ts/api/next/basic-crawler#RequestQueueOperationOptions","previousId":2700,"nextId":2701},{"id":2701,"name":"RequestQueueOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1338,"permalink":"/apify-ts/api/next/basic-crawler#RequestQueueOptions","previousId":2699,"nextId":2647},{"id":2647,"name":"RequestTransform","kind":16777216,"kindString":"Reference","flags":{},"target":653,"permalink":"/apify-ts/api/next/basic-crawler#RequestTransform","previousId":2701,"nextId":2713},{"id":2713,"name":"STATUS_CODES_BLOCKED","kind":16777216,"kindString":"Reference","flags":{},"target":1558,"permalink":"/apify-ts/api/next/basic-crawler#STATUS_CODES_BLOCKED","previousId":2647,"nextId":2653},{"id":2653,"name":"Session","kind":16777216,"kindString":"Reference","flags":{},"target":701,"permalink":"/apify-ts/api/next/basic-crawler#Session","previousId":2713,"nextId":2652},{"id":2652,"name":"SessionOptions","kind":16777216,"kindString":"Reference","flags":{},"target":687,"permalink":"/apify-ts/api/next/basic-crawler#SessionOptions","previousId":2653,"nextId":2657},{"id":2657,"name":"SessionPool","kind":16777216,"kindString":"Reference","flags":{},"target":786,"permalink":"/apify-ts/api/next/basic-crawler#SessionPool","previousId":2652,"nextId":2656},{"id":2656,"name":"SessionPoolOptions","kind":16777216,"kindString":"Reference","flags":{},"target":778,"permalink":"/apify-ts/api/next/basic-crawler#SessionPoolOptions","previousId":2657,"nextId":2651},{"id":2651,"name":"SessionState","kind":16777216,"kindString":"Reference","flags":{},"target":676,"permalink":"/apify-ts/api/next/basic-crawler#SessionState","previousId":2656,"nextId":2625},{"id":2625,"name":"Snapshotter","kind":16777216,"kindString":"Reference","flags":{},"target":352,"permalink":"/apify-ts/api/next/basic-crawler#Snapshotter","previousId":2651,"nextId":2624},{"id":2624,"name":"SnapshotterOptions","kind":16777216,"kindString":"Reference","flags":{},"target":341,"permalink":"/apify-ts/api/next/basic-crawler#SnapshotterOptions","previousId":2625,"nextId":2689},{"id":2689,"name":"Source","kind":16777216,"kindString":"Reference","flags":{},"target":1245,"permalink":"/apify-ts/api/next/basic-crawler#Source","previousId":2624,"nextId":2638},{"id":2638,"name":"StatisticPersistedState","kind":16777216,"kindString":"Reference","flags":{},"target":591,"permalink":"/apify-ts/api/next/basic-crawler#StatisticPersistedState","previousId":2689,"nextId":2639},{"id":2639,"name":"StatisticState","kind":16777216,"kindString":"Reference","flags":{},"target":612,"permalink":"/apify-ts/api/next/basic-crawler#StatisticState","previousId":2638,"nextId":2637},{"id":2637,"name":"Statistics","kind":16777216,"kindString":"Reference","flags":{},"target":536,"permalink":"/apify-ts/api/next/basic-crawler#Statistics","previousId":2639,"nextId":2705},{"id":2705,"name":"StorageManagerOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1427,"permalink":"/apify-ts/api/next/basic-crawler#StorageManagerOptions","previousId":2637,"nextId":2626},{"id":2626,"name":"SystemInfo","kind":16777216,"kindString":"Reference","flags":{},"target":441,"permalink":"/apify-ts/api/next/basic-crawler#SystemInfo","previousId":2705,"nextId":2629},{"id":2629,"name":"SystemStatus","kind":16777216,"kindString":"Reference","flags":{},"target":462,"permalink":"/apify-ts/api/next/basic-crawler#SystemStatus","previousId":2626,"nextId":2627},{"id":2627,"name":"SystemStatusOptions","kind":16777216,"kindString":"Reference","flags":{},"target":451,"permalink":"/apify-ts/api/next/basic-crawler#SystemStatusOptions","previousId":2629,"nextId":2747},{"id":2747,"name":"URL_NO_COMMAS_REGEX","kind":16777216,"kindString":"Reference","flags":{},"target":1781,"permalink":"/apify-ts/api/next/basic-crawler#URL_NO_COMMAS_REGEX","previousId":2627,"nextId":2748},{"id":2748,"name":"URL_WITH_COMMAS_REGEX","kind":16777216,"kindString":"Reference","flags":{},"target":1782,"permalink":"/apify-ts/api/next/basic-crawler#URL_WITH_COMMAS_REGEX","previousId":2747,"nextId":2729},{"id":2729,"name":"createProxyConfiguration","kind":16777216,"kindString":"Reference","flags":{},"target":1662,"permalink":"/apify-ts/api/next/basic-crawler#createProxyConfiguration","previousId":2748,"nextId":2741},{"id":2741,"name":"createRequestDebugInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1761,"permalink":"/apify-ts/api/next/basic-crawler#createRequestDebugInfo","previousId":2729,"nextId":2739},{"id":2739,"name":"downloadListOfUrls","kind":16777216,"kindString":"Reference","flags":{},"target":1755,"permalink":"/apify-ts/api/next/basic-crawler#downloadListOfUrls","previousId":2741,"nextId":2640},{"id":2640,"name":"enqueueLinks","kind":16777216,"kindString":"Reference","flags":{},"target":626,"permalink":"/apify-ts/api/next/basic-crawler#enqueueLinks","previousId":2739,"nextId":2621},{"id":2621,"name":"events","kind":16777216,"kindString":"Reference","flags":{},"target":235,"permalink":"/apify-ts/api/next/basic-crawler#events","previousId":2640,"nextId":2658},{"id":2658,"name":"getCookiesFromResponse","kind":16777216,"kindString":"Reference","flags":{},"target":949,"permalink":"/apify-ts/api/next/basic-crawler#getCookiesFromResponse","previousId":2621,"nextId":2675},{"id":2675,"name":"getInput","kind":16777216,"kindString":"Reference","flags":{},"target":1079,"permalink":"/apify-ts/api/next/basic-crawler#getInput","previousId":2658,"nextId":2736},{"id":2736,"name":"getMemoryInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1748,"permalink":"/apify-ts/api/next/basic-crawler#getMemoryInfo","previousId":2675,"nextId":2673},{"id":2673,"name":"getValue","kind":16777216,"kindString":"Reference","flags":{},"target":1069,"permalink":"/apify-ts/api/next/basic-crawler#getValue","previousId":2736,"nextId":2725},{"id":2725,"name":"hashPayload","kind":16777216,"kindString":"Reference","flags":{},"target":1623,"permalink":"/apify-ts/api/next/basic-crawler#hashPayload","previousId":2673,"nextId":2740},{"id":2740,"name":"htmlToText","kind":16777216,"kindString":"Reference","flags":{},"target":1758,"permalink":"/apify-ts/api/next/basic-crawler#htmlToText","previousId":2725,"nextId":2737},{"id":2737,"name":"isAtHome","kind":16777216,"kindString":"Reference","flags":{},"target":1750,"permalink":"/apify-ts/api/next/basic-crawler#isAtHome","previousId":2740,"nextId":2734},{"id":2734,"name":"isDocker","kind":16777216,"kindString":"Reference","flags":{},"target":1741,"permalink":"/apify-ts/api/next/basic-crawler#isDocker","previousId":2737,"nextId":2866},{"id":2866,"name":"log","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":73,"character":9}],"target":2566,"permalink":"/apify-ts/api/next/basic-crawler#log","previousId":2734,"nextId":2661},{"id":2661,"name":"openDataset","kind":16777216,"kindString":"Reference","flags":{},"target":964,"permalink":"/apify-ts/api/next/basic-crawler#openDataset","previousId":2866,"nextId":2672},{"id":2672,"name":"openKeyValueStore","kind":16777216,"kindString":"Reference","flags":{},"target":1065,"permalink":"/apify-ts/api/next/basic-crawler#openKeyValueStore","previousId":2661,"nextId":2683},{"id":2683,"name":"openRequestList","kind":16777216,"kindString":"Reference","flags":{},"target":1144,"permalink":"/apify-ts/api/next/basic-crawler#openRequestList","previousId":2672,"nextId":2692},{"id":2692,"name":"openRequestQueue","kind":16777216,"kindString":"Reference","flags":{},"target":1255,"permalink":"/apify-ts/api/next/basic-crawler#openRequestQueue","previousId":2683,"nextId":2654},{"id":2654,"name":"openSessionPool","kind":16777216,"kindString":"Reference","flags":{},"target":769,"permalink":"/apify-ts/api/next/basic-crawler#openSessionPool","previousId":2692,"nextId":2745},{"id":2745,"name":"purgeLocalStorage","kind":16777216,"kindString":"Reference","flags":{},"target":1777,"permalink":"/apify-ts/api/next/basic-crawler#purgeLocalStorage","previousId":2654,"nextId":2662},{"id":2662,"name":"pushData","kind":16777216,"kindString":"Reference","flags":{},"target":969,"permalink":"/apify-ts/api/next/basic-crawler#pushData","previousId":2745,"nextId":2753},{"id":2753,"name":"requestUtils","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils.ts","line":580,"character":12}],"target":1798,"permalink":"/apify-ts/api/next/basic-crawler#requestUtils","previousId":2662,"nextId":2674},{"id":2674,"name":"setValue","kind":16777216,"kindString":"Reference","flags":{},"target":1073,"permalink":"/apify-ts/api/next/basic-crawler#setValue","previousId":2753,"nextId":2738},{"id":2738,"name":"sleep","kind":16777216,"kindString":"Reference","flags":{},"target":1752,"permalink":"/apify-ts/api/next/basic-crawler#sleep","previousId":2674,"nextId":2754},{"id":2754,"name":"socialUtils","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils.ts","line":582,"character":12}],"target":1903,"permalink":"/apify-ts/api/next/basic-crawler#socialUtils","previousId":2738,"nextId":2867},{"id":2867,"name":"validators","kind":16777216,"kindString":"Reference","flags":{},"target":2567,"permalink":"/apify-ts/api/next/basic-crawler#validators","previousId":2754,"nextId":2856},{"id":2915,"name":"BasicCrawler","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"Provides a simple framework for parallel crawling of web pages.\\nThe URLs to crawl are fed either from a static list of URLs\\nor from a dynamic queue of URLs enabling recursive crawling of websites.","text":"`BasicCrawler` is a low-level tool that requires the user to implement the page\\ndownload and data extraction functionality themselves.\\nIf you want a crawler that already facilitates this functionality,\\nplease consider using {@link CheerioCrawler}, {@link PuppeteerCrawler} or {@link PlaywrightCrawler}.\\n\\n`BasicCrawler` invokes the user-provided {@link BasicCrawlerOptions.handleRequestFunction}\\nfor each {@link Request} object, which represents a single URL to crawl.\\nThe {@link Request} objects are fed from the {@link RequestList} or the {@link RequestQueue}\\ninstances provided by the {@link BasicCrawlerOptions.requestList} or {@link BasicCrawlerOptions.requestQueue}\\nconstructor options, respectively.\\n\\nIf both {@link BasicCrawlerOptions.requestList} and {@link BasicCrawlerOptions.requestQueue} options are used,\\nthe instance first processes URLs from the {@link RequestList} and automatically enqueues all of them\\nto {@link RequestQueue} before it starts their processing. This ensures that a single URL is not crawled multiple times.\\n\\nThe crawler finishes if there are no more {@link Request} objects to crawl.\\n\\nNew requests are only dispatched when there is enough free CPU and memory available,\\nusing the functionality provided by the {@link AutoscaledPool} class.\\nAll {@link AutoscaledPool} configuration options can be passed to the `autoscaledPoolOptions`\\nparameter of the `BasicCrawler` constructor. For user convenience, the `minConcurrency` and `maxConcurrency`\\n{@link AutoscaledPool} options are available directly in the `BasicCrawler` constructor.\\n\\n**Example usage:**\\n\\n```javascript\\n// Prepare a list of URLs to crawl\\nconst requestList = new Apify.RequestList({\\n  sources: [\\n      { url: \'http://www.example.com/page-1\' },\\n      { url: \'http://www.example.com/page-2\' },\\n  ],\\n});\\nawait requestList.initialize();\\n\\n// Crawl the URLs\\nconst crawler = new Apify.BasicCrawler({\\n    requestList,\\n    handleRequestFunction: async ({ request }) => {\\n        // \'request\' contains an instance of the Request class\\n        // Here we simply fetch the HTML of the page and store it to a dataset\\n        const { body } = await Apify.utils.requestAsBrowser(request);\\n        await Apify.pushData({\\n            url: request.url,\\n            html: body,\\n        })\\n    },\\n});\\n\\nawait crawler.run();\\n```"},"children":[{"id":2931,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":313,"character":4}],"signatures":[{"id":2932,"name":"new BasicCrawler","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"All `BasicCrawler` parameters are passed via an options object."},"typeParameter":[{"id":2933,"name":"Context","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":499,"typeArguments":[{"type":"reference","id":2933,"name":"Context"}],"name":"CrawlingContext"},"default":{"type":"reference","id":2872,"name":"BasicCrawlerCrawlingContext"}},{"id":2934,"name":"ErrorContext","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":504,"typeArguments":[{"type":"reference","id":2934,"name":"ErrorContext"}],"name":"CrawlerHandleFailedRequestInput"},"default":{"type":"reference","id":2881,"name":"BasicCrawlerHandleFailedRequestInput"}}],"parameters":[{"id":2935,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2899,"typeArguments":[{"type":"reference","id":2933,"name":"Context"},{"type":"reference","id":2934,"name":"ErrorContext"}],"name":"BasicCrawlerOptions"}}],"type":{"type":"reference","id":2915,"typeArguments":[{"type":"reference","id":2933,"name":"Context"},{"type":"reference","id":2934,"name":"ErrorContext"}],"name":"BasicCrawler"}}]},{"id":2940,"name":"autoscaledPool","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A reference to the underlying {@link AutoscaledPool} class that manages the concurrency of the crawler.\\nNote that this property is only initialized after calling the {@link BasicCrawler.run} function.\\nYou can use it to change the concurrency settings on the fly,\\nto pause the crawler by calling {@link AutoscaledPool.pause}\\nor to abort it by calling {@link AutoscaledPool.abort}."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":271,"character":4}],"type":{"type":"reference","id":256,"name":"AutoscaledPool"}},{"id":2937,"name":"requestList","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A reference to the underlying {@link RequestList} class that manages the crawler\'s {@link Request}s.\\nEither `requestList` or `requestQueue` option must be provided (or both).\\nOnly available if used by the crawler."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":248,"character":4}],"type":{"type":"reference","id":1158,"name":"RequestList"}},{"id":2938,"name":"requestQueue","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Dynamic queue of URLs to be processed. This is useful for recursive crawling of websites.\\nA reference to the underlying {@link RequestQueue} class that manages the crawler\'s {@link Request}s.\\nEither `requestList` or `requestQueue` option must be provided (or both).\\nOnly available if used by the crawler."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":256,"character":4}],"type":{"type":"reference","id":1270,"name":"RequestQueue"}},{"id":2939,"name":"sessionPool","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A reference to the underlying {@link SessionPool} class that manages the crawler\'s {@link Session}s.\\nOnly available if used by the crawler."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":262,"character":4}],"type":{"type":"reference","id":786,"name":"SessionPool"}},{"id":2936,"name":"stats","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"shortText":"Static list of URLs to be processed."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":241,"character":13}],"type":{"type":"reference","id":536,"name":"Statistics"}},{"id":2958,"name":"addRequests","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":458,"character":10}],"signatures":[{"id":2959,"name":"addRequests","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds requests to be processed by the crawler"},"parameters":[{"id":2960,"name":"requests","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The requests to add"},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","id":1649,"name":"RequestOptions"},{"type":"reference","id":1626,"name":"Request"}]}}},{"id":2961,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Options for the request queue\\n"},"type":{"type":"reference","id":1268,"name":"RequestQueueOperationOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1264,"name":"QueueOperationInfo"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":2956,"name":"getRequestQueue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":447,"character":10}],"signatures":[{"id":2957,"name":"getRequestQueue","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":1270,"name":"RequestQueue"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":2954,"name":"run","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":424,"character":10}],"signatures":[{"id":2955,"name":"run","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Runs the crawler. Returns a promise that gets resolved once all the requests are processed."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"groups":[{"title":"Constructors","kind":512,"children":[2931]},{"title":"Properties","kind":1024,"children":[2940,2937,2938,2939,2936]},{"title":"Methods","kind":2048,"children":[2958,2956,2954]}],"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":234,"character":13}],"typeParameter":[{"id":3006,"name":"Context","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":499,"name":"CrawlingContext"},"default":{"type":"reference","id":2872,"name":"BasicCrawlerCrawlingContext"}},{"id":3007,"name":"ErrorContext","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":504,"name":"CrawlerHandleFailedRequestInput"},"default":{"type":"reference","id":2881,"name":"BasicCrawlerHandleFailedRequestInput"}}],"extendedBy":[{"type":"reference","id":3352,"name":"BrowserCrawler"},{"type":"reference","id":3927,"name":"CheerioCrawler"}],"permalink":"/apify-ts/api/next/basic-crawler/class/BasicCrawler","nextId":2868},{"id":2872,"name":"BasicCrawlerCrawlingContext","kind":256,"kindString":"Interface","flags":{},"children":[{"id":2873,"name":"crawler","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":33,"character":4}],"type":{"type":"reference","id":2915,"typeArguments":[{"type":"reference","id":2872,"name":"BasicCrawlerCrawlingContext"},{"type":"reference","id":2881,"name":"BasicCrawlerHandleFailedRequestInput"}],"name":"BasicCrawler"}},{"id":2877,"name":"id","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":6,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":500,"name":"CrawlingContext.id"}},{"id":2880,"name":"proxyInfo","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An object with information about currently used proxy by the crawler\\nand configured by the {@link ProxyConfiguration} class."},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":17,"character":4}],"type":{"type":"reference","id":1678,"name":"ProxyInfo"},"inheritedFrom":{"type":"reference","id":503,"name":"CrawlingContext.proxyInfo"}},{"id":2878,"name":"request","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The original {@link Request} object."},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":10,"character":4}],"type":{"type":"reference","id":1626,"name":"Request"},"inheritedFrom":{"type":"reference","id":501,"name":"CrawlingContext.request"}},{"id":2879,"name":"session","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":11,"character":4}],"type":{"type":"reference","id":701,"name":"Session"},"inheritedFrom":{"type":"reference","id":502,"name":"CrawlingContext.session"}},{"id":2874,"name":"enqueueLinks","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":34,"character":4}],"signatures":[{"id":2875,"name":"enqueueLinks","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2876,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2888,"name":"BasicCrawlerEnqueueLinksOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1264,"name":"QueueOperationInfo"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"groups":[{"title":"Properties","kind":1024,"children":[2873,2877,2880,2878,2879]},{"title":"Methods","kind":2048,"children":[2874]}],"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":32,"character":17}],"extendedTypes":[{"type":"reference","id":499,"name":"CrawlingContext"}],"permalink":"/apify-ts/api/next/basic-crawler/interface/BasicCrawlerCrawlingContext","previousId":2756,"nextId":2881},{"id":2881,"name":"BasicCrawlerHandleFailedRequestInput","kind":256,"kindString":"Interface","flags":{},"children":[{"id":2882,"name":"crawler","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":38,"character":4}],"type":{"type":"reference","id":2915,"typeArguments":[{"type":"reference","id":2872,"name":"BasicCrawlerCrawlingContext"},{"type":"reference","id":2881,"name":"BasicCrawlerHandleFailedRequestInput"}],"name":"BasicCrawler"}},{"id":2883,"name":"error","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The Error thrown by `handleRequestFunction`."},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":24,"character":4}],"type":{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"},"inheritedFrom":{"type":"reference","id":505,"name":"CrawlerHandleFailedRequestInput.error"}},{"id":2884,"name":"id","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":6,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":506,"name":"CrawlerHandleFailedRequestInput.id"}},{"id":2887,"name":"proxyInfo","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An object with information about currently used proxy by the crawler\\nand configured by the {@link ProxyConfiguration} class."},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":17,"character":4}],"type":{"type":"reference","id":1678,"name":"ProxyInfo"},"inheritedFrom":{"type":"reference","id":509,"name":"CrawlerHandleFailedRequestInput.proxyInfo"}},{"id":2885,"name":"request","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The original {@link Request} object."},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":10,"character":4}],"type":{"type":"reference","id":1626,"name":"Request"},"inheritedFrom":{"type":"reference","id":507,"name":"CrawlerHandleFailedRequestInput.request"}},{"id":2886,"name":"session","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":11,"character":4}],"type":{"type":"reference","id":701,"name":"Session"},"inheritedFrom":{"type":"reference","id":508,"name":"CrawlerHandleFailedRequestInput.session"}}],"groups":[{"title":"Properties","kind":1024,"children":[2882,2883,2884,2887,2885,2886]}],"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":37,"character":17}],"extendedTypes":[{"type":"reference","id":504,"name":"CrawlerHandleFailedRequestInput"}],"permalink":"/apify-ts/api/next/basic-crawler/interface/BasicCrawlerHandleFailedRequestInput","previousId":2872,"nextId":2899},{"id":2899,"name":"BasicCrawlerOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":2907,"name":"autoscaledPoolOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Custom options passed to the underlying {@link AutoscaledPool} constructor.\\nNote that the `runTaskFunction` and `isTaskReadyFunction` options\\nare provided by the crawler and cannot be overridden.\\nHowever, you can provide a custom implementation of `isFinishedFunction`."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":146,"character":4}],"type":{"type":"reference","id":236,"name":"AutoscaledPoolOptions"}},{"id":2904,"name":"handleFailedRequestFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A function to handle requests that failed more than `option.maxRequestRetries` times.","text":"The function receives the following object as an argument:\\n```\\n{\\n    request: Request,\\n    error: Error,\\n    session: Session,\\n    crawler: BasicCrawler,\\n}\\n```\\nwhere the {@link Request} instance corresponds to the failed request, and the `Error` instance\\nrepresents the last error thrown during processing of the request.\\n\\nSee\\n[source code](https://github.com/apify/apify-js/blob/master/src/crawlers/basic_crawler.js#L11)\\nfor the default implementation of this function.\\n"},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":125,"character":4}],"type":{"type":"reference","id":2894,"typeArguments":[{"type":"reference","id":2914,"name":"ErrorContext"}],"name":"HandleFailedRequest"}},{"id":2900,"name":"handleRequestFunction","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"User-provided function that performs the logic of the crawler. It is called for each URL to crawl.","text":"The function receives the following object as an argument:\\n```\\n{\\n    request: Request,\\n    session: Session,\\n    crawler: BasicCrawler,\\n}\\n```\\nwhere the {@link Request} instance represents the URL to crawl.\\n\\nThe function must return a promise, which is then awaited by the crawler.\\n\\nIf the function throws an exception, the crawler will try to re-crawl the\\nrequest later, up to `option.maxRequestRetries` times.\\nIf all the retries fail, the crawler calls the function\\nprovided to the `handleFailedRequestFunction` parameter.\\nTo make this work, you should **always**\\nlet your function throw exceptions rather than catch them.\\nThe exceptions are logged to the request using the\\n{@link Request.pushErrorMessage} function.\\n"},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":86,"character":4}],"type":{"type":"reference","id":2889,"typeArguments":[{"type":"reference","id":2913,"name":"Context"}],"name":"HandleRequest"}},{"id":2903,"name":"handleRequestTimeoutSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Timeout in which the function passed as `handleRequestFunction` needs to finish, in seconds.","tags":[{"tag":"default","text":"60\\n"}]},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":104,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":2909,"name":"maxConcurrency","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets the maximum concurrency (parallelism) for the crawl. Shortcut to the corresponding {@link AutoscaledPool} option."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":159,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":2905,"name":"maxRequestRetries","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates how many times the request is retried if {@link handleRequestFunction} or {@link handlePageFunction} fails.","tags":[{"tag":"default","text":"3\\n"}]},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":131,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":2906,"name":"maxRequestsPerCrawl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum number of pages that the crawler will open. The crawl will stop when this limit is reached.\\nAlways set this value in order to prevent infinite loops in misconfigured crawlers.\\nNote that in cases of parallel crawling, the actual number of pages visited might be slightly higher than this value."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":138,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":2908,"name":"minConcurrency","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets the minimum concurrency (parallelism) for the crawl. Shortcut to the corresponding {@link AutoscaledPool} option.","text":"*WARNING:* If you set this value too high with respect to the available system memory and CPU, your crawler will run extremely slow or crash.\\nIf you\'re not sure, just keep the default value and the concurrency will scale up automatically.\\n"},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":154,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":2901,"name":"requestList","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Static list of URLs to be processed.\\nEither `requestList` or `requestQueue` option must be provided (or both)."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":92,"character":4}],"type":{"type":"reference","id":1158,"name":"RequestList"}},{"id":2902,"name":"requestQueue","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Dynamic queue of URLs to be processed. This is useful for recursive crawling of websites.\\nEither `requestList` or `requestQueue` option must be provided (or both)."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":98,"character":4}],"type":{"type":"reference","id":1270,"name":"RequestQueue"}},{"id":2911,"name":"sessionPoolOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The configuration options for {@link SessionPool} to use."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":170,"character":4}],"type":{"type":"reference","id":778,"name":"SessionPoolOptions"}},{"id":2910,"name":"useSessionPool","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Basic crawler will initialize the  {@link SessionPool} with the corresponding `sessionPoolOptions`.\\nThe session instance will be than available in the `handleRequestFunction`."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":165,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","kind":1024,"children":[2907,2904,2900,2903,2909,2905,2906,2908,2901,2902,2911,2910]}],"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":58,"character":17}],"typeParameter":[{"id":2913,"name":"Context","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":499,"name":"CrawlingContext"},"default":{"type":"reference","id":2872,"name":"BasicCrawlerCrawlingContext"}},{"id":2914,"name":"ErrorContext","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":504,"name":"CrawlerHandleFailedRequestInput"},"default":{"type":"reference","id":2881,"name":"BasicCrawlerHandleFailedRequestInput"}}],"permalink":"/apify-ts/api/next/basic-crawler/interface/BasicCrawlerOptions","previousId":2881,"nextId":3008},{"id":3008,"name":"CreateContextOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":3011,"name":"proxyInfo","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":780,"character":4}],"type":{"type":"reference","id":1678,"name":"ProxyInfo"}},{"id":3009,"name":"request","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":778,"character":4}],"type":{"type":"reference","id":1626,"name":"Request"}},{"id":3010,"name":"session","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":779,"character":4}],"type":{"type":"reference","id":701,"name":"Session"}}],"groups":[{"title":"Properties","kind":1024,"children":[3011,3009,3010]}],"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":777,"character":17}],"permalink":"/apify-ts/api/next/basic-crawler/interface/CreateContextOptions","previousId":2899,"nextId":2764},{"id":2764,"name":"RequestAsBrowserOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":2775,"name":"abortFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Function accepts `response` object as a single parameter and should return `true` or `false`.\\nIf function returns true, request gets aborted."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":76,"character":4}],"type":{"type":"reference","id":1899,"name":"AbortFunction"}},{"id":2782,"name":"agent","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"Agents","package":"got-cjs","name":"Agents"}]},"inheritedFrom":{"type":"reference","name":"Omit.agent"}},{"id":2839,"name":"allowGetBody","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.allowGetBody"}},{"id":2786,"name":"body","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"global.Buffer","package":"@types/node","name":"Buffer"},{"type":"reference","qualifiedName":"internal.Readable","package":"@types/node","name":"Readable"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Generator","package":"typescript","name":"Generator"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"AsyncGenerator","package":"typescript","name":"AsyncGenerator"},{"type":"reference","qualifiedName":"FormDataLike","package":"form-data-encoder","name":"FormDataLike"}]},"inheritedFrom":{"type":"reference","name":"Omit.body"}},{"id":2834,"name":"cache","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"boolean"},{"type":"reference","qualifiedName":"CacheableRequest.StorageAdapter","package":"@types/cacheable-request","name":"StorageAdapter"}]},"inheritedFrom":{"type":"reference","name":"Omit.cache"}},{"id":2847,"name":"cacheOptions","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"CacheOptions","package":"got-cjs","name":"CacheOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.cacheOptions"}},{"id":2830,"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}]},"inheritedFrom":{"type":"reference","name":"Omit.context"}},{"id":2788,"name":"cookieJar","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"PromiseCookieJar","package":"got-cjs","name":"PromiseCookieJar"},{"type":"reference","qualifiedName":"ToughCookieJar","package":"got-cjs","name":"ToughCookieJar"}]},"inheritedFrom":{"type":"reference","name":"Omit.cookieJar"}},{"id":2771,"name":"countryCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Two-letter ISO 3166 country code."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":49,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":2846,"name":"createConnection","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"CreateConnectionFunction","package":"got-cjs","name":"CreateConnectionFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.createConnection"}},{"id":2784,"name":"decompress","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.decompress"}},{"id":2829,"name":"dnsCache","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"},{"type":"reference","qualifiedName":"CacheableLookup","package":"cacheable-lookup","name":"default"}]},"inheritedFrom":{"type":"reference","name":"Omit.dnsCache"}},{"id":2791,"name":"dnsLookup","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":2792,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2793,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"tags":[{"tag":"see","text":"https://nodejs.org/api/dns.html#dns_dns_lookup_hostname_options_callback\\n"}]},"parameters":[{"id":2794,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2795,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}},{"id":2796,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":2797,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2798,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2799,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":2800,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2801,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":2802,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2803,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2804,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":2805,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2806,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2807,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":2808,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2809,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":2810,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2811,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2812,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"LookupOptions","package":"cacheable-lookup","name":"LookupOptions"},{"type":"reflection","declaration":{"id":2813,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":2814,"name":"all","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/cacheable-lookup/index.d.ts","line":104,"character":52}],"type":{"type":"literal","value":true}}],"groups":[{"title":"Properties","kind":1024,"children":[2814]}]}}]}},{"id":2815,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":2816,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2817,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2818,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":2819,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","qualifiedName":"EntryObject","package":"cacheable-lookup","name":"EntryObject"}}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":2820,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2821,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2822,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"LookupOptions","package":"cacheable-lookup","name":"LookupOptions"}},{"id":2823,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":2824,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2825,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2826,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":2827,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2828,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}]},"inheritedFrom":{"type":"reference","name":"Omit.dnsLookup"}},{"id":2841,"name":"dnsLookupIpVersion","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"DnsLookupIpVersion","package":"got-cjs","name":"DnsLookupIpVersion"},"inheritedFrom":{"type":"reference","name":"Omit.dnsLookupIpVersion"}},{"id":2849,"name":"encoding","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"global.BufferEncoding","package":"@types/node","name":"BufferEncoding"}]},"inheritedFrom":{"type":"reference","name":"Omit.encoding"}},{"id":2832,"name":"followRedirect","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.followRedirect"}},{"id":2787,"name":"form","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}]},"inheritedFrom":{"type":"reference","name":"Omit.form"}},{"id":2783,"name":"h2session","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ClientHttp2Session","package":"@types/node","name":"ClientHttp2Session"}]},"inheritedFrom":{"type":"reference","name":"Omit.h2session"}},{"id":2769,"name":"headerGeneratorOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Configuration to be used for generating correct browser headers.\\nSee the [`header-generator`](https://github.com/apify/header-generator) library."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":39,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"id":2767,"name":"headers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Additional HTTP headers to add. It\'s only recommended to use this option,\\nwith headers that are typically added by websites, such as cookies. Overriding\\ndefault browser headers will remove the masking this function provides."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"overwrites":{"type":"reference","name":"Omit.headers"}},{"id":2831,"name":"hooks","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/got-cjs/dist/source/core/options.d.ts","line":556,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"Hooks","package":"got-cjs","name":"Hooks"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"inheritedFrom":{"type":"reference","name":"Omit.hooks"}},{"id":2838,"name":"http2","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.http2"}},{"id":2848,"name":"https","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"HttpsOptions","package":"got-cjs","name":"HttpsOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.https"}},{"id":2789,"name":"ignoreInvalidCookies","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.ignoreInvalidCookies"}},{"id":2773,"name":"ignoreSslErrors","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to true, SSL/TLS certificate errors will be ignored."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":59,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2851,"name":"isStream","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.isStream"}},{"id":2779,"name":"json","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The `boolean` type for `json` is deprecated"},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":97,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}]}},{"id":2770,"name":"languageCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Two-letter ISO 639 language code."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":44,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":2845,"name":"localAddress","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.localAddress"}},{"id":2855,"name":"maxHeaderSize","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]},"inheritedFrom":{"type":"reference","name":"Omit.maxHeaderSize"}},{"id":2833,"name":"maxRedirects","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]},"inheritedFrom":{"type":"reference","name":"Omit.maxRedirects"}},{"id":2766,"name":"method","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"HTTP method."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":21,"character":4}],"type":{"type":"reference","qualifiedName":"Method","package":"got-cjs","name":"Method"},"overwrites":{"type":"reference","name":"Omit.method"}},{"id":2840,"name":"methodRewriting","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.methodRewriting"}},{"id":2853,"name":"pagination","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"PaginationOptions","package":"got-cjs","name":"PaginationOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.pagination"}},{"id":2842,"name":"parseJson","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ParseJsonFunction","package":"got-cjs","name":"ParseJsonFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.parseJson"}},{"id":2837,"name":"password","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.password"}},{"id":2785,"name":"prefixUrl","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"URL","package":"@types/node","name":"URL"}]},"inheritedFrom":{"type":"reference","name":"Omit.prefixUrl"}},{"id":2768,"name":"proxyUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An HTTP proxy to be passed down to the HTTP request. Supports proxy authentication with Basic Auth."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":2781,"name":"request","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"RequestFunction","package":"got-cjs","name":"RequestFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.request"}},{"id":2850,"name":"resolveBodyOnly","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.resolveBodyOnly"}},{"id":2852,"name":"responseType","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ResponseType","package":"got-cjs","name":"ResponseType"}]},"inheritedFrom":{"type":"reference","name":"Omit.responseType"}},{"id":2844,"name":"retry","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/got-cjs/dist/source/core/options.d.ts","line":557,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"RetryOptions","package":"got-cjs","name":"RetryOptions"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"inheritedFrom":{"type":"reference","name":"Omit.retry"}},{"id":2790,"name":"searchParams","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"SearchParameters","package":"got-cjs","name":"SearchParameters"},{"type":"reference","qualifiedName":"URLSearchParams","package":"@types/node","name":"URLSearchParams"}]},"inheritedFrom":{"type":"reference","name":"Omit.searchParams"}},{"id":2777,"name":"sessionToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A unique object used to generate browser headers. By default, new headers are generated on every call.\\nSet this option to make these headers persistent."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":90,"character":4}],"type":{"type":"intrinsic","name":"object"}},{"id":2854,"name":"setHost","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.setHost"}},{"id":2778,"name":"stream","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":92,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2843,"name":"stringifyJson","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"StringifyJsonFunction","package":"got-cjs","name":"StringifyJsonFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.stringifyJson"}},{"id":2835,"name":"throwHttpErrors","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.throwHttpErrors"}},{"id":2780,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"Delays","package":"got-cjs","name":"Delays"}]},"inheritedFrom":{"type":"reference","name":"Omit.timeout"}},{"id":2765,"name":"url","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":" URL of the target endpoint. Supports both HTTP and HTTPS schemes."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":16,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"Omit.url"}},{"id":2776,"name":"useHttp2","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to false, it will prevent use of HTTP2 requests. This is strongly discouraged. Websites\\nexpect HTTP2 connections, because browsers use HTTP2 by default. It will automatically downgrade\\nto HTTP/1.1 for websites that do not support HTTP2. For Node 10 this option is always set to `false`\\nbecause Node 10 does not support HTTP2 very well. Upgrade to Node 12 for better performance."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":84,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2774,"name":"useInsecureHttpParser","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Node.js\' HTTP parser is stricter than parsers used by web browsers, which prevents scraping of websites\\nwhose servers do not comply with HTTP specs, either by accident or due to some anti-scraping protections,\\ncausing e.g. the `invalid header value char` error. The `useInsecureHttpParser` option forces\\nthe HTTP parser to ignore certain errors which lets you scrape such websites.\\nHowever, it will also open your application to some security vulnerabilities,\\nalthough the risk should be negligible as these vulnerabilities mainly relate to server applications, not clients.\\nLearn more in this [blog post](https://snyk.io/blog/node-js-release-fixes-a-critical-http-security-vulnerability/)."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":70,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2772,"name":"useMobileVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true`, the function uses User-Agent of a mobile browser."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":54,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2836,"name":"username","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.username"}}],"groups":[{"title":"Properties","kind":1024,"children":[2775,2782,2839,2786,2834,2847,2830,2788,2771,2846,2784,2829,2791,2841,2849,2832,2787,2783,2769,2767,2831,2838,2848,2789,2773,2851,2779,2770,2845,2855,2833,2766,2840,2853,2842,2837,2785,2768,2781,2850,2852,2844,2790,2777,2854,2778,2843,2835,2780,2765,2776,2774,2772,2836]}],"sources":[{"fileName":"packages/core/src/utils_request.ts","line":12,"character":17}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"OptionsInit","package":"got-cjs","name":"GotOptionsInit"},{"type":"literal","value":"json"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"}],"permalink":"/apify-ts/api/next/basic-crawler/interface/RequestAsBrowserOptions","previousId":3008,"nextId":2710},{"id":2856,"name":"AbortFunction","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":100,"character":12}],"type":{"type":"reflection","declaration":{"id":2857,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":100,"character":28}],"signatures":[{"id":2858,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2859,"name":"response","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IncomingMessage","package":"@types/node","name":"IncomingMessage"}}],"type":{"type":"intrinsic","name":"boolean"}}]}},"permalink":"/apify-ts/api/next/basic-crawler#AbortFunction","previousId":2867,"nextId":2888},{"id":2888,"name":"BasicCrawlerEnqueueLinksOptions","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":41,"character":12}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":629,"name":"EnqueueLinksOptions"},{"type":"literal","value":"requestQueue"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"},"permalink":"/apify-ts/api/next/basic-crawler#BasicCrawlerEnqueueLinksOptions","previousId":2856,"nextId":2894},{"id":2894,"name":"HandleFailedRequest","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":56,"character":12}],"typeParameter":[{"id":2898,"name":"Inputs","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":504,"name":"CrawlerHandleFailedRequestInput"},"default":{"type":"reference","id":2881,"name":"BasicCrawlerHandleFailedRequestInput"}}],"type":{"type":"reflection","declaration":{"id":2895,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":56,"character":121}],"signatures":[{"id":2896,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2897,"name":"inputs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2898,"name":"Inputs"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable"}}]}},"permalink":"/apify-ts/api/next/basic-crawler#HandleFailedRequest","previousId":2888,"nextId":2889},{"id":2889,"name":"HandleRequest","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":54,"character":12}],"typeParameter":[{"id":2893,"name":"Context","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":499,"name":"CrawlingContext"},"default":{"type":"reference","id":2872,"name":"BasicCrawlerCrawlingContext"}}],"type":{"type":"reflection","declaration":{"id":2890,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":54,"character":91}],"signatures":[{"id":2891,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2892,"name":"inputs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2893,"name":"Context"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable"}}]}},"permalink":"/apify-ts/api/next/basic-crawler#HandleRequest","previousId":2894,"nextId":2760},{"id":2760,"name":"RequestAsBrowserResult","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":12}],"typeParameter":[{"id":2763,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"string"}}],"type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"IncomingMessage","package":"@types/node","name":"IncomingMessage"},{"type":"reflection","declaration":{"id":2761,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":2762,"name":"body","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":69}],"type":{"type":"reference","id":1806,"name":"T"}}],"groups":[{"title":"Properties","kind":1024,"children":[2762]}],"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":67}]}}]},"permalink":"/apify-ts/api/next/basic-crawler#RequestAsBrowserResult","previousId":2889,"nextId":3012},{"id":3012,"name":"BASIC_CRAWLER_TIMEOUT_BUFFER_SECS","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"Additional number of seconds used in CheerioCrawler and BrowserCrawler to set a reasonable\\nhandleRequestTimeoutSecs for BasicCrawler that would not impare functionality (not timeout before crawlers)."},"sources":[{"fileName":"packages/basic-crawler/src/internals/constants.ts","line":5,"character":13}],"type":{"type":"literal","value":10},"defaultValue":"10","permalink":"/apify-ts/api/next/basic-crawler#BASIC_CRAWLER_TIMEOUT_BUFFER_SECS","previousId":2760},{"id":2868,"name":"basicCrawlerEnqueueLinks","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":770,"character":22}],"signatures":[{"id":2869,"name":"basicCrawlerEnqueueLinks","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2870,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2888,"name":"BasicCrawlerEnqueueLinksOptions"}},{"id":2871,"name":"requestQueue","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1270,"name":"RequestQueue"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1264,"name":"QueueOperationInfo"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/basic-crawler/function/basicCrawlerEnqueueLinks","previousId":2915,"nextId":2756},{"id":2756,"name":"requestAsBrowser","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":144,"character":22}],"signatures":[{"id":2757,"name":"requestAsBrowser","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"**IMPORTANT:** This function uses an insecure version of HTTP parser by default\\nand also ignores SSL/TLS errors. This is very useful in scraping, because it allows bypassing\\ncertain anti-scraping walls, but it also exposes some vulnerability. For other than scraping\\nscenarios, please set `useInsecureHttpParser: false` and `ignoreSslErrors: false`.","text":"Sends a HTTP request that looks like a request sent by a web browser,\\nfully emulating browser\'s HTTP headers. It uses HTTP2 by default for Node 12+.\\n\\nThis function is useful for web scraping of websites that send the full HTML in the first response.\\nThanks to this function, the target web server has no simple way to find out the request\\nhasn\'t been sent by a human\'s web browser. Using a headless browser for such requests\\nis an order of magnitude more resource-intensive than this function.\\n\\nThe function emulates the Chrome and Firefox web browsers. If you want more control\\nover the browsers and their versions, use the `headerGeneratorOptions` property.\\nYou can find more info in the readme of the [`header-generator`](https://github.com/apify/header-generator) library.\\n\\nInternally, the function uses the [`got-scraping`](https://github.com/apify/got-scraping) library to perform the request.\\nAll `options` not recognized by this function are passed to it so see it for more details.\\n\\n**Example usage:**\\n```js\\nconst Apify = require(\'apify\');\\n\\nconst { utils: { requestAsBrowser } } = Apify;\\n\\n...\\n\\nconst response = await requestAsBrowser({ url: \'https://www.example.com/\' });\\n\\nconst html = response.body;\\nconst status = response.statusCode;\\nconst contentType = response.headers[\'content-type\'];\\n```\\n","returns":"The result can be various objects, but it will always be like a\\n[Node.js HTTP response stream](https://nodejs.org/api/http.html#http_class_http_incomingmessage)\\nwith a \'body\' property for the parsed response body, unless the \'stream\' option is used.\\n"},"typeParameter":[{"id":2758,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":2759,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"All `requestAsBrowser` configuration options.\\n"},"type":{"type":"reference","id":1807,"name":"RequestAsBrowserOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1803,"typeArguments":[{"type":"reference","id":1801,"name":"T"}],"name":"RequestAsBrowserResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/basic-crawler/function/requestAsBrowser","previousId":2868,"nextId":2872}],"groups":[{"title":"Classes","kind":128,"children":[2915],"categories":[{"title":"Crawlers","children":[2915]}]},{"title":"Functions","kind":64,"children":[2868,2756]},{"title":"Interfaces","kind":256,"children":[2872,2881,2899,3008,2764]},{"title":"References","kind":16777216,"children":[2710,2711,2719,2623,2622,2712,2746,2628,2707,2706,2631,2630,2655,2708,2666,2667,2671,2664,2665,2668,2670,2669,2751,2649,2709,2641,2752,2703,2679,2678,2682,2680,2676,2860,2862,2863,2864,2861,2865,2750,2733,2730,2731,2732,2720,2646,2721,2650,2728,2698,2702,2681,2726,2687,2686,2690,2688,2727,2700,2699,2701,2647,2713,2653,2652,2657,2656,2651,2625,2624,2689,2638,2639,2637,2705,2626,2629,2627,2747,2748,2729,2741,2739,2640,2621,2658,2675,2736,2673,2725,2740,2737,2734,2866,2661,2672,2683,2692,2654,2745,2662,2753,2674,2738,2754,2867]},{"title":"Type aliases","kind":4194304,"children":[2856,2888,2894,2889,2760]},{"title":"Variables","kind":32,"children":[3012]}],"sources":[{"fileName":"packages/basic-crawler/src/index.ts","line":1,"character":0}],"permalink":"/apify-ts/api/next/basic-crawler"},"urlSlug":"basic-crawler"}],"packageName":"@crawlers/basic","packageVersion":"1.0.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":4,"name":"@crawlers/browser","kind":2,"kindString":"Module","flags":{},"children":[{"id":3104,"name":"ACTOR_EVENT_NAMES_EX","kind":16777216,"kindString":"Reference","flags":{},"target":1549,"permalink":"/apify-ts/api/next/browser-crawler#ACTOR_EVENT_NAMES_EX","previousId":3158,"nextId":3105},{"id":3105,"name":"APIFY_API_BASE_URL","kind":16777216,"kindString":"Reference","flags":{},"target":1556,"permalink":"/apify-ts/api/next/browser-crawler#APIFY_API_BASE_URL","previousId":3104,"nextId":3113},{"id":3113,"name":"ActorRunWithOutput","kind":16777216,"kindString":"Reference","flags":{},"target":1578,"permalink":"/apify-ts/api/next/browser-crawler#ActorRunWithOutput","previousId":3105,"nextId":3017},{"id":3017,"name":"AutoscaledPool","kind":16777216,"kindString":"Reference","flags":{},"target":256,"permalink":"/apify-ts/api/next/browser-crawler#AutoscaledPool","previousId":3113,"nextId":3016},{"id":3016,"name":"AutoscaledPoolOptions","kind":16777216,"kindString":"Reference","flags":{},"target":236,"permalink":"/apify-ts/api/next/browser-crawler#AutoscaledPoolOptions","previousId":3017,"nextId":3271},{"id":3271,"name":"BASIC_CRAWLER_TIMEOUT_BUFFER_SECS","kind":16777216,"kindString":"Reference","flags":{},"target":3012,"permalink":"/apify-ts/api/next/browser-crawler#BASIC_CRAWLER_TIMEOUT_BUFFER_SECS","previousId":3016,"nextId":3269},{"id":3269,"name":"BasicCrawler","kind":16777216,"kindString":"Reference","flags":{},"target":2915,"permalink":"/apify-ts/api/next/browser-crawler#BasicCrawler","previousId":3271,"nextId":3263},{"id":3263,"name":"BasicCrawlerCrawlingContext","kind":16777216,"kindString":"Reference","flags":{},"target":2872,"permalink":"/apify-ts/api/next/browser-crawler#BasicCrawlerCrawlingContext","previousId":3269,"nextId":3265},{"id":3265,"name":"BasicCrawlerEnqueueLinksOptions","kind":16777216,"kindString":"Reference","flags":{},"target":2888,"permalink":"/apify-ts/api/next/browser-crawler#BasicCrawlerEnqueueLinksOptions","previousId":3263,"nextId":3264},{"id":3264,"name":"BasicCrawlerHandleFailedRequestInput","kind":16777216,"kindString":"Reference","flags":{},"target":2881,"permalink":"/apify-ts/api/next/browser-crawler#BasicCrawlerHandleFailedRequestInput","previousId":3265,"nextId":3268},{"id":3268,"name":"BasicCrawlerOptions","kind":16777216,"kindString":"Reference","flags":{},"target":2899,"permalink":"/apify-ts/api/next/browser-crawler#BasicCrawlerOptions","previousId":3264,"nextId":3106},{"id":3106,"name":"COUNTRY_CODE_REGEX","kind":16777216,"kindString":"Reference","flags":{},"target":1557,"permalink":"/apify-ts/api/next/browser-crawler#COUNTRY_CODE_REGEX","previousId":3268,"nextId":3140},{"id":3140,"name":"CheerioRoot","kind":16777216,"kindString":"Reference","flags":{},"target":1780,"permalink":"/apify-ts/api/next/browser-crawler#CheerioRoot","previousId":3106,"nextId":3022},{"id":3022,"name":"ClientInfo","kind":16777216,"kindString":"Reference","flags":{},"target":458,"permalink":"/apify-ts/api/next/browser-crawler#ClientInfo","previousId":3140,"nextId":3101},{"id":3101,"name":"Configuration","kind":16777216,"kindString":"Reference","flags":{},"target":1453,"permalink":"/apify-ts/api/next/browser-crawler#Configuration","previousId":3022,"nextId":3100},{"id":3100,"name":"ConfigurationOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1430,"permalink":"/apify-ts/api/next/browser-crawler#ConfigurationOptions","previousId":3101,"nextId":3025},{"id":3025,"name":"CrawlerHandleFailedRequestInput","kind":16777216,"kindString":"Reference","flags":{},"target":504,"permalink":"/apify-ts/api/next/browser-crawler#CrawlerHandleFailedRequestInput","previousId":3100,"nextId":3024},{"id":3024,"name":"CrawlingContext","kind":16777216,"kindString":"Reference","flags":{},"target":499,"permalink":"/apify-ts/api/next/browser-crawler#CrawlingContext","previousId":3025,"nextId":3270},{"id":3270,"name":"CreateContextOptions","kind":16777216,"kindString":"Reference","flags":{},"target":3008,"permalink":"/apify-ts/api/next/browser-crawler#CreateContextOptions","previousId":3024,"nextId":3049},{"id":3049,"name":"CreateSession","kind":16777216,"kindString":"Reference","flags":{},"target":772,"permalink":"/apify-ts/api/next/browser-crawler#CreateSession","previousId":3270,"nextId":3102},{"id":3102,"name":"DEFAULT_USER_AGENT","kind":16777216,"kindString":"Reference","flags":{},"target":1543,"permalink":"/apify-ts/api/next/browser-crawler#DEFAULT_USER_AGENT","previousId":3049,"nextId":3060},{"id":3060,"name":"Dataset","kind":16777216,"kindString":"Reference","flags":{},"target":992,"permalink":"/apify-ts/api/next/browser-crawler#Dataset","previousId":3102,"nextId":3061},{"id":3061,"name":"DatasetConsumer","kind":16777216,"kindString":"Reference","flags":{},"target":1034,"permalink":"/apify-ts/api/next/browser-crawler#DatasetConsumer","previousId":3060,"nextId":3065},{"id":3065,"name":"DatasetContent","kind":16777216,"kindString":"Reference","flags":{},"target":1057,"permalink":"/apify-ts/api/next/browser-crawler#DatasetContent","previousId":3061,"nextId":3058},{"id":3058,"name":"DatasetDataOptions","kind":16777216,"kindString":"Reference","flags":{},"target":973,"permalink":"/apify-ts/api/next/browser-crawler#DatasetDataOptions","previousId":3065,"nextId":3059},{"id":3059,"name":"DatasetIteratorOptions","kind":16777216,"kindString":"Reference","flags":{},"target":982,"permalink":"/apify-ts/api/next/browser-crawler#DatasetIteratorOptions","previousId":3058,"nextId":3062},{"id":3062,"name":"DatasetMapper","kind":16777216,"kindString":"Reference","flags":{},"target":1039,"permalink":"/apify-ts/api/next/browser-crawler#DatasetMapper","previousId":3059,"nextId":3064},{"id":3064,"name":"DatasetOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1052,"permalink":"/apify-ts/api/next/browser-crawler#DatasetOptions","previousId":3062,"nextId":3063},{"id":3063,"name":"DatasetReducer","kind":16777216,"kindString":"Reference","flags":{},"target":1045,"permalink":"/apify-ts/api/next/browser-crawler#DatasetReducer","previousId":3064,"nextId":3145},{"id":3145,"name":"DownloadListOfUrlsOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1791,"permalink":"/apify-ts/api/next/browser-crawler#DownloadListOfUrlsOptions","previousId":3063,"nextId":3043},{"id":3043,"name":"EVENT_SESSION_RETIRED","kind":16777216,"kindString":"Reference","flags":{},"target":674,"permalink":"/apify-ts/api/next/browser-crawler#EVENT_SESSION_RETIRED","previousId":3145,"nextId":3103},{"id":3103,"name":"EXIT_CODES","kind":16777216,"kindString":"Reference","flags":{},"target":1544,"permalink":"/apify-ts/api/next/browser-crawler#EXIT_CODES","previousId":3043,"nextId":3035},{"id":3035,"name":"EnqueueLinksOptions","kind":16777216,"kindString":"Reference","flags":{},"target":629,"permalink":"/apify-ts/api/next/browser-crawler#EnqueueLinksOptions","previousId":3103,"nextId":3146},{"id":3146,"name":"ExtractUrlsOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1795,"permalink":"/apify-ts/api/next/browser-crawler#ExtractUrlsOptions","previousId":3035,"nextId":3267},{"id":3267,"name":"HandleFailedRequest","kind":16777216,"kindString":"Reference","flags":{},"target":2894,"permalink":"/apify-ts/api/next/browser-crawler#HandleFailedRequest","previousId":3146,"nextId":3266},{"id":3266,"name":"HandleRequest","kind":16777216,"kindString":"Reference","flags":{},"target":2889,"permalink":"/apify-ts/api/next/browser-crawler#HandleRequest","previousId":3267,"nextId":3097},{"id":3097,"name":"IStorage","kind":16777216,"kindString":"Reference","flags":{},"target":1346,"permalink":"/apify-ts/api/next/browser-crawler#IStorage","previousId":3266,"nextId":3073},{"id":3073,"name":"KeyConsumer","kind":16777216,"kindString":"Reference","flags":{},"target":1128,"permalink":"/apify-ts/api/next/browser-crawler#KeyConsumer","previousId":3097,"nextId":3072},{"id":3072,"name":"KeyValueStore","kind":16777216,"kindString":"Reference","flags":{},"target":1090,"permalink":"/apify-ts/api/next/browser-crawler#KeyValueStore","previousId":3073,"nextId":3076},{"id":3076,"name":"KeyValueStoreIteratorOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1142,"permalink":"/apify-ts/api/next/browser-crawler#KeyValueStoreIteratorOptions","previousId":3072,"nextId":3074},{"id":3074,"name":"KeyValueStoreOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1135,"permalink":"/apify-ts/api/next/browser-crawler#KeyValueStoreOptions","previousId":3076,"nextId":3070},{"id":3070,"name":"KeyValueStoreValueTypes","kind":16777216,"kindString":"Reference","flags":{},"target":1082,"permalink":"/apify-ts/api/next/browser-crawler#KeyValueStoreValueTypes","previousId":3074,"nextId":3254},{"id":3254,"name":"Log","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":9}],"target":2114,"permalink":"/apify-ts/api/next/browser-crawler#Log","previousId":3070,"nextId":3256},{"id":3256,"name":"LogLevel","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":29}],"target":2181,"permalink":"/apify-ts/api/next/browser-crawler#LogLevel","previousId":3254,"nextId":3257},{"id":3257,"name":"Logger","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":39}],"target":2189,"permalink":"/apify-ts/api/next/browser-crawler#Logger","previousId":3256,"nextId":3258},{"id":3258,"name":"LoggerJson","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":47}],"target":2313,"permalink":"/apify-ts/api/next/browser-crawler#LoggerJson","previousId":3257,"nextId":3255},{"id":3255,"name":"LoggerOptions","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":14}],"target":2173,"permalink":"/apify-ts/api/next/browser-crawler#LoggerOptions","previousId":3258,"nextId":3259},{"id":3259,"name":"LoggerText","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":59}],"target":2438,"permalink":"/apify-ts/api/next/browser-crawler#LoggerText","previousId":3255,"nextId":3144},{"id":3144,"name":"MemoryInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1785,"permalink":"/apify-ts/api/next/browser-crawler#MemoryInfo","previousId":3259,"nextId":3127},{"id":3127,"name":"ProxyConfiguration","kind":16777216,"kindString":"Reference","flags":{},"target":1686,"permalink":"/apify-ts/api/next/browser-crawler#ProxyConfiguration","previousId":3144,"nextId":3124},{"id":3124,"name":"ProxyConfigurationFunction","kind":16777216,"kindString":"Reference","flags":{},"target":1667,"permalink":"/apify-ts/api/next/browser-crawler#ProxyConfigurationFunction","previousId":3127,"nextId":3125},{"id":3125,"name":"ProxyConfigurationOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1670,"permalink":"/apify-ts/api/next/browser-crawler#ProxyConfigurationOptions","previousId":3124,"nextId":3126},{"id":3126,"name":"ProxyInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1678,"permalink":"/apify-ts/api/next/browser-crawler#ProxyInfo","previousId":3125,"nextId":3114},{"id":3114,"name":"PseudoUrl","kind":16777216,"kindString":"Reference","flags":{},"target":1596,"permalink":"/apify-ts/api/next/browser-crawler#PseudoUrl","previousId":3126,"nextId":3040},{"id":3040,"name":"PseudoUrlInput","kind":16777216,"kindString":"Reference","flags":{},"target":652,"permalink":"/apify-ts/api/next/browser-crawler#PseudoUrlInput","previousId":3114,"nextId":3115},{"id":3115,"name":"PseudoUrlObject","kind":16777216,"kindString":"Reference","flags":{},"target":1609,"permalink":"/apify-ts/api/next/browser-crawler#PseudoUrlObject","previousId":3040,"nextId":3044},{"id":3044,"name":"PuppeteerCookie","kind":16777216,"kindString":"Reference","flags":{},"target":675,"permalink":"/apify-ts/api/next/browser-crawler#PuppeteerCookie","previousId":3115,"nextId":3122},{"id":3122,"name":"PushErrorMessageOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1660,"permalink":"/apify-ts/api/next/browser-crawler#PushErrorMessageOptions","previousId":3044,"nextId":3092},{"id":3092,"name":"QueueOperationInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1264,"permalink":"/apify-ts/api/next/browser-crawler#QueueOperationInfo","previousId":3122,"nextId":3096},{"id":3096,"name":"QueueOperationInfoOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1343,"permalink":"/apify-ts/api/next/browser-crawler#QueueOperationInfoOptions","previousId":3092,"nextId":3075},{"id":3075,"name":"RecordOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1140,"permalink":"/apify-ts/api/next/browser-crawler#RecordOptions","previousId":3096,"nextId":3120},{"id":3120,"name":"Request","kind":16777216,"kindString":"Reference","flags":{},"target":1626,"permalink":"/apify-ts/api/next/browser-crawler#Request","previousId":3075,"nextId":3081},{"id":3081,"name":"RequestList","kind":16777216,"kindString":"Reference","flags":{},"target":1158,"permalink":"/apify-ts/api/next/browser-crawler#RequestList","previousId":3120,"nextId":3080},{"id":3080,"name":"RequestListOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1151,"permalink":"/apify-ts/api/next/browser-crawler#RequestListOptions","previousId":3081,"nextId":3084},{"id":3084,"name":"RequestListSourcesFunction","kind":16777216,"kindString":"Reference","flags":{},"target":1249,"permalink":"/apify-ts/api/next/browser-crawler#RequestListSourcesFunction","previousId":3080,"nextId":3082},{"id":3082,"name":"RequestListState","kind":16777216,"kindString":"Reference","flags":{},"target":1241,"permalink":"/apify-ts/api/next/browser-crawler#RequestListState","previousId":3084,"nextId":3121},{"id":3121,"name":"RequestOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1649,"permalink":"/apify-ts/api/next/browser-crawler#RequestOptions","previousId":3082,"nextId":3094},{"id":3094,"name":"RequestQueue","kind":16777216,"kindString":"Reference","flags":{},"target":1270,"permalink":"/apify-ts/api/next/browser-crawler#RequestQueue","previousId":3121,"nextId":3093},{"id":3093,"name":"RequestQueueOperationOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1268,"permalink":"/apify-ts/api/next/browser-crawler#RequestQueueOperationOptions","previousId":3094,"nextId":3095},{"id":3095,"name":"RequestQueueOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1338,"permalink":"/apify-ts/api/next/browser-crawler#RequestQueueOptions","previousId":3093,"nextId":3041},{"id":3041,"name":"RequestTransform","kind":16777216,"kindString":"Reference","flags":{},"target":653,"permalink":"/apify-ts/api/next/browser-crawler#RequestTransform","previousId":3095,"nextId":3107},{"id":3107,"name":"STATUS_CODES_BLOCKED","kind":16777216,"kindString":"Reference","flags":{},"target":1558,"permalink":"/apify-ts/api/next/browser-crawler#STATUS_CODES_BLOCKED","previousId":3041,"nextId":3047},{"id":3047,"name":"Session","kind":16777216,"kindString":"Reference","flags":{},"target":701,"permalink":"/apify-ts/api/next/browser-crawler#Session","previousId":3107,"nextId":3046},{"id":3046,"name":"SessionOptions","kind":16777216,"kindString":"Reference","flags":{},"target":687,"permalink":"/apify-ts/api/next/browser-crawler#SessionOptions","previousId":3047,"nextId":3051},{"id":3051,"name":"SessionPool","kind":16777216,"kindString":"Reference","flags":{},"target":786,"permalink":"/apify-ts/api/next/browser-crawler#SessionPool","previousId":3046,"nextId":3050},{"id":3050,"name":"SessionPoolOptions","kind":16777216,"kindString":"Reference","flags":{},"target":778,"permalink":"/apify-ts/api/next/browser-crawler#SessionPoolOptions","previousId":3051,"nextId":3045},{"id":3045,"name":"SessionState","kind":16777216,"kindString":"Reference","flags":{},"target":676,"permalink":"/apify-ts/api/next/browser-crawler#SessionState","previousId":3050,"nextId":3019},{"id":3019,"name":"Snapshotter","kind":16777216,"kindString":"Reference","flags":{},"target":352,"permalink":"/apify-ts/api/next/browser-crawler#Snapshotter","previousId":3045,"nextId":3018},{"id":3018,"name":"SnapshotterOptions","kind":16777216,"kindString":"Reference","flags":{},"target":341,"permalink":"/apify-ts/api/next/browser-crawler#SnapshotterOptions","previousId":3019,"nextId":3083},{"id":3083,"name":"Source","kind":16777216,"kindString":"Reference","flags":{},"target":1245,"permalink":"/apify-ts/api/next/browser-crawler#Source","previousId":3018,"nextId":3032},{"id":3032,"name":"StatisticPersistedState","kind":16777216,"kindString":"Reference","flags":{},"target":591,"permalink":"/apify-ts/api/next/browser-crawler#StatisticPersistedState","previousId":3083,"nextId":3033},{"id":3033,"name":"StatisticState","kind":16777216,"kindString":"Reference","flags":{},"target":612,"permalink":"/apify-ts/api/next/browser-crawler#StatisticState","previousId":3032,"nextId":3031},{"id":3031,"name":"Statistics","kind":16777216,"kindString":"Reference","flags":{},"target":536,"permalink":"/apify-ts/api/next/browser-crawler#Statistics","previousId":3033,"nextId":3099},{"id":3099,"name":"StorageManagerOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1427,"permalink":"/apify-ts/api/next/browser-crawler#StorageManagerOptions","previousId":3031,"nextId":3020},{"id":3020,"name":"SystemInfo","kind":16777216,"kindString":"Reference","flags":{},"target":441,"permalink":"/apify-ts/api/next/browser-crawler#SystemInfo","previousId":3099,"nextId":3023},{"id":3023,"name":"SystemStatus","kind":16777216,"kindString":"Reference","flags":{},"target":462,"permalink":"/apify-ts/api/next/browser-crawler#SystemStatus","previousId":3020,"nextId":3021},{"id":3021,"name":"SystemStatusOptions","kind":16777216,"kindString":"Reference","flags":{},"target":451,"permalink":"/apify-ts/api/next/browser-crawler#SystemStatusOptions","previousId":3023,"nextId":3141},{"id":3141,"name":"URL_NO_COMMAS_REGEX","kind":16777216,"kindString":"Reference","flags":{},"target":1781,"permalink":"/apify-ts/api/next/browser-crawler#URL_NO_COMMAS_REGEX","previousId":3021,"nextId":3142},{"id":3142,"name":"URL_WITH_COMMAS_REGEX","kind":16777216,"kindString":"Reference","flags":{},"target":1782,"permalink":"/apify-ts/api/next/browser-crawler#URL_WITH_COMMAS_REGEX","previousId":3141,"nextId":3262},{"id":3262,"name":"basicCrawlerEnqueueLinks","kind":16777216,"kindString":"Reference","flags":{},"target":2868,"permalink":"/apify-ts/api/next/browser-crawler#basicCrawlerEnqueueLinks","previousId":3142,"nextId":3123},{"id":3123,"name":"createProxyConfiguration","kind":16777216,"kindString":"Reference","flags":{},"target":1662,"permalink":"/apify-ts/api/next/browser-crawler#createProxyConfiguration","previousId":3262,"nextId":3135},{"id":3135,"name":"createRequestDebugInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1761,"permalink":"/apify-ts/api/next/browser-crawler#createRequestDebugInfo","previousId":3123,"nextId":3133},{"id":3133,"name":"downloadListOfUrls","kind":16777216,"kindString":"Reference","flags":{},"target":1755,"permalink":"/apify-ts/api/next/browser-crawler#downloadListOfUrls","previousId":3135,"nextId":3034},{"id":3034,"name":"enqueueLinks","kind":16777216,"kindString":"Reference","flags":{},"target":626,"permalink":"/apify-ts/api/next/browser-crawler#enqueueLinks","previousId":3133,"nextId":3015},{"id":3015,"name":"events","kind":16777216,"kindString":"Reference","flags":{},"target":235,"permalink":"/apify-ts/api/next/browser-crawler#events","previousId":3034,"nextId":3052},{"id":3052,"name":"getCookiesFromResponse","kind":16777216,"kindString":"Reference","flags":{},"target":949,"permalink":"/apify-ts/api/next/browser-crawler#getCookiesFromResponse","previousId":3015,"nextId":3069},{"id":3069,"name":"getInput","kind":16777216,"kindString":"Reference","flags":{},"target":1079,"permalink":"/apify-ts/api/next/browser-crawler#getInput","previousId":3052,"nextId":3130},{"id":3130,"name":"getMemoryInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1748,"permalink":"/apify-ts/api/next/browser-crawler#getMemoryInfo","previousId":3069,"nextId":3067},{"id":3067,"name":"getValue","kind":16777216,"kindString":"Reference","flags":{},"target":1069,"permalink":"/apify-ts/api/next/browser-crawler#getValue","previousId":3130,"nextId":3119},{"id":3119,"name":"hashPayload","kind":16777216,"kindString":"Reference","flags":{},"target":1623,"permalink":"/apify-ts/api/next/browser-crawler#hashPayload","previousId":3067,"nextId":3134},{"id":3134,"name":"htmlToText","kind":16777216,"kindString":"Reference","flags":{},"target":1758,"permalink":"/apify-ts/api/next/browser-crawler#htmlToText","previousId":3119,"nextId":3131},{"id":3131,"name":"isAtHome","kind":16777216,"kindString":"Reference","flags":{},"target":1750,"permalink":"/apify-ts/api/next/browser-crawler#isAtHome","previousId":3134,"nextId":3128},{"id":3128,"name":"isDocker","kind":16777216,"kindString":"Reference","flags":{},"target":1741,"permalink":"/apify-ts/api/next/browser-crawler#isDocker","previousId":3131,"nextId":3260},{"id":3260,"name":"log","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":73,"character":9}],"target":2566,"permalink":"/apify-ts/api/next/browser-crawler#log","previousId":3128,"nextId":3055},{"id":3055,"name":"openDataset","kind":16777216,"kindString":"Reference","flags":{},"target":964,"permalink":"/apify-ts/api/next/browser-crawler#openDataset","previousId":3260,"nextId":3066},{"id":3066,"name":"openKeyValueStore","kind":16777216,"kindString":"Reference","flags":{},"target":1065,"permalink":"/apify-ts/api/next/browser-crawler#openKeyValueStore","previousId":3055,"nextId":3077},{"id":3077,"name":"openRequestList","kind":16777216,"kindString":"Reference","flags":{},"target":1144,"permalink":"/apify-ts/api/next/browser-crawler#openRequestList","previousId":3066,"nextId":3086},{"id":3086,"name":"openRequestQueue","kind":16777216,"kindString":"Reference","flags":{},"target":1255,"permalink":"/apify-ts/api/next/browser-crawler#openRequestQueue","previousId":3077,"nextId":3048},{"id":3048,"name":"openSessionPool","kind":16777216,"kindString":"Reference","flags":{},"target":769,"permalink":"/apify-ts/api/next/browser-crawler#openSessionPool","previousId":3086,"nextId":3139},{"id":3139,"name":"purgeLocalStorage","kind":16777216,"kindString":"Reference","flags":{},"target":1777,"permalink":"/apify-ts/api/next/browser-crawler#purgeLocalStorage","previousId":3048,"nextId":3056},{"id":3056,"name":"pushData","kind":16777216,"kindString":"Reference","flags":{},"target":969,"permalink":"/apify-ts/api/next/browser-crawler#pushData","previousId":3139,"nextId":3147},{"id":3147,"name":"requestUtils","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils.ts","line":580,"character":12}],"target":1798,"permalink":"/apify-ts/api/next/browser-crawler#requestUtils","previousId":3056,"nextId":3068},{"id":3068,"name":"setValue","kind":16777216,"kindString":"Reference","flags":{},"target":1073,"permalink":"/apify-ts/api/next/browser-crawler#setValue","previousId":3147,"nextId":3132},{"id":3132,"name":"sleep","kind":16777216,"kindString":"Reference","flags":{},"target":1752,"permalink":"/apify-ts/api/next/browser-crawler#sleep","previousId":3068,"nextId":3148},{"id":3148,"name":"socialUtils","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils.ts","line":582,"character":12}],"target":1903,"permalink":"/apify-ts/api/next/browser-crawler#socialUtils","previousId":3132,"nextId":3261},{"id":3261,"name":"validators","kind":16777216,"kindString":"Reference","flags":{},"target":2567,"permalink":"/apify-ts/api/next/browser-crawler#validators","previousId":3148,"nextId":3250},{"id":3352,"name":"BrowserCrawler","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"shortText":"Provides a simple framework for parallel crawling of web pages\\nusing headless browsers with [Puppeteer](https://github.com/puppeteer/puppeteer)\\nand [Playwright](https://github.com/microsoft/playwright).\\nThe URLs to crawl are fed either from a static list of URLs\\nor from a dynamic queue of URLs enabling recursive crawling of websites.","text":"Since `BrowserCrawler` uses headless or even headfull browsers to download web pages and extract data,\\nit is useful for crawling of websites that require to execute JavaScript.\\nIf the target website doesn\'t need JavaScript, consider using {@link CheerioCrawler},\\nwhich downloads the pages using raw HTTP requests and is about 10x faster.\\n\\nThe source URLs are represented using {@link Request} objects that are fed from\\n{@link RequestList} or {@link RequestQueue} instances provided by the {@link BrowserCrawlerOptions.requestList}\\nor {@link BrowserCrawlerOptions.requestQueue} constructor options, respectively.\\n\\nIf both {@link BrowserCrawlerOptions.requestList} and {@link BrowserCrawlerOptions.requestQueue} are used,\\nthe instance first processes URLs from the {@link RequestList} and automatically enqueues all of them\\nto {@link RequestQueue} before it starts their processing. This ensures that a single URL is not crawled multiple times.\\n\\nThe crawler finishes when there are no more {@link Request} objects to crawl.\\n\\n`BrowserCrawler` opens a new browser page (i.e. tab or window) for each {@link Request} object to crawl\\nand then calls the function provided by user as the {@link BrowserCrawlerOptions.handlePageFunction} option.\\n\\nNew pages are only opened when there is enough free CPU and memory available,\\nusing the functionality provided by the {@link AutoscaledPool} class.\\nAll {@link AutoscaledPool} configuration options can be passed to the {@link BrowserCrawlerOptions.autoscaledPoolOptions}\\nparameter of the `BrowserCrawler` constructor. For user convenience, the `minConcurrency` and `maxConcurrency`\\n{@link AutoscaledPoolOptions} are available directly in the `BrowserCrawler` constructor.\\n\\nNote that the pool of browser instances is internally managed by the [BrowserPool](https://github.com/apify/browser-pool) class.\\n```js\\nawait crawler.run();\\n```"},"children":[{"id":3433,"name":"autoscaledPool","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A reference to the underlying {@link AutoscaledPool} class that manages the concurrency of the crawler.\\nNote that this property is only initialized after calling the {@link BasicCrawler.run} function.\\nYou can use it to change the concurrency settings on the fly,\\nto pause the crawler by calling {@link AutoscaledPool.pause}\\nor to abort it by calling {@link AutoscaledPool.abort}."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":271,"character":4}],"type":{"type":"reference","id":256,"name":"AutoscaledPool"},"inheritedFrom":{"type":"reference","id":2940,"name":"BasicCrawler.autoscaledPool"}},{"id":3386,"name":"browserPool","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A reference to the underlying `BrowserPool` class that manages the crawler\'s browsers.\\nFor more information about it, see the [`browser-pool` module](https://github.com/apify/browser-pool).","tags":[{"tag":"todo","text":"the type is almost unusable with so many generic arguments, what should go there? we need inference\\n"}]},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":272,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"InternalBrowserPoolOptions"},{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"browserPlugins"},"objectType":{"type":"reference","name":"InternalBrowserPoolOptions"}},{"type":"tuple"}],"qualifiedName":"InferBrowserPluginArray","package":"browser-pool","name":"InferBrowserPluginArray"},{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"createController"},"objectType":{"type":"indexedAccess","indexType":{"type":"intrinsic","name":"number"},"objectType":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"browserPlugins"},"objectType":{"type":"reference","name":"InternalBrowserPoolOptions"}},{"type":"tuple"}],"qualifiedName":"InferBrowserPluginArray","package":"browser-pool","name":"InferBrowserPluginArray"}}}],"qualifiedName":"ReturnType","package":"typescript","name":"ReturnType"},{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"createLaunchContext"},"objectType":{"type":"indexedAccess","indexType":{"type":"intrinsic","name":"number"},"objectType":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"browserPlugins"},"objectType":{"type":"reference","name":"InternalBrowserPoolOptions"}},{"type":"tuple"}],"qualifiedName":"InferBrowserPluginArray","package":"browser-pool","name":"InferBrowserPluginArray"}}}],"qualifiedName":"ReturnType","package":"typescript","name":"ReturnType"},{"type":"indexedAccess","indexType":{"type":"literal","value":0},"objectType":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"newPage"},"objectType":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"createController"},"objectType":{"type":"indexedAccess","indexType":{"type":"intrinsic","name":"number"},"objectType":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"browserPlugins"},"objectType":{"type":"reference","name":"InternalBrowserPoolOptions"}},{"type":"tuple"}],"qualifiedName":"InferBrowserPluginArray","package":"browser-pool","name":"InferBrowserPluginArray"}}}],"qualifiedName":"ReturnType","package":"typescript","name":"ReturnType"}}],"qualifiedName":"Parameters","package":"typescript","name":"Parameters"}},{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"newPage"},"objectType":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"createController"},"objectType":{"type":"indexedAccess","indexType":{"type":"intrinsic","name":"number"},"objectType":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"browserPlugins"},"objectType":{"type":"reference","name":"InternalBrowserPoolOptions"}},{"type":"tuple"}],"qualifiedName":"InferBrowserPluginArray","package":"browser-pool","name":"InferBrowserPluginArray"}}}],"qualifiedName":"ReturnType","package":"typescript","name":"ReturnType"}}],"qualifiedName":"ReturnType","package":"typescript","name":"ReturnType"}],"qualifiedName":"UnwrapPromise","package":"browser-pool","name":"UnwrapPromise"}],"qualifiedName":"BrowserPool","package":"browser-pool","name":"BrowserPool"}},{"id":3387,"name":"launchContext","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":274,"character":4}],"type":{"type":"reference","id":3498,"typeArguments":[{"type":"reference","id":3381,"name":"LaunchOptions"},{"type":"intrinsic","name":"unknown"}],"name":"BrowserLaunchContext"}},{"id":3385,"name":"proxyConfiguration","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A reference to the underlying {@link ProxyConfiguration} class that manages the crawler\'s proxies.\\nOnly available if used by the crawler."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":265,"character":4}],"type":{"type":"reference","id":1686,"name":"ProxyConfiguration"}},{"id":3430,"name":"requestList","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A reference to the underlying {@link RequestList} class that manages the crawler\'s {@link Request}s.\\nEither `requestList` or `requestQueue` option must be provided (or both).\\nOnly available if used by the crawler."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":248,"character":4}],"type":{"type":"reference","id":1158,"name":"RequestList"},"inheritedFrom":{"type":"reference","id":2937,"name":"BasicCrawler.requestList"}},{"id":3431,"name":"requestQueue","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Dynamic queue of URLs to be processed. This is useful for recursive crawling of websites.\\nA reference to the underlying {@link RequestQueue} class that manages the crawler\'s {@link Request}s.\\nEither `requestList` or `requestQueue` option must be provided (or both).\\nOnly available if used by the crawler."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":256,"character":4}],"type":{"type":"reference","id":1270,"name":"RequestQueue"},"inheritedFrom":{"type":"reference","id":2938,"name":"BasicCrawler.requestQueue"}},{"id":3432,"name":"sessionPool","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A reference to the underlying {@link SessionPool} class that manages the crawler\'s {@link Session}s.\\nOnly available if used by the crawler."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":262,"character":4}],"type":{"type":"reference","id":786,"name":"SessionPool"},"inheritedFrom":{"type":"reference","id":2939,"name":"BasicCrawler.sessionPool"}},{"id":3429,"name":"stats","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"shortText":"Static list of URLs to be processed."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":241,"character":13}],"type":{"type":"reference","id":536,"name":"Statistics"},"inheritedFrom":{"type":"reference","id":2936,"name":"BasicCrawler.stats"}},{"id":3451,"name":"addRequests","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":458,"character":10}],"signatures":[{"id":3452,"name":"addRequests","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds requests to be processed by the crawler"},"parameters":[{"id":3453,"name":"requests","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The requests to add"},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","id":1649,"name":"RequestOptions"},{"type":"reference","id":1626,"name":"Request"}]}}},{"id":3454,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Options for the request queue\\n"},"type":{"type":"reference","id":1268,"name":"RequestQueueOperationOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1264,"name":"QueueOperationInfo"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","id":2959,"name":"BasicCrawler.addRequests"}}],"inheritedFrom":{"type":"reference","id":2958,"name":"BasicCrawler.addRequests"}},{"id":3449,"name":"getRequestQueue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":447,"character":10}],"signatures":[{"id":3450,"name":"getRequestQueue","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":1270,"name":"RequestQueue"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","id":2957,"name":"BasicCrawler.getRequestQueue"}}],"inheritedFrom":{"type":"reference","id":2956,"name":"BasicCrawler.getRequestQueue"}},{"id":3447,"name":"run","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":424,"character":10}],"signatures":[{"id":3448,"name":"run","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Runs the crawler. Returns a promise that gets resolved once all the requests are processed."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","id":2955,"name":"BasicCrawler.run"}}],"inheritedFrom":{"type":"reference","id":2954,"name":"BasicCrawler.run"}}],"groups":[{"title":"Properties","kind":1024,"children":[3433,3386,3387,3385,3430,3431,3432,3429]},{"title":"Methods","kind":2048,"children":[3451,3449,3447]}],"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":255,"character":22}],"typeParameter":[{"id":3494,"name":"InternalBrowserPoolOptions","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","qualifiedName":"BrowserPoolOptions","package":"browser-pool","name":"BrowserPoolOptions"},"default":{"type":"reference","qualifiedName":"BrowserPoolOptions","package":"browser-pool","name":"BrowserPoolOptions"}},{"id":3495,"name":"LaunchOptions","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"reference","name":"Dictionary"}},{"id":3496,"name":"Context","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":3277,"name":"BrowserCrawlingContext"},"default":{"type":"reference","id":3277,"name":"BrowserCrawlingContext"}},{"id":3497,"name":"GoToOptions","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"PropertyKey","package":"typescript","name":"PropertyKey"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"default":{"type":"reference","name":"Dictionary"}}],"extendedTypes":[{"type":"reference","id":2915,"typeArguments":[{"type":"reference","name":"Context"}],"name":"BasicCrawler"}],"extendedBy":[{"type":"reference","id":4636,"name":"PuppeteerCrawler"},{"type":"reference","id":5332,"name":"PlaywrightCrawler"}],"permalink":"/apify-ts/api/next/browser-crawler/class/BrowserCrawler","nextId":3272},{"id":3292,"name":"BrowserCrawlerHandleFailedRequestInput","kind":256,"kindString":"Interface","flags":{},"children":[{"id":3293,"name":"crawler","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":51,"character":4}],"type":{"type":"reference","id":3352,"typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"CommonLibrary","package":"browser-pool","name":"CommonLibrary"},{"type":"intrinsic","name":"unknown"},{"type":"reference","qualifiedName":"CommonBrowser","package":"browser-pool","name":"CommonBrowser"},{"type":"intrinsic","name":"unknown"},{"type":"reference","qualifiedName":"CommonPage","package":"browser-pool","name":"CommonPage"}],"qualifiedName":"BrowserPlugin","package":"browser-pool","name":"BrowserPlugin"}],"qualifiedName":"BrowserPoolOptions","package":"browser-pool","name":"BrowserPoolOptions"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"},{"type":"reference","id":3277,"typeArguments":[{"type":"reference","qualifiedName":"CommonPage","package":"browser-pool","name":"CommonPage"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Dictionary"},{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"CommonLibrary","package":"browser-pool","name":"CommonLibrary"},{"type":"intrinsic","name":"unknown"},{"type":"reference","qualifiedName":"CommonBrowser","package":"browser-pool","name":"CommonBrowser"},{"type":"intrinsic","name":"unknown"},{"type":"reference","qualifiedName":"CommonPage","package":"browser-pool","name":"CommonPage"}],"qualifiedName":"BrowserController","package":"browser-pool","name":"BrowserController"}],"name":"BrowserCrawlingContext"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}],"name":"BrowserCrawler"}},{"id":3294,"name":"error","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The Error thrown by `handleRequestFunction`."},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":24,"character":4}],"type":{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"},"inheritedFrom":{"type":"reference","id":505,"name":"CrawlerHandleFailedRequestInput.error"}},{"id":3295,"name":"id","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":6,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":506,"name":"CrawlerHandleFailedRequestInput.id"}},{"id":3298,"name":"proxyInfo","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An object with information about currently used proxy by the crawler\\nand configured by the {@link ProxyConfiguration} class."},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":17,"character":4}],"type":{"type":"reference","id":1678,"name":"ProxyInfo"},"inheritedFrom":{"type":"reference","id":509,"name":"CrawlerHandleFailedRequestInput.proxyInfo"}},{"id":3296,"name":"request","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The original {@link Request} object."},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":10,"character":4}],"type":{"type":"reference","id":1626,"name":"Request"},"inheritedFrom":{"type":"reference","id":507,"name":"CrawlerHandleFailedRequestInput.request"}},{"id":3297,"name":"session","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":11,"character":4}],"type":{"type":"reference","id":701,"name":"Session"},"inheritedFrom":{"type":"reference","id":508,"name":"CrawlerHandleFailedRequestInput.session"}}],"groups":[{"title":"Properties","kind":1024,"children":[3293,3294,3295,3298,3296,3297]}],"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":50,"character":17}],"extendedTypes":[{"type":"reference","id":504,"name":"CrawlerHandleFailedRequestInput"}],"permalink":"/apify-ts/api/next/browser-crawler/interface/BrowserCrawlerHandleFailedRequestInput","previousId":3150,"nextId":3323},{"id":3323,"name":"BrowserCrawlerOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":3340,"name":"autoscaledPoolOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Custom options passed to the underlying {@link AutoscaledPool} constructor.\\nNote that the `runTaskFunction` and `isTaskReadyFunction` options\\nare provided by the crawler and cannot be overridden.\\nHowever, you can provide a custom implementation of `isFinishedFunction`."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":146,"character":4}],"type":{"type":"reference","id":236,"name":"AutoscaledPoolOptions"},"inheritedFrom":{"type":"reference","name":"Omit.autoscaledPoolOptions"}},{"id":3328,"name":"browserPoolOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Custom options passed to the underlying [`BrowserPool`](https://github.com/apify/browser-pool#BrowserPool) constructor.\\nYou can tweak those to fine-tune browser management."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":154,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"CommonLibrary","package":"browser-pool","name":"CommonLibrary"},{"type":"intrinsic","name":"unknown"},{"type":"reference","qualifiedName":"CommonBrowser","package":"browser-pool","name":"CommonBrowser"},{"type":"intrinsic","name":"unknown"},{"type":"reference","qualifiedName":"CommonPage","package":"browser-pool","name":"CommonPage"}],"qualifiedName":"BrowserPlugin","package":"browser-pool","name":"BrowserPlugin"}],"qualifiedName":"BrowserPoolOptions","package":"browser-pool","name":"BrowserPoolOptions"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","id":3350,"name":"__BrowserControllerReturn"},{"type":"reference","id":3351,"name":"__LaunchContextReturn"},{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"newPage"},"objectType":{"type":"reference","id":3350,"name":"__BrowserControllerReturn"}}],"qualifiedName":"ReturnType","package":"typescript","name":"ReturnType"}],"qualifiedName":"UnwrapPromise","package":"browser-pool","name":"UnwrapPromise"}],"qualifiedName":"BrowserPoolHooks","package":"browser-pool","name":"BrowserPoolHooks"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"}]}},{"id":3326,"name":"gotoFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Navigation function for corresponding library. `page.goto(url)` is supported by both `playwright` and `puppeteer`."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":127,"character":4}],"type":{"type":"reference","id":3316,"typeArguments":[{"type":"reference","id":3346,"name":"Context"},{"type":"reference","id":3347,"name":"GoToOptions"}],"name":"GotoFunction"}},{"id":3334,"name":"gotoTimeoutSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"deprecated","text":"Use `navigationTimeoutSecs` instead\\n"}]},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":209,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":3327,"name":"handleFailedRequestFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A function to handle requests that failed more than `option.maxRequestRetries` times.","text":"The function receives the following object as an argument:\\n```\\n{\\n    request: Request,\\n    response: Response,\\n    page: Page,\\n    browserPool: BrowserPool,\\n    autoscaledPool: AutoscaledPool,\\n    session: Session,\\n    browserController: BrowserController,\\n    proxyInfo: ProxyInfo,\\n}\\n```\\nWhere the {@link Request} instance corresponds to the failed request, and the `Error` instance\\nrepresents the last error thrown during processing of the request.\\n"},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":148,"character":4}],"type":{"type":"reference","id":3299,"name":"BrowserCrawlerHandleFailedRequest"}},{"id":3324,"name":"handlePageFunction","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Function that is called to process each request.\\nIt is passed an object with the following fields:","text":"```\\n{\\n  request: Request,\\n  response: Response,\\n  page: Page,\\n  session: Session,\\n  browserController: BrowserController,\\n  proxyInfo: ProxyInfo,\\n  crawler: BrowserCrawler,\\n}\\n```\\n\\n`request` is an instance of the {@link Request} object with details about the URL to open, HTTP method etc.\\n`page` is an instance of the `Puppeteer`\\n[`Page`](https://pptr.dev/#?product=Puppeteer&show=api-class-page) or `Playwright`\\n[`Page`](https://playwright.dev/docs/api/class-page)\\n`browserPool` is an instance of the\\n[`BrowserPool`](https://github.com/apify/browser-pool#BrowserPool),\\n`browserController` is an instance of the\\n[`BrowserController`](https://github.com/apify/browser-pool#browsercontroller),\\n`response` is an instance of the `Puppeteer`\\n[`Response`](https://pptr.dev/#?product=Puppeteer&show=api-class-response) or `Playwright`\\n[`Response`](https://playwright.dev/docs/api/class-response),\\nwhich is the main resource response as returned by `page.goto(request.url)`.\\nThe function must return a promise, which is then awaited by the crawler.\\n\\nIf the function throws an exception, the crawler will try to re-crawl the\\nrequest later, up to `option.maxRequestRetries` times.\\nIf all the retries fail, the crawler calls the function\\nprovided to the `handleFailedRequestFunction` parameter.\\nTo make this work, you should **always**\\nlet your function throw exceptions rather than catch them.\\nThe exceptions are logged to the request using the\\n{@link Request.pushErrorMessage} function.\\n"},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":117,"character":4}],"type":{"type":"reference","id":3303,"typeArguments":[{"type":"reference","id":3346,"name":"Context"}],"name":"BrowserCrawlerHandleRequest"}},{"id":3325,"name":"handlePageTimeoutSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Timeout in which the function passed as `handlePageFunction` needs to finish, in seconds."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":122,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":3333,"name":"handleRequestTimeoutSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Timeout in which the function passed as `handleRequestFunction` needs to finish, in seconds."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":204,"character":4}],"type":{"type":"intrinsic","name":"number"},"overwrites":{"type":"reference","name":"Omit.handleRequestTimeoutSecs"}},{"id":3342,"name":"maxConcurrency","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets the maximum concurrency (parallelism) for the crawl. Shortcut to the corresponding {@link AutoscaledPool} option."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":159,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Omit.maxConcurrency"}},{"id":3338,"name":"maxRequestRetries","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates how many times the request is retried if {@link handleRequestFunction} or {@link handlePageFunction} fails.","tags":[{"tag":"default","text":"3\\n"}]},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":131,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Omit.maxRequestRetries"}},{"id":3339,"name":"maxRequestsPerCrawl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum number of pages that the crawler will open. The crawl will stop when this limit is reached.\\nAlways set this value in order to prevent infinite loops in misconfigured crawlers.\\nNote that in cases of parallel crawling, the actual number of pages visited might be slightly higher than this value."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":138,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Omit.maxRequestsPerCrawl"}},{"id":3341,"name":"minConcurrency","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets the minimum concurrency (parallelism) for the crawl. Shortcut to the corresponding {@link AutoscaledPool} option.","text":"*WARNING:* If you set this value too high with respect to the available system memory and CPU, your crawler will run extremely slow or crash.\\nIf you\'re not sure, just keep the default value and the concurrency will scale up automatically.\\n"},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":154,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Omit.minConcurrency"}},{"id":3332,"name":"navigationTimeoutSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Timeout in which page navigation needs to finish, in seconds."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":199,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":3335,"name":"persistCookiesPerSession","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If cookies should be persisted between sessions.\\nThis can only be used when `useSessionPool` is set to `true`."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":215,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3331,"name":"postNavigationHooks","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Async functions that are sequentially evaluated after the navigation. Good for checking if the navigation was successful.\\nThe function accepts `crawlingContext` as the only parameter.\\nExample:\\n```\\npostNavigationHooks: [\\n    async (crawlingContext) => {\\n        const { page } = crawlingContext;\\n        if (hasCaptcha(page)) {\\n            await solveCaptcha (page);\\n        }\\n    },\\n]\\n```"},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":194,"character":4}],"type":{"type":"array","elementType":{"type":"reference","id":3309,"typeArguments":[{"type":"reference","id":3346,"name":"Context"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}],"name":"BrowserHook"}}},{"id":3330,"name":"preNavigationHooks","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Async functions that are sequentially evaluated before the navigation. Good for setting additional cookies\\nor browser properties before navigation. The function accepts two parameters, `crawlingContext` and `gotoOptions`,\\nwhich are passed to the `page.goto()` function the crawler calls to navigate.\\nExample:\\n```\\npreNavigationHooks: [\\n    async (crawlingContext, gotoOptions) => {\\n        const { page } = crawlingContext;\\n        await page.evaluate((attr) => { window.foo = attr; }, \'bar\');\\n    },\\n]\\n```"},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":177,"character":4}],"type":{"type":"array","elementType":{"type":"reference","id":3309,"typeArguments":[{"type":"reference","id":3346,"name":"Context"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}],"name":"BrowserHook"}}},{"id":3329,"name":"proxyConfiguration","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set, the crawler will be configured for all connections to use\\n[Apify Proxy](https://console.apify.com/proxy) or your own Proxy URLs provided and rotated according to the configuration.\\nFor more information, see the [documentation](https://docs.apify.com/proxy)."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":161,"character":4}],"type":{"type":"reference","id":1686,"name":"ProxyConfiguration"}},{"id":3337,"name":"requestList","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Static list of URLs to be processed.\\nEither `requestList` or `requestQueue` option must be provided (or both)."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":92,"character":4}],"type":{"type":"reference","id":1158,"name":"RequestList"},"inheritedFrom":{"type":"reference","name":"Omit.requestList"}},{"id":3336,"name":"requestQueue","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Dynamic queue of URLs to be processed. This is useful for recursive crawling of websites.\\nEither `requestList` or `requestQueue` option must be provided (or both)."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":98,"character":4}],"type":{"type":"reference","id":1270,"name":"RequestQueue"},"inheritedFrom":{"type":"reference","name":"Omit.requestQueue"}},{"id":3344,"name":"sessionPoolOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The configuration options for {@link SessionPool} to use."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":170,"character":4}],"type":{"type":"reference","id":778,"name":"SessionPoolOptions"},"inheritedFrom":{"type":"reference","name":"Omit.sessionPoolOptions"}},{"id":3343,"name":"useSessionPool","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Basic crawler will initialize the  {@link SessionPool} with the corresponding `sessionPoolOptions`.\\nThe session instance will be than available in the `handleRequestFunction`."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":165,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"Omit.useSessionPool"}}],"groups":[{"title":"Properties","kind":1024,"children":[3340,3328,3326,3334,3327,3324,3325,3333,3342,3338,3339,3341,3332,3335,3331,3330,3329,3337,3336,3344,3343]}],"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":70,"character":17}],"typeParameter":[{"id":3346,"name":"Context","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":3277,"name":"BrowserCrawlingContext"},"default":{"type":"reference","id":3277,"name":"BrowserCrawlingContext"}},{"id":3347,"name":"GoToOptions","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"PropertyKey","package":"typescript","name":"PropertyKey"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"},{"type":"intrinsic","name":"undefined"}]},"default":{"type":"reference","name":"Dictionary"}},{"id":3348,"name":"InternalBrowserPoolOptions","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","qualifiedName":"BrowserPoolOptions","package":"browser-pool","name":"BrowserPoolOptions"},"default":{"type":"reference","qualifiedName":"BrowserPoolOptions","package":"browser-pool","name":"BrowserPoolOptions"}},{"id":3349,"name":"__BrowserPlugins","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","qualifiedName":"BrowserPlugin","package":"browser-pool","name":"BrowserPlugin"}},"default":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"browserPlugins"},"objectType":{"type":"reference","id":3348,"name":"InternalBrowserPoolOptions"}}],"qualifiedName":"InferBrowserPluginArray","package":"browser-pool","name":"InferBrowserPluginArray"}},{"id":3350,"name":"__BrowserControllerReturn","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","qualifiedName":"BrowserController","package":"browser-pool","name":"BrowserController"},"default":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"createController"},"objectType":{"type":"indexedAccess","indexType":{"type":"intrinsic","name":"number"},"objectType":{"type":"reference","id":3349,"name":"__BrowserPlugins"}}}],"qualifiedName":"ReturnType","package":"typescript","name":"ReturnType"}},{"id":3351,"name":"__LaunchContextReturn","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","qualifiedName":"LaunchContext","package":"browser-pool","name":"LaunchContext"},"default":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"createLaunchContext"},"objectType":{"type":"indexedAccess","indexType":{"type":"intrinsic","name":"number"},"objectType":{"type":"reference","id":3349,"name":"__BrowserPlugins"}}}],"qualifiedName":"ReturnType","package":"typescript","name":"ReturnType"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","id":2899,"name":"BasicCrawlerOptions"},{"type":"union","types":[{"type":"literal","value":"handleRequestFunction"},{"type":"literal","value":"handleFailedRequestFunction"}]}],"qualifiedName":"Omit","package":"typescript","name":"Omit"}],"extendedBy":[{"type":"reference","id":4602,"name":"PuppeteerCrawlerOptions"},{"type":"reference","id":5133,"name":"PlaywrightCrawlerOptions"}],"permalink":"/apify-ts/api/next/browser-crawler/interface/BrowserCrawlerOptions","previousId":3292,"nextId":3277},{"id":3277,"name":"BrowserCrawlingContext","kind":256,"kindString":"Interface","flags":{},"children":[{"id":3278,"name":"browserController","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":43,"character":4}],"type":{"type":"reference","id":3291,"name":"ProvidedController"}},{"id":3281,"name":"crawler","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":46,"character":4}],"type":{"type":"reference","id":3352,"typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"CommonLibrary","package":"browser-pool","name":"CommonLibrary"},{"type":"intrinsic","name":"unknown"},{"type":"reference","qualifiedName":"CommonBrowser","package":"browser-pool","name":"CommonBrowser"},{"type":"intrinsic","name":"unknown"},{"type":"reference","qualifiedName":"CommonPage","package":"browser-pool","name":"CommonPage"}],"qualifiedName":"BrowserPlugin","package":"browser-pool","name":"BrowserPlugin"}],"qualifiedName":"BrowserPoolOptions","package":"browser-pool","name":"BrowserPoolOptions"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"},{"type":"reference","id":3277,"typeArguments":[{"type":"reference","qualifiedName":"CommonPage","package":"browser-pool","name":"CommonPage"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Dictionary"},{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"CommonLibrary","package":"browser-pool","name":"CommonLibrary"},{"type":"intrinsic","name":"unknown"},{"type":"reference","qualifiedName":"CommonBrowser","package":"browser-pool","name":"CommonBrowser"},{"type":"intrinsic","name":"unknown"},{"type":"reference","qualifiedName":"CommonPage","package":"browser-pool","name":"CommonPage"}],"qualifiedName":"BrowserController","package":"browser-pool","name":"BrowserController"}],"name":"BrowserCrawlingContext"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}],"name":"BrowserCrawler"}},{"id":3285,"name":"id","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":6,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":500,"name":"CrawlingContext.id"}},{"id":3279,"name":"page","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":44,"character":4}],"type":{"type":"reference","id":3289,"name":"Page"}},{"id":3288,"name":"proxyInfo","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An object with information about currently used proxy by the crawler\\nand configured by the {@link ProxyConfiguration} class."},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":17,"character":4}],"type":{"type":"reference","id":1678,"name":"ProxyInfo"},"inheritedFrom":{"type":"reference","id":503,"name":"CrawlingContext.proxyInfo"}},{"id":3286,"name":"request","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The original {@link Request} object."},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":10,"character":4}],"type":{"type":"reference","id":1626,"name":"Request"},"inheritedFrom":{"type":"reference","id":501,"name":"CrawlingContext.request"}},{"id":3280,"name":"response","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":45,"character":4}],"type":{"type":"reference","id":3290,"name":"Response"}},{"id":3287,"name":"session","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":11,"character":4}],"type":{"type":"reference","id":701,"name":"Session"},"inheritedFrom":{"type":"reference","id":502,"name":"CrawlingContext.session"}},{"id":3282,"name":"enqueueLinks","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":47,"character":4}],"signatures":[{"id":3283,"name":"enqueueLinks","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3284,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3308,"name":"BrowserCrawlerEnqueueLinksOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1264,"name":"QueueOperationInfo"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"groups":[{"title":"Properties","kind":1024,"children":[3278,3281,3285,3279,3288,3286,3280,3287]},{"title":"Methods","kind":2048,"children":[3282]}],"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":38,"character":17}],"typeParameter":[{"id":3289,"name":"Page","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","qualifiedName":"CommonPage","package":"browser-pool","name":"CommonPage"},"default":{"type":"reference","qualifiedName":"CommonPage","package":"browser-pool","name":"CommonPage"}},{"id":3290,"name":"Response","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Dictionary"}},{"id":3291,"name":"ProvidedController","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"reference","qualifiedName":"BrowserController","package":"browser-pool","name":"BrowserController"}}],"extendedTypes":[{"type":"reference","id":499,"name":"CrawlingContext"}],"permalink":"/apify-ts/api/next/browser-crawler/interface/BrowserCrawlingContext","previousId":3323,"nextId":3498},{"id":3498,"name":"BrowserLaunchContext","kind":256,"kindString":"Interface","flags":{},"children":[{"id":3501,"name":"launchOptions","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Options that will be passed down to the automation library. E.g.\\n`puppeteer.launch(launchOptions);`. This is a good place to set\\noptions that you want to apply as defaults. To dynamically override\\nthose options per-browser, see the `preLaunchHooks` of {@link BrowserPool}."},"sources":[{"fileName":"node_modules/browser-pool/dist/abstract-classes/browser-plugin.d.ts","line":32,"character":4}],"type":{"type":"reference","id":3505,"name":"TOptions"},"inheritedFrom":{"type":"reference","name":"BrowserPluginOptions.launchOptions"}},{"id":3500,"name":"launcher","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-launcher.ts","line":25,"character":4}],"type":{"type":"reference","id":3506,"name":"Launcher"}},{"id":3502,"name":"proxyUrl","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Automation libraries configure proxies differently. This helper allows you\\nto set a proxy URL without worrying about specific implementations.\\nIt also allows you use an authenticated proxy without extra code."},"sources":[{"fileName":"node_modules/browser-pool/dist/abstract-classes/browser-plugin.d.ts","line":38,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"BrowserPluginOptions.proxyUrl"}},{"id":3499,"name":"useChrome","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true` and `executablePath` is not set,\\nthe launcher will launch full Google Chrome browser available on the machine\\nrather than the bundled Chromium. The path to Chrome executable\\nis taken from the `APIFY_CHROME_EXECUTABLE_PATH` environment variable if provided,\\nor defaults to the typical Google Chrome executable location specific for the operating system.\\nBy default, this option is `false`.","tags":[{"tag":"default","text":"false\\n"}]},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-launcher.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3503,"name":"useIncognitoPages","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"By default pages share the same browser context.\\nIf set to true each page uses its own context that is destroyed once the page is closed or crashes.","tags":[{"tag":"default","text":"false\\n"}]},"sources":[{"fileName":"node_modules/browser-pool/dist/abstract-classes/browser-plugin.d.ts","line":45,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"BrowserPluginOptions.useIncognitoPages"}},{"id":3504,"name":"userDataDir","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Path to a User Data Directory, which stores browser session data like cookies and local storage."},"sources":[{"fileName":"node_modules/browser-pool/dist/abstract-classes/browser-plugin.d.ts","line":49,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"BrowserPluginOptions.userDataDir"}}],"groups":[{"title":"Properties","kind":1024,"children":[3501,3500,3502,3499,3503,3504]}],"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-launcher.ts","line":14,"character":17}],"typeParameter":[{"id":3505,"name":"TOptions","kind":131072,"kindString":"Type parameter","flags":{}},{"id":3506,"name":"Launcher","kind":131072,"kindString":"Type parameter","flags":{}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","id":3505,"name":"TOptions"}],"qualifiedName":"BrowserPluginOptions","package":"browser-pool","name":"BrowserPluginOptions"}],"extendedBy":[{"type":"reference","id":4791,"name":"PuppeteerLaunchContext"},{"type":"reference","id":5806,"name":"PlaywrightLaunchContext"}],"permalink":"/apify-ts/api/next/browser-crawler/interface/BrowserLaunchContext","previousId":3277,"nextId":3158},{"id":3158,"name":"RequestAsBrowserOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":3169,"name":"abortFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Function accepts `response` object as a single parameter and should return `true` or `false`.\\nIf function returns true, request gets aborted."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":76,"character":4}],"type":{"type":"reference","id":1899,"name":"AbortFunction"}},{"id":3176,"name":"agent","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"Agents","package":"got-cjs","name":"Agents"}]},"inheritedFrom":{"type":"reference","name":"Omit.agent"}},{"id":3233,"name":"allowGetBody","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.allowGetBody"}},{"id":3180,"name":"body","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"global.Buffer","package":"@types/node","name":"Buffer"},{"type":"reference","qualifiedName":"internal.Readable","package":"@types/node","name":"Readable"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Generator","package":"typescript","name":"Generator"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"AsyncGenerator","package":"typescript","name":"AsyncGenerator"},{"type":"reference","qualifiedName":"FormDataLike","package":"form-data-encoder","name":"FormDataLike"}]},"inheritedFrom":{"type":"reference","name":"Omit.body"}},{"id":3228,"name":"cache","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"boolean"},{"type":"reference","qualifiedName":"CacheableRequest.StorageAdapter","package":"@types/cacheable-request","name":"StorageAdapter"}]},"inheritedFrom":{"type":"reference","name":"Omit.cache"}},{"id":3241,"name":"cacheOptions","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"CacheOptions","package":"got-cjs","name":"CacheOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.cacheOptions"}},{"id":3224,"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}]},"inheritedFrom":{"type":"reference","name":"Omit.context"}},{"id":3182,"name":"cookieJar","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"PromiseCookieJar","package":"got-cjs","name":"PromiseCookieJar"},{"type":"reference","qualifiedName":"ToughCookieJar","package":"got-cjs","name":"ToughCookieJar"}]},"inheritedFrom":{"type":"reference","name":"Omit.cookieJar"}},{"id":3165,"name":"countryCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Two-letter ISO 3166 country code."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":49,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3240,"name":"createConnection","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"CreateConnectionFunction","package":"got-cjs","name":"CreateConnectionFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.createConnection"}},{"id":3178,"name":"decompress","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.decompress"}},{"id":3223,"name":"dnsCache","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"},{"type":"reference","qualifiedName":"CacheableLookup","package":"cacheable-lookup","name":"default"}]},"inheritedFrom":{"type":"reference","name":"Omit.dnsCache"}},{"id":3185,"name":"dnsLookup","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":3186,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":3187,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"tags":[{"tag":"see","text":"https://nodejs.org/api/dns.html#dns_dns_lookup_hostname_options_callback\\n"}]},"parameters":[{"id":3188,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":3189,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}},{"id":3190,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":3191,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":3192,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3193,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":3194,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":3195,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":3196,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3197,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":3198,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":3199,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":3200,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3201,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":3202,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":3203,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":3204,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3205,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":3206,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"LookupOptions","package":"cacheable-lookup","name":"LookupOptions"},{"type":"reflection","declaration":{"id":3207,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":3208,"name":"all","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/cacheable-lookup/index.d.ts","line":104,"character":52}],"type":{"type":"literal","value":true}}],"groups":[{"title":"Properties","kind":1024,"children":[3208]}]}}]}},{"id":3209,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":3210,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":3211,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3212,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":3213,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","qualifiedName":"EntryObject","package":"cacheable-lookup","name":"EntryObject"}}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":3214,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3215,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":3216,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"LookupOptions","package":"cacheable-lookup","name":"LookupOptions"}},{"id":3217,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":3218,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":3219,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3220,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":3221,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":3222,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}]},"inheritedFrom":{"type":"reference","name":"Omit.dnsLookup"}},{"id":3235,"name":"dnsLookupIpVersion","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"DnsLookupIpVersion","package":"got-cjs","name":"DnsLookupIpVersion"},"inheritedFrom":{"type":"reference","name":"Omit.dnsLookupIpVersion"}},{"id":3243,"name":"encoding","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"global.BufferEncoding","package":"@types/node","name":"BufferEncoding"}]},"inheritedFrom":{"type":"reference","name":"Omit.encoding"}},{"id":3226,"name":"followRedirect","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.followRedirect"}},{"id":3181,"name":"form","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}]},"inheritedFrom":{"type":"reference","name":"Omit.form"}},{"id":3177,"name":"h2session","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ClientHttp2Session","package":"@types/node","name":"ClientHttp2Session"}]},"inheritedFrom":{"type":"reference","name":"Omit.h2session"}},{"id":3163,"name":"headerGeneratorOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Configuration to be used for generating correct browser headers.\\nSee the [`header-generator`](https://github.com/apify/header-generator) library."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":39,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"id":3161,"name":"headers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Additional HTTP headers to add. It\'s only recommended to use this option,\\nwith headers that are typically added by websites, such as cookies. Overriding\\ndefault browser headers will remove the masking this function provides."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"overwrites":{"type":"reference","name":"Omit.headers"}},{"id":3225,"name":"hooks","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/got-cjs/dist/source/core/options.d.ts","line":556,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"Hooks","package":"got-cjs","name":"Hooks"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"inheritedFrom":{"type":"reference","name":"Omit.hooks"}},{"id":3232,"name":"http2","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.http2"}},{"id":3242,"name":"https","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"HttpsOptions","package":"got-cjs","name":"HttpsOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.https"}},{"id":3183,"name":"ignoreInvalidCookies","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.ignoreInvalidCookies"}},{"id":3167,"name":"ignoreSslErrors","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to true, SSL/TLS certificate errors will be ignored."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":59,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3245,"name":"isStream","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.isStream"}},{"id":3173,"name":"json","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The `boolean` type for `json` is deprecated"},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":97,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}]}},{"id":3164,"name":"languageCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Two-letter ISO 639 language code."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":44,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3239,"name":"localAddress","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.localAddress"}},{"id":3249,"name":"maxHeaderSize","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]},"inheritedFrom":{"type":"reference","name":"Omit.maxHeaderSize"}},{"id":3227,"name":"maxRedirects","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]},"inheritedFrom":{"type":"reference","name":"Omit.maxRedirects"}},{"id":3160,"name":"method","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"HTTP method."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":21,"character":4}],"type":{"type":"reference","qualifiedName":"Method","package":"got-cjs","name":"Method"},"overwrites":{"type":"reference","name":"Omit.method"}},{"id":3234,"name":"methodRewriting","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.methodRewriting"}},{"id":3247,"name":"pagination","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"PaginationOptions","package":"got-cjs","name":"PaginationOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.pagination"}},{"id":3236,"name":"parseJson","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ParseJsonFunction","package":"got-cjs","name":"ParseJsonFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.parseJson"}},{"id":3231,"name":"password","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.password"}},{"id":3179,"name":"prefixUrl","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"URL","package":"@types/node","name":"URL"}]},"inheritedFrom":{"type":"reference","name":"Omit.prefixUrl"}},{"id":3162,"name":"proxyUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An HTTP proxy to be passed down to the HTTP request. Supports proxy authentication with Basic Auth."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3175,"name":"request","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"RequestFunction","package":"got-cjs","name":"RequestFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.request"}},{"id":3244,"name":"resolveBodyOnly","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.resolveBodyOnly"}},{"id":3246,"name":"responseType","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ResponseType","package":"got-cjs","name":"ResponseType"}]},"inheritedFrom":{"type":"reference","name":"Omit.responseType"}},{"id":3238,"name":"retry","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/got-cjs/dist/source/core/options.d.ts","line":557,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"RetryOptions","package":"got-cjs","name":"RetryOptions"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"inheritedFrom":{"type":"reference","name":"Omit.retry"}},{"id":3184,"name":"searchParams","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"SearchParameters","package":"got-cjs","name":"SearchParameters"},{"type":"reference","qualifiedName":"URLSearchParams","package":"@types/node","name":"URLSearchParams"}]},"inheritedFrom":{"type":"reference","name":"Omit.searchParams"}},{"id":3171,"name":"sessionToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A unique object used to generate browser headers. By default, new headers are generated on every call.\\nSet this option to make these headers persistent."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":90,"character":4}],"type":{"type":"intrinsic","name":"object"}},{"id":3248,"name":"setHost","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.setHost"}},{"id":3172,"name":"stream","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":92,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3237,"name":"stringifyJson","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"StringifyJsonFunction","package":"got-cjs","name":"StringifyJsonFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.stringifyJson"}},{"id":3229,"name":"throwHttpErrors","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.throwHttpErrors"}},{"id":3174,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"Delays","package":"got-cjs","name":"Delays"}]},"inheritedFrom":{"type":"reference","name":"Omit.timeout"}},{"id":3159,"name":"url","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":" URL of the target endpoint. Supports both HTTP and HTTPS schemes."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":16,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"Omit.url"}},{"id":3170,"name":"useHttp2","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to false, it will prevent use of HTTP2 requests. This is strongly discouraged. Websites\\nexpect HTTP2 connections, because browsers use HTTP2 by default. It will automatically downgrade\\nto HTTP/1.1 for websites that do not support HTTP2. For Node 10 this option is always set to `false`\\nbecause Node 10 does not support HTTP2 very well. Upgrade to Node 12 for better performance."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":84,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3168,"name":"useInsecureHttpParser","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Node.js\' HTTP parser is stricter than parsers used by web browsers, which prevents scraping of websites\\nwhose servers do not comply with HTTP specs, either by accident or due to some anti-scraping protections,\\ncausing e.g. the `invalid header value char` error. The `useInsecureHttpParser` option forces\\nthe HTTP parser to ignore certain errors which lets you scrape such websites.\\nHowever, it will also open your application to some security vulnerabilities,\\nalthough the risk should be negligible as these vulnerabilities mainly relate to server applications, not clients.\\nLearn more in this [blog post](https://snyk.io/blog/node-js-release-fixes-a-critical-http-security-vulnerability/)."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":70,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3166,"name":"useMobileVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true`, the function uses User-Agent of a mobile browser."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":54,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3230,"name":"username","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.username"}}],"groups":[{"title":"Properties","kind":1024,"children":[3169,3176,3233,3180,3228,3241,3224,3182,3165,3240,3178,3223,3185,3235,3243,3226,3181,3177,3163,3161,3225,3232,3242,3183,3167,3245,3173,3164,3239,3249,3227,3160,3234,3247,3236,3231,3179,3162,3175,3244,3246,3238,3184,3171,3248,3172,3237,3229,3174,3159,3170,3168,3166,3230]}],"sources":[{"fileName":"packages/core/src/utils_request.ts","line":12,"character":17}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"OptionsInit","package":"got-cjs","name":"GotOptionsInit"},{"type":"literal","value":"json"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"}],"permalink":"/apify-ts/api/next/browser-crawler/interface/RequestAsBrowserOptions","previousId":3498,"nextId":3104},{"id":3250,"name":"AbortFunction","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":100,"character":12}],"type":{"type":"reflection","declaration":{"id":3251,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":100,"character":28}],"signatures":[{"id":3252,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3253,"name":"response","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IncomingMessage","package":"@types/node","name":"IncomingMessage"}}],"type":{"type":"intrinsic","name":"boolean"}}]}},"permalink":"/apify-ts/api/next/browser-crawler#AbortFunction","previousId":3261,"nextId":3308},{"id":3308,"name":"BrowserCrawlerEnqueueLinksOptions","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":58,"character":12}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":629,"name":"EnqueueLinksOptions"},{"type":"union","types":[{"type":"literal","value":"requestQueue"},{"type":"literal","value":"urls"}]}],"qualifiedName":"Omit","package":"typescript","name":"Omit"},"permalink":"/apify-ts/api/next/browser-crawler#BrowserCrawlerEnqueueLinksOptions","previousId":3250,"nextId":3299},{"id":3299,"name":"BrowserCrawlerHandleFailedRequest","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":54,"character":12}],"type":{"type":"reflection","declaration":{"id":3300,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":54,"character":48}],"signatures":[{"id":3301,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3302,"name":"inputs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3292,"name":"BrowserCrawlerHandleFailedRequestInput"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable"}}]}},"permalink":"/apify-ts/api/next/browser-crawler#BrowserCrawlerHandleFailedRequest","previousId":3308,"nextId":3303},{"id":3303,"name":"BrowserCrawlerHandleRequest","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":56,"character":12}],"typeParameter":[{"id":3307,"name":"Context","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":3277,"name":"BrowserCrawlingContext"},"default":{"type":"reference","id":3277,"name":"BrowserCrawlingContext"}}],"type":{"type":"reflection","declaration":{"id":3304,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":56,"character":107}],"signatures":[{"id":3305,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3306,"name":"inputs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3307,"name":"Context"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable"}}]}},"permalink":"/apify-ts/api/next/browser-crawler#BrowserCrawlerHandleRequest","previousId":3299,"nextId":3309},{"id":3309,"name":"BrowserHook","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":60,"character":12}],"typeParameter":[{"id":3314,"name":"Context","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"reference","id":3277,"name":"BrowserCrawlingContext"}},{"id":3315,"name":"GoToOptions","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"PropertyKey","package":"typescript","name":"PropertyKey"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"},{"type":"intrinsic","name":"undefined"}]},"default":{"type":"reference","name":"Dictionary"}}],"type":{"type":"reflection","declaration":{"id":3310,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":63,"character":4}],"signatures":[{"id":3311,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3312,"name":"crawlingContext","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3314,"name":"Context"}},{"id":3313,"name":"gotoOptions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3315,"name":"GoToOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable"}}]}},"permalink":"/apify-ts/api/next/browser-crawler#BrowserHook","previousId":3303,"nextId":3316},{"id":3316,"name":"GotoFunction","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":65,"character":12}],"typeParameter":[{"id":3321,"name":"Context","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"reference","id":3277,"name":"BrowserCrawlingContext"}},{"id":3322,"name":"GoToOptions","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"PropertyKey","package":"typescript","name":"PropertyKey"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"},{"type":"intrinsic","name":"undefined"}]},"default":{"type":"reference","name":"Dictionary"}}],"type":{"type":"reflection","declaration":{"id":3317,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":68,"character":4}],"signatures":[{"id":3318,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3319,"name":"context","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3321,"name":"Context"}},{"id":3320,"name":"gotoOptions","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":3322,"name":"GoToOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Awaitable"}}]}},"permalink":"/apify-ts/api/next/browser-crawler#GotoFunction","previousId":3309,"nextId":3154},{"id":3154,"name":"RequestAsBrowserResult","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":12}],"typeParameter":[{"id":3157,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"string"}}],"type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"IncomingMessage","package":"@types/node","name":"IncomingMessage"},{"type":"reflection","declaration":{"id":3155,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":3156,"name":"body","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":69}],"type":{"type":"reference","id":1806,"name":"T"}}],"groups":[{"title":"Properties","kind":1024,"children":[3156]}],"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":67}]}}]},"permalink":"/apify-ts/api/next/browser-crawler#RequestAsBrowserResult","previousId":3316},{"id":3272,"name":"browserCrawlerEnqueueLinks","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":587,"character":22}],"signatures":[{"id":3273,"name":"browserCrawlerEnqueueLinks","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3274,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3308,"name":"BrowserCrawlerEnqueueLinksOptions"}},{"id":3275,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"CommonPage","package":"browser-pool","name":"CommonPage"}},{"id":3276,"name":"requestQueue","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1270,"name":"RequestQueue"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1264,"name":"QueueOperationInfo"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/browser-crawler/function/browserCrawlerEnqueueLinks","previousId":3352,"nextId":3150},{"id":3150,"name":"requestAsBrowser","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":144,"character":22}],"signatures":[{"id":3151,"name":"requestAsBrowser","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"**IMPORTANT:** This function uses an insecure version of HTTP parser by default\\nand also ignores SSL/TLS errors. This is very useful in scraping, because it allows bypassing\\ncertain anti-scraping walls, but it also exposes some vulnerability. For other than scraping\\nscenarios, please set `useInsecureHttpParser: false` and `ignoreSslErrors: false`.","text":"Sends a HTTP request that looks like a request sent by a web browser,\\nfully emulating browser\'s HTTP headers. It uses HTTP2 by default for Node 12+.\\n\\nThis function is useful for web scraping of websites that send the full HTML in the first response.\\nThanks to this function, the target web server has no simple way to find out the request\\nhasn\'t been sent by a human\'s web browser. Using a headless browser for such requests\\nis an order of magnitude more resource-intensive than this function.\\n\\nThe function emulates the Chrome and Firefox web browsers. If you want more control\\nover the browsers and their versions, use the `headerGeneratorOptions` property.\\nYou can find more info in the readme of the [`header-generator`](https://github.com/apify/header-generator) library.\\n\\nInternally, the function uses the [`got-scraping`](https://github.com/apify/got-scraping) library to perform the request.\\nAll `options` not recognized by this function are passed to it so see it for more details.\\n\\n**Example usage:**\\n```js\\nconst Apify = require(\'apify\');\\n\\nconst { utils: { requestAsBrowser } } = Apify;\\n\\n...\\n\\nconst response = await requestAsBrowser({ url: \'https://www.example.com/\' });\\n\\nconst html = response.body;\\nconst status = response.statusCode;\\nconst contentType = response.headers[\'content-type\'];\\n```\\n","returns":"The result can be various objects, but it will always be like a\\n[Node.js HTTP response stream](https://nodejs.org/api/http.html#http_class_http_incomingmessage)\\nwith a \'body\' property for the parsed response body, unless the \'stream\' option is used.\\n"},"typeParameter":[{"id":3152,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":3153,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"All `requestAsBrowser` configuration options.\\n"},"type":{"type":"reference","id":1807,"name":"RequestAsBrowserOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1803,"typeArguments":[{"type":"reference","id":1801,"name":"T"}],"name":"RequestAsBrowserResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/browser-crawler/function/requestAsBrowser","previousId":3272,"nextId":3292}],"groups":[{"title":"Classes","kind":128,"children":[3352],"categories":[{"title":"Crawlers","children":[3352]}]},{"title":"Functions","kind":64,"children":[3272,3150]},{"title":"Interfaces","kind":256,"children":[3292,3323,3277,3498,3158]},{"title":"References","kind":16777216,"children":[3104,3105,3113,3017,3016,3271,3269,3263,3265,3264,3268,3106,3140,3022,3101,3100,3025,3024,3270,3049,3102,3060,3061,3065,3058,3059,3062,3064,3063,3145,3043,3103,3035,3146,3267,3266,3097,3073,3072,3076,3074,3070,3254,3256,3257,3258,3255,3259,3144,3127,3124,3125,3126,3114,3040,3115,3044,3122,3092,3096,3075,3120,3081,3080,3084,3082,3121,3094,3093,3095,3041,3107,3047,3046,3051,3050,3045,3019,3018,3083,3032,3033,3031,3099,3020,3023,3021,3141,3142,3262,3123,3135,3133,3034,3015,3052,3069,3130,3067,3119,3134,3131,3128,3260,3055,3066,3077,3086,3048,3139,3056,3147,3068,3132,3148,3261]},{"title":"Type aliases","kind":4194304,"children":[3250,3308,3299,3303,3309,3316,3154]}],"sources":[{"fileName":"packages/browser-crawler/src/index.ts","line":1,"character":0}],"permalink":"/apify-ts/api/next/browser-crawler"},"urlSlug":"browser-crawler"}],"packageName":"@crawlers/browser","packageVersion":"1.0.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":5,"name":"@crawlers/cheerio","kind":2,"kindString":"Module","flags":{},"children":[{"id":3648,"name":"ACTOR_EVENT_NAMES_EX","kind":16777216,"kindString":"Reference","flags":{},"target":1549,"permalink":"/apify-ts/api/next/cheerio-crawler#ACTOR_EVENT_NAMES_EX","previousId":3702,"nextId":3649},{"id":3649,"name":"APIFY_API_BASE_URL","kind":16777216,"kindString":"Reference","flags":{},"target":1556,"permalink":"/apify-ts/api/next/cheerio-crawler#APIFY_API_BASE_URL","previousId":3648,"nextId":3657},{"id":3657,"name":"ActorRunWithOutput","kind":16777216,"kindString":"Reference","flags":{},"target":1578,"permalink":"/apify-ts/api/next/cheerio-crawler#ActorRunWithOutput","previousId":3649,"nextId":3561},{"id":3561,"name":"AutoscaledPool","kind":16777216,"kindString":"Reference","flags":{},"target":256,"permalink":"/apify-ts/api/next/cheerio-crawler#AutoscaledPool","previousId":3657,"nextId":3560},{"id":3560,"name":"AutoscaledPoolOptions","kind":16777216,"kindString":"Reference","flags":{},"target":236,"permalink":"/apify-ts/api/next/cheerio-crawler#AutoscaledPoolOptions","previousId":3561,"nextId":3815},{"id":3815,"name":"BASIC_CRAWLER_TIMEOUT_BUFFER_SECS","kind":16777216,"kindString":"Reference","flags":{},"target":3012,"permalink":"/apify-ts/api/next/cheerio-crawler#BASIC_CRAWLER_TIMEOUT_BUFFER_SECS","previousId":3560,"nextId":3813},{"id":3813,"name":"BasicCrawler","kind":16777216,"kindString":"Reference","flags":{},"target":2915,"permalink":"/apify-ts/api/next/cheerio-crawler#BasicCrawler","previousId":3815,"nextId":3807},{"id":3807,"name":"BasicCrawlerCrawlingContext","kind":16777216,"kindString":"Reference","flags":{},"target":2872,"permalink":"/apify-ts/api/next/cheerio-crawler#BasicCrawlerCrawlingContext","previousId":3813,"nextId":3809},{"id":3809,"name":"BasicCrawlerEnqueueLinksOptions","kind":16777216,"kindString":"Reference","flags":{},"target":2888,"permalink":"/apify-ts/api/next/cheerio-crawler#BasicCrawlerEnqueueLinksOptions","previousId":3807,"nextId":3808},{"id":3808,"name":"BasicCrawlerHandleFailedRequestInput","kind":16777216,"kindString":"Reference","flags":{},"target":2881,"permalink":"/apify-ts/api/next/cheerio-crawler#BasicCrawlerHandleFailedRequestInput","previousId":3809,"nextId":3812},{"id":3812,"name":"BasicCrawlerOptions","kind":16777216,"kindString":"Reference","flags":{},"target":2899,"permalink":"/apify-ts/api/next/cheerio-crawler#BasicCrawlerOptions","previousId":3808,"nextId":3650},{"id":3650,"name":"COUNTRY_CODE_REGEX","kind":16777216,"kindString":"Reference","flags":{},"target":1557,"permalink":"/apify-ts/api/next/cheerio-crawler#COUNTRY_CODE_REGEX","previousId":3812,"nextId":3684},{"id":3684,"name":"CheerioRoot","kind":16777216,"kindString":"Reference","flags":{},"target":1780,"permalink":"/apify-ts/api/next/cheerio-crawler#CheerioRoot","previousId":3650,"nextId":3566},{"id":3566,"name":"ClientInfo","kind":16777216,"kindString":"Reference","flags":{},"target":458,"permalink":"/apify-ts/api/next/cheerio-crawler#ClientInfo","previousId":3684,"nextId":3645},{"id":3645,"name":"Configuration","kind":16777216,"kindString":"Reference","flags":{},"target":1453,"permalink":"/apify-ts/api/next/cheerio-crawler#Configuration","previousId":3566,"nextId":3644},{"id":3644,"name":"ConfigurationOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1430,"permalink":"/apify-ts/api/next/cheerio-crawler#ConfigurationOptions","previousId":3645,"nextId":3569},{"id":3569,"name":"CrawlerHandleFailedRequestInput","kind":16777216,"kindString":"Reference","flags":{},"target":504,"permalink":"/apify-ts/api/next/cheerio-crawler#CrawlerHandleFailedRequestInput","previousId":3644,"nextId":3568},{"id":3568,"name":"CrawlingContext","kind":16777216,"kindString":"Reference","flags":{},"target":499,"permalink":"/apify-ts/api/next/cheerio-crawler#CrawlingContext","previousId":3569,"nextId":3814},{"id":3814,"name":"CreateContextOptions","kind":16777216,"kindString":"Reference","flags":{},"target":3008,"permalink":"/apify-ts/api/next/cheerio-crawler#CreateContextOptions","previousId":3568,"nextId":3593},{"id":3593,"name":"CreateSession","kind":16777216,"kindString":"Reference","flags":{},"target":772,"permalink":"/apify-ts/api/next/cheerio-crawler#CreateSession","previousId":3814,"nextId":3646},{"id":3646,"name":"DEFAULT_USER_AGENT","kind":16777216,"kindString":"Reference","flags":{},"target":1543,"permalink":"/apify-ts/api/next/cheerio-crawler#DEFAULT_USER_AGENT","previousId":3593,"nextId":3604},{"id":3604,"name":"Dataset","kind":16777216,"kindString":"Reference","flags":{},"target":992,"permalink":"/apify-ts/api/next/cheerio-crawler#Dataset","previousId":3646,"nextId":3605},{"id":3605,"name":"DatasetConsumer","kind":16777216,"kindString":"Reference","flags":{},"target":1034,"permalink":"/apify-ts/api/next/cheerio-crawler#DatasetConsumer","previousId":3604,"nextId":3609},{"id":3609,"name":"DatasetContent","kind":16777216,"kindString":"Reference","flags":{},"target":1057,"permalink":"/apify-ts/api/next/cheerio-crawler#DatasetContent","previousId":3605,"nextId":3602},{"id":3602,"name":"DatasetDataOptions","kind":16777216,"kindString":"Reference","flags":{},"target":973,"permalink":"/apify-ts/api/next/cheerio-crawler#DatasetDataOptions","previousId":3609,"nextId":3603},{"id":3603,"name":"DatasetIteratorOptions","kind":16777216,"kindString":"Reference","flags":{},"target":982,"permalink":"/apify-ts/api/next/cheerio-crawler#DatasetIteratorOptions","previousId":3602,"nextId":3606},{"id":3606,"name":"DatasetMapper","kind":16777216,"kindString":"Reference","flags":{},"target":1039,"permalink":"/apify-ts/api/next/cheerio-crawler#DatasetMapper","previousId":3603,"nextId":3608},{"id":3608,"name":"DatasetOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1052,"permalink":"/apify-ts/api/next/cheerio-crawler#DatasetOptions","previousId":3606,"nextId":3607},{"id":3607,"name":"DatasetReducer","kind":16777216,"kindString":"Reference","flags":{},"target":1045,"permalink":"/apify-ts/api/next/cheerio-crawler#DatasetReducer","previousId":3608,"nextId":3689},{"id":3689,"name":"DownloadListOfUrlsOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1791,"permalink":"/apify-ts/api/next/cheerio-crawler#DownloadListOfUrlsOptions","previousId":3607,"nextId":3587},{"id":3587,"name":"EVENT_SESSION_RETIRED","kind":16777216,"kindString":"Reference","flags":{},"target":674,"permalink":"/apify-ts/api/next/cheerio-crawler#EVENT_SESSION_RETIRED","previousId":3689,"nextId":3647},{"id":3647,"name":"EXIT_CODES","kind":16777216,"kindString":"Reference","flags":{},"target":1544,"permalink":"/apify-ts/api/next/cheerio-crawler#EXIT_CODES","previousId":3587,"nextId":3579},{"id":3579,"name":"EnqueueLinksOptions","kind":16777216,"kindString":"Reference","flags":{},"target":629,"permalink":"/apify-ts/api/next/cheerio-crawler#EnqueueLinksOptions","previousId":3647,"nextId":3690},{"id":3690,"name":"ExtractUrlsOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1795,"permalink":"/apify-ts/api/next/cheerio-crawler#ExtractUrlsOptions","previousId":3579,"nextId":3811},{"id":3811,"name":"HandleFailedRequest","kind":16777216,"kindString":"Reference","flags":{},"target":2894,"permalink":"/apify-ts/api/next/cheerio-crawler#HandleFailedRequest","previousId":3690,"nextId":3810},{"id":3810,"name":"HandleRequest","kind":16777216,"kindString":"Reference","flags":{},"target":2889,"permalink":"/apify-ts/api/next/cheerio-crawler#HandleRequest","previousId":3811,"nextId":3641},{"id":3641,"name":"IStorage","kind":16777216,"kindString":"Reference","flags":{},"target":1346,"permalink":"/apify-ts/api/next/cheerio-crawler#IStorage","previousId":3810,"nextId":3617},{"id":3617,"name":"KeyConsumer","kind":16777216,"kindString":"Reference","flags":{},"target":1128,"permalink":"/apify-ts/api/next/cheerio-crawler#KeyConsumer","previousId":3641,"nextId":3616},{"id":3616,"name":"KeyValueStore","kind":16777216,"kindString":"Reference","flags":{},"target":1090,"permalink":"/apify-ts/api/next/cheerio-crawler#KeyValueStore","previousId":3617,"nextId":3620},{"id":3620,"name":"KeyValueStoreIteratorOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1142,"permalink":"/apify-ts/api/next/cheerio-crawler#KeyValueStoreIteratorOptions","previousId":3616,"nextId":3618},{"id":3618,"name":"KeyValueStoreOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1135,"permalink":"/apify-ts/api/next/cheerio-crawler#KeyValueStoreOptions","previousId":3620,"nextId":3614},{"id":3614,"name":"KeyValueStoreValueTypes","kind":16777216,"kindString":"Reference","flags":{},"target":1082,"permalink":"/apify-ts/api/next/cheerio-crawler#KeyValueStoreValueTypes","previousId":3618,"nextId":3798},{"id":3798,"name":"Log","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":9}],"target":2114,"permalink":"/apify-ts/api/next/cheerio-crawler#Log","previousId":3614,"nextId":3800},{"id":3800,"name":"LogLevel","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":29}],"target":2181,"permalink":"/apify-ts/api/next/cheerio-crawler#LogLevel","previousId":3798,"nextId":3801},{"id":3801,"name":"Logger","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":39}],"target":2189,"permalink":"/apify-ts/api/next/cheerio-crawler#Logger","previousId":3800,"nextId":3802},{"id":3802,"name":"LoggerJson","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":47}],"target":2313,"permalink":"/apify-ts/api/next/cheerio-crawler#LoggerJson","previousId":3801,"nextId":3799},{"id":3799,"name":"LoggerOptions","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":14}],"target":2173,"permalink":"/apify-ts/api/next/cheerio-crawler#LoggerOptions","previousId":3802,"nextId":3803},{"id":3803,"name":"LoggerText","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":59}],"target":2438,"permalink":"/apify-ts/api/next/cheerio-crawler#LoggerText","previousId":3799,"nextId":3688},{"id":3688,"name":"MemoryInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1785,"permalink":"/apify-ts/api/next/cheerio-crawler#MemoryInfo","previousId":3803,"nextId":3671},{"id":3671,"name":"ProxyConfiguration","kind":16777216,"kindString":"Reference","flags":{},"target":1686,"permalink":"/apify-ts/api/next/cheerio-crawler#ProxyConfiguration","previousId":3688,"nextId":3668},{"id":3668,"name":"ProxyConfigurationFunction","kind":16777216,"kindString":"Reference","flags":{},"target":1667,"permalink":"/apify-ts/api/next/cheerio-crawler#ProxyConfigurationFunction","previousId":3671,"nextId":3669},{"id":3669,"name":"ProxyConfigurationOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1670,"permalink":"/apify-ts/api/next/cheerio-crawler#ProxyConfigurationOptions","previousId":3668,"nextId":3670},{"id":3670,"name":"ProxyInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1678,"permalink":"/apify-ts/api/next/cheerio-crawler#ProxyInfo","previousId":3669,"nextId":3658},{"id":3658,"name":"PseudoUrl","kind":16777216,"kindString":"Reference","flags":{},"target":1596,"permalink":"/apify-ts/api/next/cheerio-crawler#PseudoUrl","previousId":3670,"nextId":3584},{"id":3584,"name":"PseudoUrlInput","kind":16777216,"kindString":"Reference","flags":{},"target":652,"permalink":"/apify-ts/api/next/cheerio-crawler#PseudoUrlInput","previousId":3658,"nextId":3659},{"id":3659,"name":"PseudoUrlObject","kind":16777216,"kindString":"Reference","flags":{},"target":1609,"permalink":"/apify-ts/api/next/cheerio-crawler#PseudoUrlObject","previousId":3584,"nextId":3588},{"id":3588,"name":"PuppeteerCookie","kind":16777216,"kindString":"Reference","flags":{},"target":675,"permalink":"/apify-ts/api/next/cheerio-crawler#PuppeteerCookie","previousId":3659,"nextId":3666},{"id":3666,"name":"PushErrorMessageOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1660,"permalink":"/apify-ts/api/next/cheerio-crawler#PushErrorMessageOptions","previousId":3588,"nextId":3636},{"id":3636,"name":"QueueOperationInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1264,"permalink":"/apify-ts/api/next/cheerio-crawler#QueueOperationInfo","previousId":3666,"nextId":3640},{"id":3640,"name":"QueueOperationInfoOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1343,"permalink":"/apify-ts/api/next/cheerio-crawler#QueueOperationInfoOptions","previousId":3636,"nextId":3619},{"id":3619,"name":"RecordOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1140,"permalink":"/apify-ts/api/next/cheerio-crawler#RecordOptions","previousId":3640,"nextId":3664},{"id":3664,"name":"Request","kind":16777216,"kindString":"Reference","flags":{},"target":1626,"permalink":"/apify-ts/api/next/cheerio-crawler#Request","previousId":3619,"nextId":3625},{"id":3625,"name":"RequestList","kind":16777216,"kindString":"Reference","flags":{},"target":1158,"permalink":"/apify-ts/api/next/cheerio-crawler#RequestList","previousId":3664,"nextId":3624},{"id":3624,"name":"RequestListOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1151,"permalink":"/apify-ts/api/next/cheerio-crawler#RequestListOptions","previousId":3625,"nextId":3628},{"id":3628,"name":"RequestListSourcesFunction","kind":16777216,"kindString":"Reference","flags":{},"target":1249,"permalink":"/apify-ts/api/next/cheerio-crawler#RequestListSourcesFunction","previousId":3624,"nextId":3626},{"id":3626,"name":"RequestListState","kind":16777216,"kindString":"Reference","flags":{},"target":1241,"permalink":"/apify-ts/api/next/cheerio-crawler#RequestListState","previousId":3628,"nextId":3665},{"id":3665,"name":"RequestOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1649,"permalink":"/apify-ts/api/next/cheerio-crawler#RequestOptions","previousId":3626,"nextId":3638},{"id":3638,"name":"RequestQueue","kind":16777216,"kindString":"Reference","flags":{},"target":1270,"permalink":"/apify-ts/api/next/cheerio-crawler#RequestQueue","previousId":3665,"nextId":3637},{"id":3637,"name":"RequestQueueOperationOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1268,"permalink":"/apify-ts/api/next/cheerio-crawler#RequestQueueOperationOptions","previousId":3638,"nextId":3639},{"id":3639,"name":"RequestQueueOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1338,"permalink":"/apify-ts/api/next/cheerio-crawler#RequestQueueOptions","previousId":3637,"nextId":3585},{"id":3585,"name":"RequestTransform","kind":16777216,"kindString":"Reference","flags":{},"target":653,"permalink":"/apify-ts/api/next/cheerio-crawler#RequestTransform","previousId":3639,"nextId":3651},{"id":3651,"name":"STATUS_CODES_BLOCKED","kind":16777216,"kindString":"Reference","flags":{},"target":1558,"permalink":"/apify-ts/api/next/cheerio-crawler#STATUS_CODES_BLOCKED","previousId":3585,"nextId":3591},{"id":3591,"name":"Session","kind":16777216,"kindString":"Reference","flags":{},"target":701,"permalink":"/apify-ts/api/next/cheerio-crawler#Session","previousId":3651,"nextId":3590},{"id":3590,"name":"SessionOptions","kind":16777216,"kindString":"Reference","flags":{},"target":687,"permalink":"/apify-ts/api/next/cheerio-crawler#SessionOptions","previousId":3591,"nextId":3595},{"id":3595,"name":"SessionPool","kind":16777216,"kindString":"Reference","flags":{},"target":786,"permalink":"/apify-ts/api/next/cheerio-crawler#SessionPool","previousId":3590,"nextId":3594},{"id":3594,"name":"SessionPoolOptions","kind":16777216,"kindString":"Reference","flags":{},"target":778,"permalink":"/apify-ts/api/next/cheerio-crawler#SessionPoolOptions","previousId":3595,"nextId":3589},{"id":3589,"name":"SessionState","kind":16777216,"kindString":"Reference","flags":{},"target":676,"permalink":"/apify-ts/api/next/cheerio-crawler#SessionState","previousId":3594,"nextId":3563},{"id":3563,"name":"Snapshotter","kind":16777216,"kindString":"Reference","flags":{},"target":352,"permalink":"/apify-ts/api/next/cheerio-crawler#Snapshotter","previousId":3589,"nextId":3562},{"id":3562,"name":"SnapshotterOptions","kind":16777216,"kindString":"Reference","flags":{},"target":341,"permalink":"/apify-ts/api/next/cheerio-crawler#SnapshotterOptions","previousId":3563,"nextId":3627},{"id":3627,"name":"Source","kind":16777216,"kindString":"Reference","flags":{},"target":1245,"permalink":"/apify-ts/api/next/cheerio-crawler#Source","previousId":3562,"nextId":3576},{"id":3576,"name":"StatisticPersistedState","kind":16777216,"kindString":"Reference","flags":{},"target":591,"permalink":"/apify-ts/api/next/cheerio-crawler#StatisticPersistedState","previousId":3627,"nextId":3577},{"id":3577,"name":"StatisticState","kind":16777216,"kindString":"Reference","flags":{},"target":612,"permalink":"/apify-ts/api/next/cheerio-crawler#StatisticState","previousId":3576,"nextId":3575},{"id":3575,"name":"Statistics","kind":16777216,"kindString":"Reference","flags":{},"target":536,"permalink":"/apify-ts/api/next/cheerio-crawler#Statistics","previousId":3577,"nextId":3643},{"id":3643,"name":"StorageManagerOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1427,"permalink":"/apify-ts/api/next/cheerio-crawler#StorageManagerOptions","previousId":3575,"nextId":3564},{"id":3564,"name":"SystemInfo","kind":16777216,"kindString":"Reference","flags":{},"target":441,"permalink":"/apify-ts/api/next/cheerio-crawler#SystemInfo","previousId":3643,"nextId":3567},{"id":3567,"name":"SystemStatus","kind":16777216,"kindString":"Reference","flags":{},"target":462,"permalink":"/apify-ts/api/next/cheerio-crawler#SystemStatus","previousId":3564,"nextId":3565},{"id":3565,"name":"SystemStatusOptions","kind":16777216,"kindString":"Reference","flags":{},"target":451,"permalink":"/apify-ts/api/next/cheerio-crawler#SystemStatusOptions","previousId":3567,"nextId":3685},{"id":3685,"name":"URL_NO_COMMAS_REGEX","kind":16777216,"kindString":"Reference","flags":{},"target":1781,"permalink":"/apify-ts/api/next/cheerio-crawler#URL_NO_COMMAS_REGEX","previousId":3565,"nextId":3686},{"id":3686,"name":"URL_WITH_COMMAS_REGEX","kind":16777216,"kindString":"Reference","flags":{},"target":1782,"permalink":"/apify-ts/api/next/cheerio-crawler#URL_WITH_COMMAS_REGEX","previousId":3685,"nextId":3806},{"id":3806,"name":"basicCrawlerEnqueueLinks","kind":16777216,"kindString":"Reference","flags":{},"target":2868,"permalink":"/apify-ts/api/next/cheerio-crawler#basicCrawlerEnqueueLinks","previousId":3686,"nextId":3667},{"id":3667,"name":"createProxyConfiguration","kind":16777216,"kindString":"Reference","flags":{},"target":1662,"permalink":"/apify-ts/api/next/cheerio-crawler#createProxyConfiguration","previousId":3806,"nextId":3679},{"id":3679,"name":"createRequestDebugInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1761,"permalink":"/apify-ts/api/next/cheerio-crawler#createRequestDebugInfo","previousId":3667,"nextId":3677},{"id":3677,"name":"downloadListOfUrls","kind":16777216,"kindString":"Reference","flags":{},"target":1755,"permalink":"/apify-ts/api/next/cheerio-crawler#downloadListOfUrls","previousId":3679,"nextId":3578},{"id":3578,"name":"enqueueLinks","kind":16777216,"kindString":"Reference","flags":{},"target":626,"permalink":"/apify-ts/api/next/cheerio-crawler#enqueueLinks","previousId":3677,"nextId":3559},{"id":3559,"name":"events","kind":16777216,"kindString":"Reference","flags":{},"target":235,"permalink":"/apify-ts/api/next/cheerio-crawler#events","previousId":3578,"nextId":3596},{"id":3596,"name":"getCookiesFromResponse","kind":16777216,"kindString":"Reference","flags":{},"target":949,"permalink":"/apify-ts/api/next/cheerio-crawler#getCookiesFromResponse","previousId":3559,"nextId":3613},{"id":3613,"name":"getInput","kind":16777216,"kindString":"Reference","flags":{},"target":1079,"permalink":"/apify-ts/api/next/cheerio-crawler#getInput","previousId":3596,"nextId":3674},{"id":3674,"name":"getMemoryInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1748,"permalink":"/apify-ts/api/next/cheerio-crawler#getMemoryInfo","previousId":3613,"nextId":3611},{"id":3611,"name":"getValue","kind":16777216,"kindString":"Reference","flags":{},"target":1069,"permalink":"/apify-ts/api/next/cheerio-crawler#getValue","previousId":3674,"nextId":3663},{"id":3663,"name":"hashPayload","kind":16777216,"kindString":"Reference","flags":{},"target":1623,"permalink":"/apify-ts/api/next/cheerio-crawler#hashPayload","previousId":3611,"nextId":3678},{"id":3678,"name":"htmlToText","kind":16777216,"kindString":"Reference","flags":{},"target":1758,"permalink":"/apify-ts/api/next/cheerio-crawler#htmlToText","previousId":3663,"nextId":3675},{"id":3675,"name":"isAtHome","kind":16777216,"kindString":"Reference","flags":{},"target":1750,"permalink":"/apify-ts/api/next/cheerio-crawler#isAtHome","previousId":3678,"nextId":3672},{"id":3672,"name":"isDocker","kind":16777216,"kindString":"Reference","flags":{},"target":1741,"permalink":"/apify-ts/api/next/cheerio-crawler#isDocker","previousId":3675,"nextId":3804},{"id":3804,"name":"log","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":73,"character":9}],"target":2566,"permalink":"/apify-ts/api/next/cheerio-crawler#log","previousId":3672,"nextId":3599},{"id":3599,"name":"openDataset","kind":16777216,"kindString":"Reference","flags":{},"target":964,"permalink":"/apify-ts/api/next/cheerio-crawler#openDataset","previousId":3804,"nextId":3610},{"id":3610,"name":"openKeyValueStore","kind":16777216,"kindString":"Reference","flags":{},"target":1065,"permalink":"/apify-ts/api/next/cheerio-crawler#openKeyValueStore","previousId":3599,"nextId":3621},{"id":3621,"name":"openRequestList","kind":16777216,"kindString":"Reference","flags":{},"target":1144,"permalink":"/apify-ts/api/next/cheerio-crawler#openRequestList","previousId":3610,"nextId":3630},{"id":3630,"name":"openRequestQueue","kind":16777216,"kindString":"Reference","flags":{},"target":1255,"permalink":"/apify-ts/api/next/cheerio-crawler#openRequestQueue","previousId":3621,"nextId":3592},{"id":3592,"name":"openSessionPool","kind":16777216,"kindString":"Reference","flags":{},"target":769,"permalink":"/apify-ts/api/next/cheerio-crawler#openSessionPool","previousId":3630,"nextId":3683},{"id":3683,"name":"purgeLocalStorage","kind":16777216,"kindString":"Reference","flags":{},"target":1777,"permalink":"/apify-ts/api/next/cheerio-crawler#purgeLocalStorage","previousId":3592,"nextId":3600},{"id":3600,"name":"pushData","kind":16777216,"kindString":"Reference","flags":{},"target":969,"permalink":"/apify-ts/api/next/cheerio-crawler#pushData","previousId":3683,"nextId":3691},{"id":3691,"name":"requestUtils","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils.ts","line":580,"character":12}],"target":1798,"permalink":"/apify-ts/api/next/cheerio-crawler#requestUtils","previousId":3600,"nextId":3612},{"id":3612,"name":"setValue","kind":16777216,"kindString":"Reference","flags":{},"target":1073,"permalink":"/apify-ts/api/next/cheerio-crawler#setValue","previousId":3691,"nextId":3676},{"id":3676,"name":"sleep","kind":16777216,"kindString":"Reference","flags":{},"target":1752,"permalink":"/apify-ts/api/next/cheerio-crawler#sleep","previousId":3612,"nextId":3692},{"id":3692,"name":"socialUtils","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils.ts","line":582,"character":12}],"target":1903,"permalink":"/apify-ts/api/next/cheerio-crawler#socialUtils","previousId":3676,"nextId":3805},{"id":3805,"name":"validators","kind":16777216,"kindString":"Reference","flags":{},"target":2567,"permalink":"/apify-ts/api/next/cheerio-crawler#validators","previousId":3692,"nextId":3794},{"id":3927,"name":"CheerioCrawler","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"Provides a framework for the parallel crawling of web pages using plain HTTP requests and\\n[cheerio](https://www.npmjs.com/package/cheerio) HTML parser.\\nThe URLs to crawl are fed either from a static list of URLs\\nor from a dynamic queue of URLs enabling recursive crawling of websites.","text":"Since `CheerioCrawler` uses raw HTTP requests to download web pages,\\nit is very fast and efficient on data bandwidth. However, if the target website requires JavaScript\\nto display the content, you might need to use {@link PuppeteerCrawler} or {@link PlaywrightCrawler} instead,\\nbecause it loads the pages using full-featured headless Chrome browser.\\n\\n`CheerioCrawler` downloads each URL using a plain HTTP request,\\nparses the HTML content using [Cheerio](https://www.npmjs.com/package/cheerio)\\nand then invokes the user-provided {@link CheerioCrawlerOptions.handlePageFunction} to extract page data\\nusing a [jQuery](https://jquery.com/)-like interface to the parsed HTML DOM.\\n\\nThe source URLs are represented using {@link Request} objects that are fed from\\n{@link RequestList} or {@link RequestQueue} instances provided by the {@link CheerioCrawlerOptions.requestList}\\nor {@link CheerioCrawlerOptions.requestQueue} constructor options, respectively.\\n\\nIf both {@link CheerioCrawlerOptions.requestList} and {@link CheerioCrawlerOptions.requestQueue} are used,\\nthe instance first processes URLs from the {@link RequestList} and automatically enqueues all of them\\nto {@link RequestQueue} before it starts their processing. This ensures that a single URL is not crawled multiple times.\\n\\nThe crawler finishes when there are no more {@link Request} objects to crawl.\\n\\nWe can use the `preNavigationHooks` to adjust `requestAsBrowserOptions`:\\n\\n```\\npreNavigationHooks: [\\n    (crawlingContext, requestAsBrowserOptions) => {\\n        // ...\\n    },\\n]\\n```\\n\\nBy default, `CheerioCrawler` only processes web pages with the `text/html`\\nand `application/xhtml+xml` MIME content types (as reported by the `Content-Type` HTTP header),\\nand skips pages with other content types. If you want the crawler to process other content types,\\nuse the {@link CheerioCrawlerOptions.additionalMimeTypes} constructor option.\\nBeware that the parsing behavior differs for HTML, XML, JSON and other types of content.\\nFor details, see {@link CheerioCrawlerOptions.handlePageFunction}.\\n\\nNew requests are only dispatched when there is enough free CPU and memory available,\\nusing the functionality provided by the {@link AutoscaledPool} class.\\nAll {@link AutoscaledPool} configuration options can be passed to the `autoscaledPoolOptions`\\nparameter of the `CheerioCrawler` constructor. For user convenience, the `minConcurrency` and `maxConcurrency`\\n{@link AutoscaledPool} options are available directly in the `CheerioCrawler` constructor.\\n\\n**Example usage:**\\n\\n```javascript\\n// Prepare a list of URLs to crawl\\nconst requestList = new Apify.RequestList({\\n  sources: [\\n      { url: \'http://www.example.com/page-1\' },\\n      { url: \'http://www.example.com/page-2\' },\\n  ],\\n});\\nawait requestList.initialize();\\n\\n// Crawl the URLs\\nconst crawler = new Apify.CheerioCrawler({\\n    requestList,\\n    handlePageFunction: async ({ request, response, body, contentType, $ }) => {\\n        const data = [];\\n\\n        // Do some data extraction from the page with Cheerio.\\n        $(\'.some-collection\').each((index, el) => {\\n            data.push({ title: $(el).find(\'.some-title\').text() });\\n        });\\n\\n        // Save the data to dataset.\\n        await Apify.pushData({\\n            url: request.url,\\n            html: body,\\n            data,\\n        })\\n    },\\n});\\n\\nawait crawler.run();\\n```"},"children":[{"id":3956,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":512,"character":4}],"signatures":[{"id":3957,"name":"new CheerioCrawler","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"All `CheerioCrawler` parameters are passed via an options object."},"typeParameter":[{"id":3958,"name":"JSONData","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"unknown"}}],"parameters":[{"id":3959,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3845,"typeArguments":[{"type":"reference","id":3958,"name":"JSONData"}],"name":"CheerioCrawlerOptions"}}],"type":{"type":"reference","id":3927,"typeArguments":[{"type":"reference","id":3958,"name":"JSONData"}],"name":"CheerioCrawler"},"overwrites":{"type":"reference","id":2932,"name":"BasicCrawler.constructor"}}],"overwrites":{"type":"reference","id":2931,"name":"BasicCrawler.constructor"}},{"id":4058,"name":"autoscaledPool","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A reference to the underlying {@link AutoscaledPool} class that manages the concurrency of the crawler.\\nNote that this property is only initialized after calling the {@link BasicCrawler.run} function.\\nYou can use it to change the concurrency settings on the fly,\\nto pause the crawler by calling {@link AutoscaledPool.pause}\\nor to abort it by calling {@link AutoscaledPool.abort}."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":271,"character":4}],"type":{"type":"reference","id":256,"name":"AutoscaledPool"},"inheritedFrom":{"type":"reference","id":2940,"name":"BasicCrawler.autoscaledPool"}},{"id":3960,"name":"proxyConfiguration","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isOptional":true},"comment":{"shortText":"A reference to the underlying {@link ProxyConfiguration} class that manages the crawler\'s proxies.\\nOnly available if used by the crawler."},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":471,"character":11}],"type":{"type":"reference","id":1686,"name":"ProxyConfiguration"}},{"id":4055,"name":"requestList","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A reference to the underlying {@link RequestList} class that manages the crawler\'s {@link Request}s.\\nEither `requestList` or `requestQueue` option must be provided (or both).\\nOnly available if used by the crawler."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":248,"character":4}],"type":{"type":"reference","id":1158,"name":"RequestList"},"inheritedFrom":{"type":"reference","id":2937,"name":"BasicCrawler.requestList"}},{"id":4056,"name":"requestQueue","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Dynamic queue of URLs to be processed. This is useful for recursive crawling of websites.\\nA reference to the underlying {@link RequestQueue} class that manages the crawler\'s {@link Request}s.\\nEither `requestList` or `requestQueue` option must be provided (or both).\\nOnly available if used by the crawler."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":256,"character":4}],"type":{"type":"reference","id":1270,"name":"RequestQueue"},"inheritedFrom":{"type":"reference","id":2938,"name":"BasicCrawler.requestQueue"}},{"id":4057,"name":"sessionPool","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A reference to the underlying {@link SessionPool} class that manages the crawler\'s {@link Session}s.\\nOnly available if used by the crawler."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":262,"character":4}],"type":{"type":"reference","id":786,"name":"SessionPool"},"inheritedFrom":{"type":"reference","id":2939,"name":"BasicCrawler.sessionPool"}},{"id":4054,"name":"stats","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"shortText":"Static list of URLs to be processed."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":241,"character":13}],"type":{"type":"reference","id":536,"name":"Statistics"},"inheritedFrom":{"type":"reference","id":2936,"name":"BasicCrawler.stats"}},{"id":4076,"name":"addRequests","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":458,"character":10}],"signatures":[{"id":4077,"name":"addRequests","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds requests to be processed by the crawler"},"parameters":[{"id":4078,"name":"requests","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The requests to add"},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","id":1649,"name":"RequestOptions"},{"type":"reference","id":1626,"name":"Request"}]}}},{"id":4079,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Options for the request queue\\n"},"type":{"type":"reference","id":1268,"name":"RequestQueueOperationOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1264,"name":"QueueOperationInfo"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","id":2959,"name":"BasicCrawler.addRequests"}}],"inheritedFrom":{"type":"reference","id":2958,"name":"BasicCrawler.addRequests"}},{"id":4074,"name":"getRequestQueue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":447,"character":10}],"signatures":[{"id":4075,"name":"getRequestQueue","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":1270,"name":"RequestQueue"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","id":2957,"name":"BasicCrawler.getRequestQueue"}}],"inheritedFrom":{"type":"reference","id":2956,"name":"BasicCrawler.getRequestQueue"}},{"id":4072,"name":"run","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":424,"character":10}],"signatures":[{"id":4073,"name":"run","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Runs the crawler. Returns a promise that gets resolved once all the requests are processed."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","id":2955,"name":"BasicCrawler.run"}}],"inheritedFrom":{"type":"reference","id":2954,"name":"BasicCrawler.run"}},{"id":3977,"name":"use","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":583,"character":4}],"signatures":[{"id":3978,"name":"use","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"**EXPERIMENTAL**\\nFunction for attaching CrawlerExtensions such as the Unblockers."},"parameters":[{"id":3979,"name":"extension","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Crawler extension that overrides the crawler configuration.\\n"},"type":{"type":"reference","name":"CrawlerExtension"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Constructors","kind":512,"children":[3956]},{"title":"Properties","kind":1024,"children":[4058,3960,4055,4056,4057,4054]},{"title":"Methods","kind":2048,"children":[4076,4074,4072,3977]}],"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":463,"character":13}],"typeParameter":[{"id":4121,"name":"JSONData","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"unknown"}}],"extendedTypes":[{"type":"reference","id":2915,"typeArguments":[{"type":"reference","id":3919,"typeArguments":[{"type":"reference","id":3958,"name":"JSONData"}],"name":"CheerioCrawlingContext"},{"type":"reference","id":3821,"typeArguments":[{"type":"reference","id":3958,"name":"JSONData"}],"name":"CheerioHandleFailedRequestInput"}],"name":"BasicCrawler"}],"permalink":"/apify-ts/api/next/cheerio-crawler/class/CheerioCrawler","nextId":3816},{"id":3845,"name":"CheerioCrawlerOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":3856,"name":"additionalMimeTypes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of [MIME types](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types)\\nyou want the crawler to load and process. By default, only `text/html` and `application/xhtml+xml` MIME types are supported."},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":263,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":3865,"name":"autoscaledPoolOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Custom options passed to the underlying {@link AutoscaledPool} constructor.\\nNote that the `runTaskFunction` and `isTaskReadyFunction` options\\nare provided by the crawler and cannot be overridden.\\nHowever, you can provide a custom implementation of `isFinishedFunction`."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":146,"character":4}],"type":{"type":"reference","id":236,"name":"AutoscaledPoolOptions"},"inheritedFrom":{"type":"reference","name":"Omit.autoscaledPoolOptions"}},{"id":3858,"name":"forceResponseEncoding","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"By default `CheerioCrawler` will extract correct encoding from the HTTP response headers. Use `forceResponseEncoding`\\nto force a certain encoding, disregarding the response headers.\\nTo only provide a default for missing encodings, use {@link CheerioCrawlerOptions.suggestResponseEncoding}\\n```\\n// Will force windows-1250 encoding even if headers say otherwise\\nforceResponseEncoding: \'windows-1250\'\\n```"},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":287,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3853,"name":"handleFailedRequestFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A function to handle requests that failed more than `option.maxRequestRetries` times.\\nThe function receives the following object as an argument:\\n```\\n{\\n    error: Error,\\n    request: Request,\\n    session: Session,\\n    $: Cheerio,\\n    body: String|Buffer,\\n    json: Object,\\n    contentType: Object,\\n    response: Object,\\n    proxyInfo: ProxyInfo,\\n    crawler: CheerioCrawler,\\n}\\n```\\nwhere the {@link Request} instance corresponds to the failed request, and the `Error` instance\\nrepresents the last error thrown during processing of the request.","text":"See [source code](https://github.com/apify/apify-js/blob/master/src/crawlers/cheerio_crawler.js#L13)\\nfor the default implementation of this function.\\n"},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":228,"character":4}],"type":{"type":"reference","id":3840,"typeArguments":[{"type":"reference","id":3871,"name":"JSONData"}],"name":"CheerioHandleFailedRequest"}},{"id":3846,"name":"handlePageFunction","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"User-provided function that performs the logic of the crawler. It is called for each page\\nloaded and parsed by the crawler.","text":"The function receives the following object as an argument:\\n```\\n{\\n  // The Cheerio object\'s function with the parsed HTML.\\n  $: Cheerio,\\n\\n  // The request body of the web page, whose type depends on the content type.\\n  body: String|Buffer,\\n\\n  // The parsed object from JSON for responses with the \\"application/json\\" content types.\\n  // For other content types it\'s null.\\n  json: Object,\\n\\n  // Apify.Request object with details of the requested web page\\n  request: Request,\\n\\n  // Parsed Content-Type HTTP header: { type, encoding }\\n  contentType: Object,\\n\\n  // An instance of Node\'s http.IncomingMessage object,\\n  response: Object,\\n\\n  // Session object, useful to work around anti-scraping protections\\n  session: Session\\n\\n  // ProxyInfo object with information about currently used proxy\\n  proxyInfo: ProxyInfo\\n\\n  // The running cheerio crawler instance.\\n  crawler: CheerioCrawler\\n}\\n```\\n\\nType of `body` depends on the `Content-Type` header of the web page:\\n- String for `text/html`, `application/xhtml+xml`, `application/xml` MIME content types\\n- Buffer for others MIME content types\\n\\nParsed `Content-Type` header using\\n[content-type package](https://www.npmjs.com/package/content-type)\\nis stored in `contentType`.\\n\\nCheerio is available only for HTML and XML content types.\\n\\nWith the {@link Request} object representing the URL to crawl.\\n\\nIf the function returns, the returned promise is awaited by the crawler.\\n\\nIf the function throws an exception, the crawler will try to re-crawl the\\nrequest later, up to `option.maxRequestRetries` times.\\nIf all the retries fail, the crawler calls the function\\nprovided to the `handleFailedRequestFunction` parameter.\\nTo make this work, you should **always**\\nlet your function throw exceptions rather than catch them.\\nThe exceptions are logged to the request using the\\n{@link Request.pushErrorMessage} function.\\n"},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":124,"character":4}],"type":{"type":"reference","id":3921,"typeArguments":[{"type":"reference","id":3871,"name":"JSONData"}],"name":"CheerioHandlePage"}},{"id":3849,"name":"handlePageTimeoutSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Timeout in which the function passed as `handlePageFunction` needs to finish, given in seconds."},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":186,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":3862,"name":"handleRequestTimeoutSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Timeout in which the function passed as `handleRequestFunction` needs to finish, in seconds.","tags":[{"tag":"default","text":"60\\n"}]},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":104,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Omit.handleRequestTimeoutSecs"}},{"id":3851,"name":"ignoreSslErrors","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to true, SSL certificate errors will be ignored."},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":196,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3867,"name":"maxConcurrency","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets the maximum concurrency (parallelism) for the crawl. Shortcut to the corresponding {@link AutoscaledPool} option."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":159,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Omit.maxConcurrency"}},{"id":3863,"name":"maxRequestRetries","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates how many times the request is retried if {@link handleRequestFunction} or {@link handlePageFunction} fails.","tags":[{"tag":"default","text":"3\\n"}]},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":131,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Omit.maxRequestRetries"}},{"id":3864,"name":"maxRequestsPerCrawl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum number of pages that the crawler will open. The crawl will stop when this limit is reached.\\nAlways set this value in order to prevent infinite loops in misconfigured crawlers.\\nNote that in cases of parallel crawling, the actual number of pages visited might be slightly higher than this value."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":138,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Omit.maxRequestsPerCrawl"}},{"id":3866,"name":"minConcurrency","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets the minimum concurrency (parallelism) for the crawl. Shortcut to the corresponding {@link AutoscaledPool} option.","text":"*WARNING:* If you set this value too high with respect to the available system memory and CPU, your crawler will run extremely slow or crash.\\nIf you\'re not sure, just keep the default value and the concurrency will scale up automatically.\\n"},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":154,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Omit.minConcurrency"}},{"id":3859,"name":"persistCookiesPerSession","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Automatically saves cookies to Session. Works only if Session Pool is used.","text":"It parses cookie from response \\"set-cookie\\" header saves or updates cookies for session and once the session is used for next request.\\nIt passes the \\"Cookie\\" header to the request with the session cookies.\\n"},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":295,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3855,"name":"postNavigationHooks","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Async functions that are sequentially evaluated after the navigation. Good for checking if the navigation was successful.\\nThe function accepts `crawlingContext` as the only parameter.\\nExample:\\n```\\npostNavigationHooks: [\\n    async (crawlingContext) => {\\n        // ...\\n    },\\n]\\n```"},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":257,"character":4}],"type":{"type":"array","elementType":{"type":"reference","id":3883,"typeArguments":[{"type":"reference","id":3871,"name":"JSONData"}],"name":"CheerioHook"}}},{"id":3848,"name":"postResponseFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"> This option is deprecated, use `postNavigationHooks` instead.","text":"A function that executes right after the HTTP request is made to the target resource and response is returned.\\nThis function is suitable for overriding custom properties of response e.g. setting headers because of response parsing.\\n\\n**Example usage:**\\n\\n```javascript\\nconst cheerioCrawlerOptions = {\\n    // ...\\n    postResponseFunction: ({ request, response }) => {\\n        if (request.userData.parseAsJSON) {\\n            response.headers[\'content-type\'] = \'application/json; charset=utf-8\';\\n        }\\n    }\\n}\\n```\\nThe function receives the following object as an argument:\\n```\\n{\\n    response: Object,\\n    request: Request,\\n    session: Session,\\n    proxyInfo: ProxyInfo,\\n    crawler: CheerioCrawler,\\n}\\n```\\nThe response is an instance of Node\'s http.IncomingMessage object.\\n"},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":181,"character":4}],"type":{"type":"reference","id":3896,"typeArguments":[{"type":"reference","id":3871,"name":"JSONData"}],"name":"PostResponse"}},{"id":3854,"name":"preNavigationHooks","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Async functions that are sequentially evaluated before the navigation. Good for setting additional cookies\\nor browser properties before navigation. The function accepts two parameters, `crawlingContext` and `requestAsBrowserOptions`,\\nwhich are passed to the `requestAsBrowser()` function the crawler calls to navigate.\\nExample:\\n```\\npreNavigationHooks: [\\n    async (crawlingContext, requestAsBrowserOptions) => {\\n        // ...\\n    },\\n]\\n```"},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":243,"character":4}],"type":{"type":"array","elementType":{"type":"reference","id":3883,"typeArguments":[{"type":"reference","id":3871,"name":"JSONData"}],"name":"CheerioHook"}}},{"id":3847,"name":"prepareRequestFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"> This option is deprecated, use `preNavigationHooks` instead.","text":"A function that executes before the HTTP request is made to the target resource.\\nThis function is suitable for setting dynamic properties such as cookies to the {@link Request}.\\n\\nThe function receives the following object as an argument:\\n```\\n{\\n    request: Request,\\n    session: Session,\\n    proxyInfo: ProxyInfo,\\n    crawler: CheerioCrawler,\\n}\\n```\\nwhere the {@link Request} instance corresponds to the initialized request\\nand the {@link Session} instance corresponds to used session.\\n\\nThe function should modify the properties of the passed {@link Request} instance\\nin place because there are already earlier references to it. Making a copy and returning it from\\nthis function is therefore not supported, because it would create inconsistencies where\\ndifferent parts of SDK would have access to a different {@link Request} instance.\\n"},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":149,"character":4}],"type":{"type":"reference","id":3878,"typeArguments":[{"type":"reference","id":3871,"name":"JSONData"}],"name":"PrepareRequest"}},{"id":3852,"name":"proxyConfiguration","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set, `CheerioCrawler` will be configured for all connections to use\\n[Apify Proxy](https://console.apify.com/proxy) or your own Proxy URLs provided and rotated according to the configuration.\\nFor more information, see the [documentation](https://docs.apify.com/proxy)."},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":203,"character":4}],"type":{"type":"reference","id":1686,"name":"ProxyConfiguration"}},{"id":3861,"name":"requestList","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Static list of URLs to be processed.\\nEither `requestList` or `requestQueue` option must be provided (or both)."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":92,"character":4}],"type":{"type":"reference","id":1158,"name":"RequestList"},"inheritedFrom":{"type":"reference","name":"Omit.requestList"}},{"id":3860,"name":"requestQueue","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Dynamic queue of URLs to be processed. This is useful for recursive crawling of websites.\\nEither `requestList` or `requestQueue` option must be provided (or both)."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":98,"character":4}],"type":{"type":"reference","id":1270,"name":"RequestQueue"},"inheritedFrom":{"type":"reference","name":"Omit.requestQueue"}},{"id":3850,"name":"requestTimeoutSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Timeout in which the HTTP request to the resource needs to finish, given in seconds."},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":191,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":3869,"name":"sessionPoolOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The configuration options for {@link SessionPool} to use."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":170,"character":4}],"type":{"type":"reference","id":778,"name":"SessionPoolOptions"},"inheritedFrom":{"type":"reference","name":"Omit.sessionPoolOptions"}},{"id":3857,"name":"suggestResponseEncoding","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"By default `CheerioCrawler` will extract correct encoding from the HTTP response headers.\\nSadly, there are some websites which use invalid headers. Those are encoded using the UTF-8 encoding.\\nIf those sites actually use a different encoding, the response will be corrupted. You can use\\n`suggestResponseEncoding` to fall back to a certain encoding, if you know that your target website uses it.\\nTo force a certain encoding, disregarding the response headers, use {@link CheerioCrawlerOptions.forceResponseEncoding}\\n```\\n// Will fall back to windows-1250 encoding if none found\\nsuggestResponseEncoding: \'windows-1250\'\\n```"},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":276,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3868,"name":"useSessionPool","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Basic crawler will initialize the  {@link SessionPool} with the corresponding `sessionPoolOptions`.\\nThe session instance will be than available in the `handleRequestFunction`."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":165,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"Omit.useSessionPool"}}],"groups":[{"title":"Properties","kind":1024,"children":[3856,3865,3858,3853,3846,3849,3862,3851,3867,3863,3864,3866,3859,3855,3848,3854,3847,3852,3861,3860,3850,3869,3857,3868]}],"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":60,"character":17}],"typeParameter":[{"id":3871,"name":"JSONData","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"unknown"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","id":2899,"typeArguments":[{"type":"reference","id":3919,"typeArguments":[{"type":"reference","id":3871,"name":"JSONData"}],"name":"CheerioCrawlingContext"}],"name":"BasicCrawlerOptions"},{"type":"union","types":[{"type":"literal","value":"handleRequestFunction"},{"type":"literal","value":"handleFailedRequestFunction"}]}],"qualifiedName":"Omit","package":"typescript","name":"Omit"}],"permalink":"/apify-ts/api/next/cheerio-crawler/interface/CheerioCrawlerOptions","previousId":3694,"nextId":3821},{"id":3821,"name":"CheerioHandleFailedRequestInput","kind":256,"kindString":"Interface","flags":{},"children":[{"id":3827,"name":"$","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The [Cheerio](https://cheerio.js.org/) object with parsed HTML."},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":353,"character":4}],"type":{"type":"reference","qualifiedName":"CheerioAPI","package":"cheerio","name":"CheerioAPI"},"inheritedFrom":{"type":"reference","id":3902,"name":"CheerioHandlePageInputs.$"}},{"id":3828,"name":"body","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The request body of the web page."},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":358,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"global.Buffer","package":"@types/node","name":"Buffer"}]},"inheritedFrom":{"type":"reference","id":3903,"name":"CheerioHandlePageInputs.body"}},{"id":3830,"name":"contentType","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Parsed `Content-Type header: { type, encoding }`."},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":368,"character":4}],"type":{"type":"reflection","declaration":{"id":3831,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":3833,"name":"encoding","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":368,"character":33}],"type":{"type":"intrinsic","name":"string"}},{"id":3832,"name":"type","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":368,"character":19}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[3833,3832]}]}},"inheritedFrom":{"type":"reference","id":3905,"name":"CheerioHandlePageInputs.contentType"}},{"id":3834,"name":"crawler","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":369,"character":4}],"type":{"type":"reference","id":3927,"typeArguments":[{"type":"reference","id":3839,"name":"JSONData"}],"name":"CheerioCrawler"},"inheritedFrom":{"type":"reference","id":3909,"name":"CheerioHandlePageInputs.crawler"}},{"id":3822,"name":"error","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The Error thrown by `handleRequestFunction`."},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":24,"character":4}],"type":{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"},"inheritedFrom":{"type":"reference","id":505,"name":"CrawlerHandleFailedRequestInput.error"}},{"id":3823,"name":"id","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":6,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":3914,"name":"CheerioHandlePageInputs.id"}},{"id":3829,"name":"json","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The parsed object from JSON string if the response contains the content type application/json."},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":363,"character":4}],"type":{"type":"reference","id":3839,"name":"JSONData"},"inheritedFrom":{"type":"reference","id":3904,"name":"CheerioHandlePageInputs.json"}},{"id":3826,"name":"proxyInfo","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An object with information about currently used proxy by the crawler\\nand configured by the {@link ProxyConfiguration} class."},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":17,"character":4}],"type":{"type":"reference","id":1678,"name":"ProxyInfo"},"inheritedFrom":{"type":"reference","id":3917,"name":"CheerioHandlePageInputs.proxyInfo"}},{"id":3824,"name":"request","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The original {@link Request} object."},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":10,"character":4}],"type":{"type":"reference","id":1626,"name":"Request"},"inheritedFrom":{"type":"reference","id":3915,"name":"CheerioHandlePageInputs.request"}},{"id":3835,"name":"response","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":370,"character":4}],"type":{"type":"reference","qualifiedName":"IncomingMessage","package":"@types/node","name":"IncomingMessage"},"inheritedFrom":{"type":"reference","id":3910,"name":"CheerioHandlePageInputs.response"}},{"id":3825,"name":"session","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":11,"character":4}],"type":{"type":"reference","id":701,"name":"Session"},"inheritedFrom":{"type":"reference","id":3916,"name":"CheerioHandlePageInputs.session"}},{"id":3836,"name":"enqueueLinks","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":371,"character":4}],"signatures":[{"id":3837,"name":"enqueueLinks","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3838,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3926,"name":"CheerioCrawlerEnqueueLinksOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1264,"name":"QueueOperationInfo"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","id":3912,"name":"CheerioHandlePageInputs.enqueueLinks"}}],"inheritedFrom":{"type":"reference","id":3911,"name":"CheerioHandlePageInputs.enqueueLinks"}}],"groups":[{"title":"Properties","kind":1024,"children":[3827,3828,3830,3834,3822,3823,3829,3826,3824,3835,3825]},{"title":"Methods","kind":2048,"children":[3836]}],"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":56,"character":17}],"typeParameter":[{"id":3839,"name":"JSONData","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"unknown"}}],"extendedTypes":[{"type":"reference","id":504,"name":"CrawlerHandleFailedRequestInput"},{"type":"reference","id":3901,"typeArguments":[{"type":"reference","id":3839,"name":"JSONData"}],"name":"CheerioHandlePageInputs"}],"permalink":"/apify-ts/api/next/cheerio-crawler/interface/CheerioHandleFailedRequestInput","previousId":3845,"nextId":3901},{"id":3901,"name":"CheerioHandlePageInputs","kind":256,"kindString":"Interface","flags":{},"children":[{"id":3902,"name":"$","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The [Cheerio](https://cheerio.js.org/) object with parsed HTML."},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":353,"character":4}],"type":{"type":"reference","qualifiedName":"CheerioAPI","package":"cheerio","name":"CheerioAPI"}},{"id":3903,"name":"body","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The request body of the web page."},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":358,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"global.Buffer","package":"@types/node","name":"Buffer"}]}},{"id":3905,"name":"contentType","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Parsed `Content-Type header: { type, encoding }`."},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":368,"character":4}],"type":{"type":"reflection","declaration":{"id":3906,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":3908,"name":"encoding","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":368,"character":33}],"type":{"type":"intrinsic","name":"string"}},{"id":3907,"name":"type","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":368,"character":19}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[3908,3907]}]}}},{"id":3909,"name":"crawler","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":369,"character":4}],"type":{"type":"reference","id":3927,"typeArguments":[{"type":"reference","id":3918,"name":"JSONData"}],"name":"CheerioCrawler"}},{"id":3914,"name":"id","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":6,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":500,"name":"CrawlingContext.id"}},{"id":3904,"name":"json","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The parsed object from JSON string if the response contains the content type application/json."},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":363,"character":4}],"type":{"type":"reference","id":3918,"name":"JSONData"}},{"id":3917,"name":"proxyInfo","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An object with information about currently used proxy by the crawler\\nand configured by the {@link ProxyConfiguration} class."},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":17,"character":4}],"type":{"type":"reference","id":1678,"name":"ProxyInfo"},"inheritedFrom":{"type":"reference","id":503,"name":"CrawlingContext.proxyInfo"}},{"id":3915,"name":"request","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The original {@link Request} object."},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":10,"character":4}],"type":{"type":"reference","id":1626,"name":"Request"},"inheritedFrom":{"type":"reference","id":501,"name":"CrawlingContext.request"}},{"id":3910,"name":"response","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":370,"character":4}],"type":{"type":"reference","qualifiedName":"IncomingMessage","package":"@types/node","name":"IncomingMessage"}},{"id":3916,"name":"session","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":11,"character":4}],"type":{"type":"reference","id":701,"name":"Session"},"inheritedFrom":{"type":"reference","id":502,"name":"CrawlingContext.session"}},{"id":3911,"name":"enqueueLinks","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":371,"character":4}],"signatures":[{"id":3912,"name":"enqueueLinks","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3913,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3926,"name":"CheerioCrawlerEnqueueLinksOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1264,"name":"QueueOperationInfo"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"groups":[{"title":"Properties","kind":1024,"children":[3902,3903,3905,3909,3914,3904,3917,3915,3910,3916]},{"title":"Methods","kind":2048,"children":[3911]}],"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":349,"character":17}],"typeParameter":[{"id":3918,"name":"JSONData","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"unknown"}}],"extendedTypes":[{"type":"reference","id":499,"name":"CrawlingContext"}],"extendedBy":[{"type":"reference","id":3821,"name":"CheerioHandleFailedRequestInput"}],"permalink":"/apify-ts/api/next/cheerio-crawler/interface/CheerioHandlePageInputs","previousId":3821,"nextId":3889},{"id":3889,"name":"PostResponseInputs","kind":256,"kindString":"Interface","flags":{},"children":[{"id":3894,"name":"crawler","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":344,"character":4}],"type":{"type":"reference","id":3927,"typeArguments":[{"type":"reference","id":3895,"name":"JSONData"}],"name":"CheerioCrawler"}},{"id":3893,"name":"proxyInfo","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An object with information about currently used proxy by the crawler\\nand configured by the {@link ProxyConfiguration} class."},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":343,"character":4}],"type":{"type":"reference","id":1678,"name":"ProxyInfo"}},{"id":3891,"name":"request","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Original instance fo the {Request} object. Must be modified in-place."},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":332,"character":4}],"type":{"type":"reference","id":1626,"name":"Request"}},{"id":3890,"name":"response","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"stream"},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":327,"character":4}],"type":{"type":"reference","qualifiedName":"IncomingMessage","package":"@types/node","name":"IncomingMessage"}},{"id":3892,"name":"session","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The current session"},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":337,"character":4}],"type":{"type":"reference","id":701,"name":"Session"}}],"groups":[{"title":"Properties","kind":1024,"children":[3894,3893,3891,3890,3892]}],"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":323,"character":17}],"typeParameter":[{"id":3895,"name":"JSONData","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"unknown"}}],"permalink":"/apify-ts/api/next/cheerio-crawler/interface/PostResponseInputs","previousId":3901,"nextId":3872},{"id":3872,"name":"PrepareRequestInputs","kind":256,"kindString":"Interface","flags":{},"children":[{"id":3876,"name":"crawler","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":314,"character":4}],"type":{"type":"reference","id":3927,"typeArguments":[{"type":"reference","id":3877,"name":"JSONData"}],"name":"CheerioCrawler"}},{"id":3875,"name":"proxyInfo","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An object with information about currently used proxy by the crawler\\nand configured by the {@link ProxyConfiguration} class."},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":313,"character":4}],"type":{"type":"reference","id":1678,"name":"ProxyInfo"}},{"id":3873,"name":"request","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":" Original instance of the {@link Request} object. Must be modified in-place."},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":302,"character":4}],"type":{"type":"reference","id":1626,"name":"Request"}},{"id":3874,"name":"session","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The current session"},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":307,"character":4}],"type":{"type":"reference","id":701,"name":"Session"}}],"groups":[{"title":"Properties","kind":1024,"children":[3876,3875,3873,3874]}],"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":298,"character":17}],"typeParameter":[{"id":3877,"name":"JSONData","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"unknown"}}],"permalink":"/apify-ts/api/next/cheerio-crawler/interface/PrepareRequestInputs","previousId":3889,"nextId":3702},{"id":3702,"name":"RequestAsBrowserOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":3713,"name":"abortFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Function accepts `response` object as a single parameter and should return `true` or `false`.\\nIf function returns true, request gets aborted."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":76,"character":4}],"type":{"type":"reference","id":1899,"name":"AbortFunction"}},{"id":3720,"name":"agent","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"Agents","package":"got-cjs","name":"Agents"}]},"inheritedFrom":{"type":"reference","name":"Omit.agent"}},{"id":3777,"name":"allowGetBody","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.allowGetBody"}},{"id":3724,"name":"body","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"global.Buffer","package":"@types/node","name":"Buffer"},{"type":"reference","qualifiedName":"internal.Readable","package":"@types/node","name":"Readable"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Generator","package":"typescript","name":"Generator"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"AsyncGenerator","package":"typescript","name":"AsyncGenerator"},{"type":"reference","qualifiedName":"FormDataLike","package":"form-data-encoder","name":"FormDataLike"}]},"inheritedFrom":{"type":"reference","name":"Omit.body"}},{"id":3772,"name":"cache","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"boolean"},{"type":"reference","qualifiedName":"CacheableRequest.StorageAdapter","package":"@types/cacheable-request","name":"StorageAdapter"}]},"inheritedFrom":{"type":"reference","name":"Omit.cache"}},{"id":3785,"name":"cacheOptions","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"CacheOptions","package":"got-cjs","name":"CacheOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.cacheOptions"}},{"id":3768,"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}]},"inheritedFrom":{"type":"reference","name":"Omit.context"}},{"id":3726,"name":"cookieJar","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"PromiseCookieJar","package":"got-cjs","name":"PromiseCookieJar"},{"type":"reference","qualifiedName":"ToughCookieJar","package":"got-cjs","name":"ToughCookieJar"}]},"inheritedFrom":{"type":"reference","name":"Omit.cookieJar"}},{"id":3709,"name":"countryCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Two-letter ISO 3166 country code."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":49,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3784,"name":"createConnection","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"CreateConnectionFunction","package":"got-cjs","name":"CreateConnectionFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.createConnection"}},{"id":3722,"name":"decompress","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.decompress"}},{"id":3767,"name":"dnsCache","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"},{"type":"reference","qualifiedName":"CacheableLookup","package":"cacheable-lookup","name":"default"}]},"inheritedFrom":{"type":"reference","name":"Omit.dnsCache"}},{"id":3729,"name":"dnsLookup","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":3730,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":3731,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"tags":[{"tag":"see","text":"https://nodejs.org/api/dns.html#dns_dns_lookup_hostname_options_callback\\n"}]},"parameters":[{"id":3732,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":3733,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}},{"id":3734,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":3735,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":3736,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3737,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":3738,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":3739,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":3740,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3741,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":3742,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":3743,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":3744,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3745,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":3746,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":3747,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":3748,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3749,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":3750,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"LookupOptions","package":"cacheable-lookup","name":"LookupOptions"},{"type":"reflection","declaration":{"id":3751,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":3752,"name":"all","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/cacheable-lookup/index.d.ts","line":104,"character":52}],"type":{"type":"literal","value":true}}],"groups":[{"title":"Properties","kind":1024,"children":[3752]}]}}]}},{"id":3753,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":3754,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":3755,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3756,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":3757,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","qualifiedName":"EntryObject","package":"cacheable-lookup","name":"EntryObject"}}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":3758,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3759,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":3760,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"LookupOptions","package":"cacheable-lookup","name":"LookupOptions"}},{"id":3761,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":3762,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":3763,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3764,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":3765,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":3766,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}]},"inheritedFrom":{"type":"reference","name":"Omit.dnsLookup"}},{"id":3779,"name":"dnsLookupIpVersion","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"DnsLookupIpVersion","package":"got-cjs","name":"DnsLookupIpVersion"},"inheritedFrom":{"type":"reference","name":"Omit.dnsLookupIpVersion"}},{"id":3787,"name":"encoding","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"global.BufferEncoding","package":"@types/node","name":"BufferEncoding"}]},"inheritedFrom":{"type":"reference","name":"Omit.encoding"}},{"id":3770,"name":"followRedirect","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.followRedirect"}},{"id":3725,"name":"form","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}]},"inheritedFrom":{"type":"reference","name":"Omit.form"}},{"id":3721,"name":"h2session","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ClientHttp2Session","package":"@types/node","name":"ClientHttp2Session"}]},"inheritedFrom":{"type":"reference","name":"Omit.h2session"}},{"id":3707,"name":"headerGeneratorOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Configuration to be used for generating correct browser headers.\\nSee the [`header-generator`](https://github.com/apify/header-generator) library."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":39,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"id":3705,"name":"headers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Additional HTTP headers to add. It\'s only recommended to use this option,\\nwith headers that are typically added by websites, such as cookies. Overriding\\ndefault browser headers will remove the masking this function provides."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"overwrites":{"type":"reference","name":"Omit.headers"}},{"id":3769,"name":"hooks","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/got-cjs/dist/source/core/options.d.ts","line":556,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"Hooks","package":"got-cjs","name":"Hooks"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"inheritedFrom":{"type":"reference","name":"Omit.hooks"}},{"id":3776,"name":"http2","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.http2"}},{"id":3786,"name":"https","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"HttpsOptions","package":"got-cjs","name":"HttpsOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.https"}},{"id":3727,"name":"ignoreInvalidCookies","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.ignoreInvalidCookies"}},{"id":3711,"name":"ignoreSslErrors","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to true, SSL/TLS certificate errors will be ignored."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":59,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3789,"name":"isStream","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.isStream"}},{"id":3717,"name":"json","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The `boolean` type for `json` is deprecated"},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":97,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}]}},{"id":3708,"name":"languageCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Two-letter ISO 639 language code."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":44,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3783,"name":"localAddress","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.localAddress"}},{"id":3793,"name":"maxHeaderSize","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]},"inheritedFrom":{"type":"reference","name":"Omit.maxHeaderSize"}},{"id":3771,"name":"maxRedirects","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]},"inheritedFrom":{"type":"reference","name":"Omit.maxRedirects"}},{"id":3704,"name":"method","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"HTTP method."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":21,"character":4}],"type":{"type":"reference","qualifiedName":"Method","package":"got-cjs","name":"Method"},"overwrites":{"type":"reference","name":"Omit.method"}},{"id":3778,"name":"methodRewriting","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.methodRewriting"}},{"id":3791,"name":"pagination","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"PaginationOptions","package":"got-cjs","name":"PaginationOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.pagination"}},{"id":3780,"name":"parseJson","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ParseJsonFunction","package":"got-cjs","name":"ParseJsonFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.parseJson"}},{"id":3775,"name":"password","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.password"}},{"id":3723,"name":"prefixUrl","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"URL","package":"@types/node","name":"URL"}]},"inheritedFrom":{"type":"reference","name":"Omit.prefixUrl"}},{"id":3706,"name":"proxyUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An HTTP proxy to be passed down to the HTTP request. Supports proxy authentication with Basic Auth."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3719,"name":"request","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"RequestFunction","package":"got-cjs","name":"RequestFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.request"}},{"id":3788,"name":"resolveBodyOnly","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.resolveBodyOnly"}},{"id":3790,"name":"responseType","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ResponseType","package":"got-cjs","name":"ResponseType"}]},"inheritedFrom":{"type":"reference","name":"Omit.responseType"}},{"id":3782,"name":"retry","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/got-cjs/dist/source/core/options.d.ts","line":557,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"RetryOptions","package":"got-cjs","name":"RetryOptions"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"inheritedFrom":{"type":"reference","name":"Omit.retry"}},{"id":3728,"name":"searchParams","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"SearchParameters","package":"got-cjs","name":"SearchParameters"},{"type":"reference","qualifiedName":"URLSearchParams","package":"@types/node","name":"URLSearchParams"}]},"inheritedFrom":{"type":"reference","name":"Omit.searchParams"}},{"id":3715,"name":"sessionToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A unique object used to generate browser headers. By default, new headers are generated on every call.\\nSet this option to make these headers persistent."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":90,"character":4}],"type":{"type":"intrinsic","name":"object"}},{"id":3792,"name":"setHost","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.setHost"}},{"id":3716,"name":"stream","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":92,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3781,"name":"stringifyJson","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"StringifyJsonFunction","package":"got-cjs","name":"StringifyJsonFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.stringifyJson"}},{"id":3773,"name":"throwHttpErrors","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.throwHttpErrors"}},{"id":3718,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"Delays","package":"got-cjs","name":"Delays"}]},"inheritedFrom":{"type":"reference","name":"Omit.timeout"}},{"id":3703,"name":"url","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":" URL of the target endpoint. Supports both HTTP and HTTPS schemes."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":16,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"Omit.url"}},{"id":3714,"name":"useHttp2","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to false, it will prevent use of HTTP2 requests. This is strongly discouraged. Websites\\nexpect HTTP2 connections, because browsers use HTTP2 by default. It will automatically downgrade\\nto HTTP/1.1 for websites that do not support HTTP2. For Node 10 this option is always set to `false`\\nbecause Node 10 does not support HTTP2 very well. Upgrade to Node 12 for better performance."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":84,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3712,"name":"useInsecureHttpParser","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Node.js\' HTTP parser is stricter than parsers used by web browsers, which prevents scraping of websites\\nwhose servers do not comply with HTTP specs, either by accident or due to some anti-scraping protections,\\ncausing e.g. the `invalid header value char` error. The `useInsecureHttpParser` option forces\\nthe HTTP parser to ignore certain errors which lets you scrape such websites.\\nHowever, it will also open your application to some security vulnerabilities,\\nalthough the risk should be negligible as these vulnerabilities mainly relate to server applications, not clients.\\nLearn more in this [blog post](https://snyk.io/blog/node-js-release-fixes-a-critical-http-security-vulnerability/)."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":70,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3710,"name":"useMobileVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true`, the function uses User-Agent of a mobile browser."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":54,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3774,"name":"username","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.username"}}],"groups":[{"title":"Properties","kind":1024,"children":[3713,3720,3777,3724,3772,3785,3768,3726,3709,3784,3722,3767,3729,3779,3787,3770,3725,3721,3707,3705,3769,3776,3786,3727,3711,3789,3717,3708,3783,3793,3771,3704,3778,3791,3780,3775,3723,3706,3719,3788,3790,3782,3728,3715,3792,3716,3781,3773,3718,3703,3714,3712,3710,3774]}],"sources":[{"fileName":"packages/core/src/utils_request.ts","line":12,"character":17}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"OptionsInit","package":"got-cjs","name":"GotOptionsInit"},{"type":"literal","value":"json"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"}],"permalink":"/apify-ts/api/next/cheerio-crawler/interface/RequestAsBrowserOptions","previousId":3872,"nextId":3648},{"id":3794,"name":"AbortFunction","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":100,"character":12}],"type":{"type":"reflection","declaration":{"id":3795,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":100,"character":28}],"signatures":[{"id":3796,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3797,"name":"response","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IncomingMessage","package":"@types/node","name":"IncomingMessage"}}],"type":{"type":"intrinsic","name":"boolean"}}]}},"permalink":"/apify-ts/api/next/cheerio-crawler#AbortFunction","previousId":3805,"nextId":3926},{"id":3926,"name":"CheerioCrawlerEnqueueLinksOptions","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":376,"character":12}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":629,"name":"EnqueueLinksOptions"},{"type":"union","types":[{"type":"literal","value":"urls"},{"type":"literal","value":"requestQueue"}]}],"qualifiedName":"Omit","package":"typescript","name":"Omit"},"permalink":"/apify-ts/api/next/cheerio-crawler#CheerioCrawlerEnqueueLinksOptions","previousId":3794,"nextId":3919},{"id":3919,"name":"CheerioCrawlingContext","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":374,"character":12}],"typeParameter":[{"id":3920,"name":"JSONData","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","id":3901,"typeArguments":[{"type":"reference","id":3920,"name":"JSONData"}],"name":"CheerioHandlePageInputs"},"permalink":"/apify-ts/api/next/cheerio-crawler#CheerioCrawlingContext","previousId":3926,"nextId":3840},{"id":3840,"name":"CheerioHandleFailedRequest","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":58,"character":12}],"typeParameter":[{"id":3844,"name":"JSONData","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reflection","declaration":{"id":3841,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":58,"character":61}],"signatures":[{"id":3842,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3843,"name":"inputs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3821,"typeArguments":[{"type":"reference","id":3844,"name":"JSONData"}],"name":"CheerioHandleFailedRequestInput"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable"}}]}},"permalink":"/apify-ts/api/next/cheerio-crawler#CheerioHandleFailedRequest","previousId":3919,"nextId":3921},{"id":3921,"name":"CheerioHandlePage","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":375,"character":12}],"typeParameter":[{"id":3925,"name":"JSONData","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reflection","declaration":{"id":3922,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":375,"character":52}],"signatures":[{"id":3923,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3924,"name":"inputs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3901,"typeArguments":[{"type":"reference","id":3925,"name":"JSONData"}],"name":"CheerioHandlePageInputs"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable"}}]}},"permalink":"/apify-ts/api/next/cheerio-crawler#CheerioHandlePage","previousId":3840,"nextId":3883},{"id":3883,"name":"CheerioHook","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":318,"character":12}],"typeParameter":[{"id":3888,"name":"JSONData","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reflection","declaration":{"id":3884,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":318,"character":46}],"signatures":[{"id":3885,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3886,"name":"crawlingContext","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3919,"typeArguments":[{"type":"reference","id":3888,"name":"JSONData"}],"name":"CheerioCrawlingContext"}},{"id":3887,"name":"requestAsBrowserOptions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1807,"name":"RequestAsBrowserOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable"}}]}},"permalink":"/apify-ts/api/next/cheerio-crawler#CheerioHook","previousId":3921,"nextId":3896},{"id":3896,"name":"PostResponse","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":347,"character":12}],"typeParameter":[{"id":3900,"name":"JSONData","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reflection","declaration":{"id":3897,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":347,"character":47}],"signatures":[{"id":3898,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3899,"name":"inputs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3889,"typeArguments":[{"type":"reference","id":3900,"name":"JSONData"}],"name":"PostResponseInputs"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable"}}]}},"permalink":"/apify-ts/api/next/cheerio-crawler#PostResponse","previousId":3883,"nextId":3878},{"id":3878,"name":"PrepareRequest","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":317,"character":12}],"typeParameter":[{"id":3882,"name":"JSONData","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reflection","declaration":{"id":3879,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":317,"character":49}],"signatures":[{"id":3880,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3881,"name":"inputs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3872,"typeArguments":[{"type":"reference","id":3882,"name":"JSONData"}],"name":"PrepareRequestInputs"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable"}}]}},"permalink":"/apify-ts/api/next/cheerio-crawler#PrepareRequest","previousId":3896,"nextId":3698},{"id":3698,"name":"RequestAsBrowserResult","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":12}],"typeParameter":[{"id":3701,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"string"}}],"type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"IncomingMessage","package":"@types/node","name":"IncomingMessage"},{"type":"reflection","declaration":{"id":3699,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":3700,"name":"body","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":69}],"type":{"type":"reference","id":1806,"name":"T"}}],"groups":[{"title":"Properties","kind":1024,"children":[3700]}],"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":67}]}}]},"permalink":"/apify-ts/api/next/cheerio-crawler#RequestAsBrowserResult","previousId":3878},{"id":3816,"name":"cheerioCrawlerEnqueueLinks","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/cheerio-crawler/src/internals/cheerio-crawler.ts","line":958,"character":22}],"signatures":[{"id":3817,"name":"cheerioCrawlerEnqueueLinks","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3818,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3926,"name":"CheerioCrawlerEnqueueLinksOptions"}},{"id":3819,"name":"$","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"CheerioAPI","package":"cheerio","name":"CheerioAPI"}]}},{"id":3820,"name":"requestQueue","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1270,"name":"RequestQueue"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1264,"name":"QueueOperationInfo"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/cheerio-crawler/function/cheerioCrawlerEnqueueLinks","previousId":3927,"nextId":3694},{"id":3694,"name":"requestAsBrowser","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":144,"character":22}],"signatures":[{"id":3695,"name":"requestAsBrowser","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"**IMPORTANT:** This function uses an insecure version of HTTP parser by default\\nand also ignores SSL/TLS errors. This is very useful in scraping, because it allows bypassing\\ncertain anti-scraping walls, but it also exposes some vulnerability. For other than scraping\\nscenarios, please set `useInsecureHttpParser: false` and `ignoreSslErrors: false`.","text":"Sends a HTTP request that looks like a request sent by a web browser,\\nfully emulating browser\'s HTTP headers. It uses HTTP2 by default for Node 12+.\\n\\nThis function is useful for web scraping of websites that send the full HTML in the first response.\\nThanks to this function, the target web server has no simple way to find out the request\\nhasn\'t been sent by a human\'s web browser. Using a headless browser for such requests\\nis an order of magnitude more resource-intensive than this function.\\n\\nThe function emulates the Chrome and Firefox web browsers. If you want more control\\nover the browsers and their versions, use the `headerGeneratorOptions` property.\\nYou can find more info in the readme of the [`header-generator`](https://github.com/apify/header-generator) library.\\n\\nInternally, the function uses the [`got-scraping`](https://github.com/apify/got-scraping) library to perform the request.\\nAll `options` not recognized by this function are passed to it so see it for more details.\\n\\n**Example usage:**\\n```js\\nconst Apify = require(\'apify\');\\n\\nconst { utils: { requestAsBrowser } } = Apify;\\n\\n...\\n\\nconst response = await requestAsBrowser({ url: \'https://www.example.com/\' });\\n\\nconst html = response.body;\\nconst status = response.statusCode;\\nconst contentType = response.headers[\'content-type\'];\\n```\\n","returns":"The result can be various objects, but it will always be like a\\n[Node.js HTTP response stream](https://nodejs.org/api/http.html#http_class_http_incomingmessage)\\nwith a \'body\' property for the parsed response body, unless the \'stream\' option is used.\\n"},"typeParameter":[{"id":3696,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":3697,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"All `requestAsBrowser` configuration options.\\n"},"type":{"type":"reference","id":1807,"name":"RequestAsBrowserOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1803,"typeArguments":[{"type":"reference","id":1801,"name":"T"}],"name":"RequestAsBrowserResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/cheerio-crawler/function/requestAsBrowser","previousId":3816,"nextId":3845}],"groups":[{"title":"Classes","kind":128,"children":[3927],"categories":[{"title":"Crawlers","children":[3927]}]},{"title":"Functions","kind":64,"children":[3816,3694]},{"title":"Interfaces","kind":256,"children":[3845,3821,3901,3889,3872,3702]},{"title":"References","kind":16777216,"children":[3648,3649,3657,3561,3560,3815,3813,3807,3809,3808,3812,3650,3684,3566,3645,3644,3569,3568,3814,3593,3646,3604,3605,3609,3602,3603,3606,3608,3607,3689,3587,3647,3579,3690,3811,3810,3641,3617,3616,3620,3618,3614,3798,3800,3801,3802,3799,3803,3688,3671,3668,3669,3670,3658,3584,3659,3588,3666,3636,3640,3619,3664,3625,3624,3628,3626,3665,3638,3637,3639,3585,3651,3591,3590,3595,3594,3589,3563,3562,3627,3576,3577,3575,3643,3564,3567,3565,3685,3686,3806,3667,3679,3677,3578,3559,3596,3613,3674,3611,3663,3678,3675,3672,3804,3599,3610,3621,3630,3592,3683,3600,3691,3612,3676,3692,3805]},{"title":"Type aliases","kind":4194304,"children":[3794,3926,3919,3840,3921,3883,3896,3878,3698]}],"sources":[{"fileName":"packages/cheerio-crawler/src/index.ts","line":1,"character":0}],"permalink":"/apify-ts/api/next/cheerio-crawler"},"urlSlug":"cheerio-crawler"}],"packageName":"@crawlers/cheerio","packageVersion":"1.0.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":2,"name":"@crawlers/core","kind":2,"kindString":"Module","flags":{},"children":[{"id":1798,"name":"requestUtils","kind":4,"kindString":"Namespace","flags":{},"children":[{"id":1807,"name":"RequestAsBrowserOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":1818,"name":"abortFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Function accepts `response` object as a single parameter and should return `true` or `false`.\\nIf function returns true, request gets aborted."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":76,"character":4}],"type":{"type":"reference","id":1899,"name":"AbortFunction"}},{"id":1825,"name":"agent","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"Agents","package":"got-cjs","name":"Agents"}]},"inheritedFrom":{"type":"reference","name":"Omit.agent"}},{"id":1882,"name":"allowGetBody","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.allowGetBody"}},{"id":1829,"name":"body","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"global.Buffer","package":"@types/node","name":"Buffer"},{"type":"reference","qualifiedName":"internal.Readable","package":"@types/node","name":"Readable"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Generator","package":"typescript","name":"Generator"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"AsyncGenerator","package":"typescript","name":"AsyncGenerator"},{"type":"reference","qualifiedName":"FormDataLike","package":"form-data-encoder","name":"FormDataLike"}]},"inheritedFrom":{"type":"reference","name":"Omit.body"}},{"id":1877,"name":"cache","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"boolean"},{"type":"reference","qualifiedName":"CacheableRequest.StorageAdapter","package":"@types/cacheable-request","name":"StorageAdapter"}]},"inheritedFrom":{"type":"reference","name":"Omit.cache"}},{"id":1890,"name":"cacheOptions","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"CacheOptions","package":"got-cjs","name":"CacheOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.cacheOptions"}},{"id":1873,"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}]},"inheritedFrom":{"type":"reference","name":"Omit.context"}},{"id":1831,"name":"cookieJar","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"PromiseCookieJar","package":"got-cjs","name":"PromiseCookieJar"},{"type":"reference","qualifiedName":"ToughCookieJar","package":"got-cjs","name":"ToughCookieJar"}]},"inheritedFrom":{"type":"reference","name":"Omit.cookieJar"}},{"id":1814,"name":"countryCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Two-letter ISO 3166 country code."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":49,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1889,"name":"createConnection","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"CreateConnectionFunction","package":"got-cjs","name":"CreateConnectionFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.createConnection"}},{"id":1827,"name":"decompress","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.decompress"}},{"id":1872,"name":"dnsCache","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"},{"type":"reference","qualifiedName":"CacheableLookup","package":"cacheable-lookup","name":"default"}]},"inheritedFrom":{"type":"reference","name":"Omit.dnsCache"}},{"id":1834,"name":"dnsLookup","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":1835,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":1836,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"tags":[{"tag":"see","text":"https://nodejs.org/api/dns.html#dns_dns_lookup_hostname_options_callback\\n"}]},"parameters":[{"id":1837,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1838,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}},{"id":1839,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1840,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":1841,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1842,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":1843,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1844,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":1845,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1846,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1847,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1848,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":1849,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1850,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":1851,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1852,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":1853,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1854,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1855,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"LookupOptions","package":"cacheable-lookup","name":"LookupOptions"},{"type":"reflection","declaration":{"id":1856,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1857,"name":"all","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/cacheable-lookup/index.d.ts","line":104,"character":52}],"type":{"type":"literal","value":true}}],"groups":[{"title":"Properties","kind":1024,"children":[1857]}]}}]}},{"id":1858,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1859,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":1860,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1861,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":1862,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","qualifiedName":"EntryObject","package":"cacheable-lookup","name":"EntryObject"}}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":1863,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1864,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1865,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"LookupOptions","package":"cacheable-lookup","name":"LookupOptions"}},{"id":1866,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1867,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":1868,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1869,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":1870,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1871,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}]},"inheritedFrom":{"type":"reference","name":"Omit.dnsLookup"}},{"id":1884,"name":"dnsLookupIpVersion","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"DnsLookupIpVersion","package":"got-cjs","name":"DnsLookupIpVersion"},"inheritedFrom":{"type":"reference","name":"Omit.dnsLookupIpVersion"}},{"id":1892,"name":"encoding","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"global.BufferEncoding","package":"@types/node","name":"BufferEncoding"}]},"inheritedFrom":{"type":"reference","name":"Omit.encoding"}},{"id":1875,"name":"followRedirect","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.followRedirect"}},{"id":1830,"name":"form","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}]},"inheritedFrom":{"type":"reference","name":"Omit.form"}},{"id":1826,"name":"h2session","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ClientHttp2Session","package":"@types/node","name":"ClientHttp2Session"}]},"inheritedFrom":{"type":"reference","name":"Omit.h2session"}},{"id":1812,"name":"headerGeneratorOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Configuration to be used for generating correct browser headers.\\nSee the [`header-generator`](https://github.com/apify/header-generator) library."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":39,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"id":1810,"name":"headers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Additional HTTP headers to add. It\'s only recommended to use this option,\\nwith headers that are typically added by websites, such as cookies. Overriding\\ndefault browser headers will remove the masking this function provides."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"overwrites":{"type":"reference","name":"Omit.headers"}},{"id":1874,"name":"hooks","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/got-cjs/dist/source/core/options.d.ts","line":556,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"Hooks","package":"got-cjs","name":"Hooks"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"inheritedFrom":{"type":"reference","name":"Omit.hooks"}},{"id":1881,"name":"http2","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.http2"}},{"id":1891,"name":"https","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"HttpsOptions","package":"got-cjs","name":"HttpsOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.https"}},{"id":1832,"name":"ignoreInvalidCookies","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.ignoreInvalidCookies"}},{"id":1816,"name":"ignoreSslErrors","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to true, SSL/TLS certificate errors will be ignored."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":59,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1894,"name":"isStream","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.isStream"}},{"id":1822,"name":"json","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The `boolean` type for `json` is deprecated"},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":97,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}]}},{"id":1813,"name":"languageCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Two-letter ISO 639 language code."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":44,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1888,"name":"localAddress","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.localAddress"}},{"id":1898,"name":"maxHeaderSize","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]},"inheritedFrom":{"type":"reference","name":"Omit.maxHeaderSize"}},{"id":1876,"name":"maxRedirects","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]},"inheritedFrom":{"type":"reference","name":"Omit.maxRedirects"}},{"id":1809,"name":"method","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"HTTP method."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":21,"character":4}],"type":{"type":"reference","qualifiedName":"Method","package":"got-cjs","name":"Method"},"overwrites":{"type":"reference","name":"Omit.method"}},{"id":1883,"name":"methodRewriting","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.methodRewriting"}},{"id":1896,"name":"pagination","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"PaginationOptions","package":"got-cjs","name":"PaginationOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.pagination"}},{"id":1885,"name":"parseJson","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ParseJsonFunction","package":"got-cjs","name":"ParseJsonFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.parseJson"}},{"id":1880,"name":"password","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.password"}},{"id":1828,"name":"prefixUrl","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"URL","package":"@types/node","name":"URL"}]},"inheritedFrom":{"type":"reference","name":"Omit.prefixUrl"}},{"id":1811,"name":"proxyUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An HTTP proxy to be passed down to the HTTP request. Supports proxy authentication with Basic Auth."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1824,"name":"request","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"RequestFunction","package":"got-cjs","name":"RequestFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.request"}},{"id":1893,"name":"resolveBodyOnly","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.resolveBodyOnly"}},{"id":1895,"name":"responseType","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ResponseType","package":"got-cjs","name":"ResponseType"}]},"inheritedFrom":{"type":"reference","name":"Omit.responseType"}},{"id":1887,"name":"retry","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/got-cjs/dist/source/core/options.d.ts","line":557,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"RetryOptions","package":"got-cjs","name":"RetryOptions"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"inheritedFrom":{"type":"reference","name":"Omit.retry"}},{"id":1833,"name":"searchParams","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"SearchParameters","package":"got-cjs","name":"SearchParameters"},{"type":"reference","qualifiedName":"URLSearchParams","package":"@types/node","name":"URLSearchParams"}]},"inheritedFrom":{"type":"reference","name":"Omit.searchParams"}},{"id":1820,"name":"sessionToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A unique object used to generate browser headers. By default, new headers are generated on every call.\\nSet this option to make these headers persistent."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":90,"character":4}],"type":{"type":"intrinsic","name":"object"}},{"id":1897,"name":"setHost","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.setHost"}},{"id":1821,"name":"stream","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":92,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1886,"name":"stringifyJson","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"StringifyJsonFunction","package":"got-cjs","name":"StringifyJsonFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.stringifyJson"}},{"id":1878,"name":"throwHttpErrors","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.throwHttpErrors"}},{"id":1823,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"Delays","package":"got-cjs","name":"Delays"}]},"inheritedFrom":{"type":"reference","name":"Omit.timeout"}},{"id":1808,"name":"url","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":" URL of the target endpoint. Supports both HTTP and HTTPS schemes."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":16,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"Omit.url"}},{"id":1819,"name":"useHttp2","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to false, it will prevent use of HTTP2 requests. This is strongly discouraged. Websites\\nexpect HTTP2 connections, because browsers use HTTP2 by default. It will automatically downgrade\\nto HTTP/1.1 for websites that do not support HTTP2. For Node 10 this option is always set to `false`\\nbecause Node 10 does not support HTTP2 very well. Upgrade to Node 12 for better performance."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":84,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1817,"name":"useInsecureHttpParser","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Node.js\' HTTP parser is stricter than parsers used by web browsers, which prevents scraping of websites\\nwhose servers do not comply with HTTP specs, either by accident or due to some anti-scraping protections,\\ncausing e.g. the `invalid header value char` error. The `useInsecureHttpParser` option forces\\nthe HTTP parser to ignore certain errors which lets you scrape such websites.\\nHowever, it will also open your application to some security vulnerabilities,\\nalthough the risk should be negligible as these vulnerabilities mainly relate to server applications, not clients.\\nLearn more in this [blog post](https://snyk.io/blog/node-js-release-fixes-a-critical-http-security-vulnerability/)."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":70,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1815,"name":"useMobileVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true`, the function uses User-Agent of a mobile browser."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":54,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1879,"name":"username","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.username"}}],"groups":[{"title":"Properties","kind":1024,"children":[1818,1825,1882,1829,1877,1890,1873,1831,1814,1889,1827,1872,1834,1884,1892,1875,1830,1826,1812,1810,1874,1881,1891,1832,1816,1894,1822,1813,1888,1898,1876,1809,1883,1896,1885,1880,1828,1811,1824,1893,1895,1887,1833,1820,1897,1821,1886,1878,1823,1808,1819,1817,1815,1879]}],"sources":[{"fileName":"packages/core/src/utils_request.ts","line":12,"character":17}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"OptionsInit","package":"got-cjs","name":"GotOptionsInit"},{"type":"literal","value":"json"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"}]},{"id":1899,"name":"AbortFunction","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":100,"character":12}],"type":{"type":"reflection","declaration":{"id":1900,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":100,"character":28}],"signatures":[{"id":1901,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1902,"name":"response","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IncomingMessage","package":"@types/node","name":"IncomingMessage"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":1803,"name":"RequestAsBrowserResult","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":12}],"typeParameter":[{"id":1806,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"string"}}],"type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"IncomingMessage","package":"@types/node","name":"IncomingMessage"},{"type":"reflection","declaration":{"id":1804,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1805,"name":"body","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":69}],"type":{"type":"reference","id":1806,"name":"T"}}],"groups":[{"title":"Properties","kind":1024,"children":[1805]}],"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":67}]}}]}},{"id":1799,"name":"requestAsBrowser","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":144,"character":22}],"signatures":[{"id":1800,"name":"requestAsBrowser","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"**IMPORTANT:** This function uses an insecure version of HTTP parser by default\\nand also ignores SSL/TLS errors. This is very useful in scraping, because it allows bypassing\\ncertain anti-scraping walls, but it also exposes some vulnerability. For other than scraping\\nscenarios, please set `useInsecureHttpParser: false` and `ignoreSslErrors: false`.","text":"Sends a HTTP request that looks like a request sent by a web browser,\\nfully emulating browser\'s HTTP headers. It uses HTTP2 by default for Node 12+.\\n\\nThis function is useful for web scraping of websites that send the full HTML in the first response.\\nThanks to this function, the target web server has no simple way to find out the request\\nhasn\'t been sent by a human\'s web browser. Using a headless browser for such requests\\nis an order of magnitude more resource-intensive than this function.\\n\\nThe function emulates the Chrome and Firefox web browsers. If you want more control\\nover the browsers and their versions, use the `headerGeneratorOptions` property.\\nYou can find more info in the readme of the [`header-generator`](https://github.com/apify/header-generator) library.\\n\\nInternally, the function uses the [`got-scraping`](https://github.com/apify/got-scraping) library to perform the request.\\nAll `options` not recognized by this function are passed to it so see it for more details.\\n\\n**Example usage:**\\n```js\\nconst Apify = require(\'apify\');\\n\\nconst { utils: { requestAsBrowser } } = Apify;\\n\\n...\\n\\nconst response = await requestAsBrowser({ url: \'https://www.example.com/\' });\\n\\nconst html = response.body;\\nconst status = response.statusCode;\\nconst contentType = response.headers[\'content-type\'];\\n```\\n","returns":"The result can be various objects, but it will always be like a\\n[Node.js HTTP response stream](https://nodejs.org/api/http.html#http_class_http_incomingmessage)\\nwith a \'body\' property for the parsed response body, unless the \'stream\' option is used.\\n"},"typeParameter":[{"id":1801,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":1802,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"All `requestAsBrowser` configuration options.\\n"},"type":{"type":"reference","id":1807,"name":"RequestAsBrowserOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1803,"typeArguments":[{"type":"reference","id":1801,"name":"T"}],"name":"RequestAsBrowserResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"groups":[{"title":"Interfaces","kind":256,"children":[1807]},{"title":"Type aliases","kind":4194304,"children":[1899,1803]},{"title":"Functions","kind":64,"children":[1799]}],"sources":[{"fileName":"packages/core/src/utils_request.ts","line":1,"character":0}],"permalink":"/apify-ts/api/next/core/namespace/requestUtils","previousId":451,"nextId":1903},{"id":1903,"name":"socialUtils","kind":4,"kindString":"Namespace","flags":{},"comment":{"shortText":"A namespace that contains various utilities to help you extract social handles\\nfrom text, URLs and and HTML documents.","text":"**Example usage:**\\n\\n```javascript\\nconst Apify = require(\'apify\');\\n\\nconst emails = Apify.utils.social.emailsFromText(\'alice@example.com bob@example.com\');\\n```"},"children":[{"id":1922,"name":"SocialHandles","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"Representation of social handles parsed from a HTML page."},"children":[{"id":1923,"name":"emails","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":235,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":1929,"name":"facebooks","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":241,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":1928,"name":"instagrams","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":240,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":1926,"name":"linkedIns","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":238,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":1924,"name":"phones","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":236,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":1925,"name":"phonesUncertain","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":237,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":1927,"name":"twitters","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":239,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":1930,"name":"youtubes","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":242,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"groups":[{"title":"Properties","kind":1024,"children":[1923,1929,1928,1926,1924,1925,1927,1930]}],"sources":[{"fileName":"packages/core/src/utils_social.ts","line":234,"character":17}]},{"id":1920,"name":"EMAIL_REGEX","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"Regular expression to exactly match a single email address.\\nIt has the following form: `/^...$/i`."},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":30,"character":13}],"type":{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"},"defaultValue":"..."},{"id":1921,"name":"EMAIL_REGEX_GLOBAL","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"Regular expression to find multiple email addresses in a text.\\nIt has the following form: `/.../ig`."},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":37,"character":13}],"type":{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"},"defaultValue":"..."},{"id":1937,"name":"FACEBOOK_REGEX","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"Regular expression to exactly match a single Facebook profile URL.\\nIt has the following form: `/^...$/i` and matches URLs such as:\\n```\\nhttps://www.facebook.com/apifytech\\nfacebook.com/apifytech\\nfb.com/apifytech\\nhttps://www.facebook.com/profile.php?id=123456789\\n```","text":"The regular expression does NOT match URLs with additional\\nsubdirectories or query parameters, such as:\\n```\\nhttps://www.facebook.com/apifytech/photos\\n```\\n\\nExample usage:\\n```\\nif (Apify.utils.social.FACEBOOK_REGEX.test(\'https://www.facebook.com/apifytech\')) {\\n    console.log(\'Match!\');\\n}\\n```\\n"},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":500,"character":13}],"type":{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"},"defaultValue":"..."},{"id":1938,"name":"FACEBOOK_REGEX_GLOBAL","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"Regular expression to find multiple Facebook profile URLs in a text or HTML.\\nIt has the following form: `/.../ig` and matches URLs such as:\\n```\\nhttps://www.facebook.com/apifytech\\nfacebook.com/apifytech\\nfb.com/apifytech\\n```","text":"If the profile URL contains subdirectories or query parameters, the regular expression\\nextracts just the base part of the profile URL. For example, from text such as:\\n```\\nhttps://www.facebook.com/apifytech/photos\\n```\\nthe expression extracts only the following base URL:\\n```\\nhttps://www.facebook.com/apifytech\\n```\\n\\nExample usage:\\n```\\nconst matches = text.match(Apify.utils.social.FACEBOOK_REGEX_GLOBAL);\\nif (matches) console.log(`${matches.length} Facebook profiles found!`);\\n```\\n"},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":527,"character":13}],"type":{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"},"defaultValue":"..."},{"id":1933,"name":"INSTAGRAM_REGEX","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"Regular expression to exactly match a single Instagram profile URL.\\nIt has the following form: `/^...$/i` and matches URLs such as:\\n```\\nhttps://www.instagram.com/old_prague\\nwww.instagram.com/old_prague/\\ninstagr.am/old_prague\\n```","text":"The regular expression does NOT match URLs with additional\\nsubdirectories or query parameters, such as:\\n```\\nhttps://www.instagram.com/cristiano/followers\\n```\\n\\nExample usage:\\n```\\nif (Apify.utils.social.INSTAGRAM_REGEX.test(\'https://www.instagram.com/old_prague\')) {\\n    console.log(\'Match!\');\\n}\\n```\\n"},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":399,"character":13}],"type":{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"},"defaultValue":"..."},{"id":1934,"name":"INSTAGRAM_REGEX_GLOBAL","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"Regular expression to find multiple Instagram profile URLs in a text or HTML.\\nIt has the following form: `/.../ig` and matches URLs such as:\\n```\\nhttps://www.instagram.com/old_prague\\nwww.instagram.com/old_prague/\\ninstagr.am/old_prague\\n```","text":"If the profile URL contains subdirectories or query parameters, the regular expression\\nextracts just the base part of the profile URL. For example, from text such as:\\n```\\nhttps://www.instagram.com/cristiano/followers\\n```\\nthe expression extracts just the following base URL:\\n```\\nhttps://www.instagram.com/cristiano\\n```\\n\\nExample usage:\\n```\\nconst matches = text.match(Apify.utils.social.INSTAGRAM_REGEX_GLOBAL);\\nif (matches) console.log(`${matches.length} Instagram profiles found!`);\\n```\\n"},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":426,"character":13}],"type":{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"},"defaultValue":"..."},{"id":1931,"name":"LINKEDIN_REGEX","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"Regular expression to exactly match a single LinkedIn profile URL.\\nIt has the following form: `/^...$/i` and matches URLs such as:\\n```\\nhttps://www.linkedin.com/in/alan-turing\\nen.linkedin.com/in/alan-turing\\nlinkedin.com/in/alan-turing\\n```","text":"The regular expression does NOT match URLs with additional\\nsubdirectories or query parameters, such as:\\n```\\nhttps://www.linkedin.com/in/linus-torvalds/latest-activity\\n```\\n\\nExample usage:\\n```\\nif (Apify.utils.social.LINKEDIN_REGEX.test(\'https://www.linkedin.com/in/alan-turing\')) {\\n    console.log(\'Match!\');\\n}\\n```\\n"},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":348,"character":13}],"type":{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"},"defaultValue":"..."},{"id":1932,"name":"LINKEDIN_REGEX_GLOBAL","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"Regular expression to find multiple LinkedIn profile URLs in a text or HTML.\\nIt has the following form: `/.../ig` and matches URLs such as:\\n```\\nhttps://www.linkedin.com/in/alan-turing\\nen.linkedin.com/in/alan-turing\\nlinkedin.com/in/alan-turing\\n```","text":"If the profile URL contains subdirectories or query parameters, the regular expression\\nextracts just the base part of the profile URL. For example, from text such as:\\n```\\nhttps://www.linkedin.com/in/linus-torvalds/latest-activity\\n```\\nthe expression extracts just the following base URL:\\n```\\nhttps://www.linkedin.com/in/linus-torvalds\\n```\\n\\nExample usage:\\n```\\nconst matches = text.match(Apify.utils.social.LINKEDIN_REGEX_GLOBAL);\\nif (matches) console.log(`${matches.length} LinkedIn profiles found!`);\\n```\\n"},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":375,"character":13}],"type":{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"},"defaultValue":"..."},{"id":1935,"name":"TWITTER_REGEX","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"Regular expression to exactly match a single Twitter profile URL.\\nIt has the following form: `/^...$/i` and matches URLs such as:\\n```\\nhttps://www.twitter.com/apify\\ntwitter.com/apify\\n```","text":"The regular expression does NOT match URLs with additional\\nsubdirectories or query parameters, such as:\\n```\\nhttps://www.twitter.com/realdonaldtrump/following\\n```\\n\\nExample usage:\\n```\\nif (Apify.utils.social.TWITTER_REGEX.test(\'https://www.twitter.com/apify\')) {\\n    console.log(\'Match!\');\\n}\\n```\\n"},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":449,"character":13}],"type":{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"},"defaultValue":"..."},{"id":1936,"name":"TWITTER_REGEX_GLOBAL","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"Regular expression to find multiple Twitter profile URLs in a text or HTML.\\nIt has the following form: `/.../ig` and matches URLs such as:\\n```\\nhttps://www.twitter.com/apify\\ntwitter.com/apify\\n```","text":"If the profile URL contains subdirectories or query parameters, the regular expression\\nextracts just the base part of the profile URL. For example, from text such as:\\n```\\nhttps://www.twitter.com/realdonaldtrump/following\\n```\\nthe expression extracts only the following base URL:\\n```\\nhttps://www.twitter.com/realdonaldtrump\\n```\\n\\nExample usage:\\n```\\nconst matches = text.match(Apify.utils.social.TWITTER_REGEX_STRING);\\nif (matches) console.log(`${matches.length} Twitter profiles found!`);\\n```\\n"},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":475,"character":13}],"type":{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"},"defaultValue":"..."},{"id":1939,"name":"YOUTUBE_REGEX","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"Regular expression to exactly match a single Youtube channel, user or video URL.\\nIt has the following form: `/^...$/i` and matches URLs such as:\\n```\\nhttps://www.youtube.com/watch?v=kM7YfhfkiEE\\nhttps://youtu.be/kM7YfhfkiEE\\nhttps://www.youtube.com/c/TrapNation\\nhttps://www.youtube.com/channel/UCklie6BM0fhFvzWYqQVoCTA\\nhttps://www.youtube.com/user/pewdiepie\\n```","text":"Please note that this won\'t match URLs like https://www.youtube.com/pewdiepie that redirect to /user or /channel.\\n\\nExample usage:\\n```\\nif (Apify.utils.social.YOUTUBE_REGEX.test(\'https://www.youtube.com/watch?v=kM7YfhfkiEE\')) {\\n    console.log(\'Match!\');\\n}\\n```\\n"},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":549,"character":13}],"type":{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"},"defaultValue":"..."},{"id":1940,"name":"YOUTUBE_REGEX_GLOBAL","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"Regular expression to find multiple Youtube channel, user or video URLs in a text or HTML.\\nIt has the following form: `/.../ig` and matches URLs such as:\\n```\\nhttps://www.youtube.com/watch?v=kM7YfhfkiEE\\nhttps://youtu.be/kM7YfhfkiEE\\nhttps://www.youtube.com/c/TrapNation\\nhttps://www.youtube.com/channel/UCklie6BM0fhFvzWYqQVoCTA\\nhttps://www.youtube.com/user/pewdiepie\\n```","text":"Please note that this won\'t match URLs like https://www.youtube.com/pewdiepie that redirect to /user or /channel.\\n\\nExample usage:\\n```\\nconst matches = text.match(Apify.utils.social.YOUTUBE_REGEX_GLOBAL);\\nif (matches) console.log(`${matches.length} Youtube videos found!`);\\n```\\n"},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":570,"character":13}],"type":{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"},"defaultValue":"..."},{"id":1904,"name":"emailsFromText","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":48,"character":16}],"signatures":[{"id":1905,"name":"emailsFromText","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"The function extracts email addresses from a plain text.\\nNote that the function preserves the order of emails and keep duplicates.","returns":"Array of emails addresses found.\\nIf no emails are found, the function returns an empty array.\\n"},"parameters":[{"id":1906,"name":"text","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Text to search in."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]},{"id":1907,"name":"emailsFromUrls","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":61,"character":16}],"signatures":[{"id":1908,"name":"emailsFromUrls","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"The function extracts email addresses from a list of URLs.\\nBasically it looks for all `mailto:` URLs and returns valid email addresses from them.\\nNote that the function preserves the order of emails and keep duplicates.","returns":"Array of emails addresses found.\\nIf no emails are found, the function returns an empty array.\\n"},"parameters":[{"id":1909,"name":"urls","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Array of URLs."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]},{"id":1916,"name":"parseHandlesFromHtml","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":275,"character":16}],"signatures":[{"id":1917,"name":"parseHandlesFromHtml","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"The function attempts to extract emails, phone numbers and social profile URLs from a HTML document,\\nspecifically LinkedIn, Twitter, Instagram and Facebook profile URLs.\\nThe function removes duplicates from the resulting arrays and sorts the items alphabetically.","text":"Note that the `phones` field contains phone numbers extracted from the special phone links\\nsuch as `[call us](tel:+1234556789)` (see {@link social.phonesFromUrls})\\nand potentially other sources with high certainty, while `phonesUncertain` contains phone numbers\\nextracted from the plain text, which might be very inaccurate.\\n\\n**Example usage:**\\n```javascript\\nconst Apify = require(\'apify\');\\n\\nconst browser = await Apify.launchPuppeteer();\\nconst page = await browser.newPage();\\nawait page.goto(\'http://www.example.com\');\\nconst html = await page.content();\\n\\nconst result = Apify.utils.social.parseHandlesFromHtml(html);\\nconsole.log(\'Social handles:\');\\nconsole.dir(result);\\n```\\n","returns":"An object with the social handles.\\n"},"parameters":[{"id":1918,"name":"html","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"HTML text"},"type":{"type":"intrinsic","name":"string"}},{"id":1919,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}]},"defaultValue":"null"}],"type":{"type":"reference","id":1922,"name":"SocialHandles"}}]},{"id":1910,"name":"phonesFromText","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":143,"character":16}],"signatures":[{"id":1911,"name":"phonesFromText","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"The function attempts to extract phone numbers from a text. Please note that\\nthe results might not be accurate, since phone numbers appear in a large variety of formats and conventions.\\nIf you encounter some problems, please [file an issue](https://github.com/apify/apify-js/issues).","returns":"Array of phone numbers found.\\nIf no phone numbers are found, the function returns an empty array.\\n"},"parameters":[{"id":1912,"name":"text","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Text to search the phone numbers in."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]},{"id":1913,"name":"phonesFromUrls","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/utils_social.ts","line":169,"character":16}],"signatures":[{"id":1914,"name":"phonesFromUrls","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Finds phone number links in an array of URLs and extracts the phone numbers from them.\\nNote that the phone number links look like `tel://123456789`, `tel:/123456789` or `tel:123456789`.","returns":"Array of phone numbers found.\\nIf no phone numbers are found, the function returns an empty array.\\n"},"parameters":[{"id":1915,"name":"urls","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Array of URLs."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}],"groups":[{"title":"Interfaces","kind":256,"children":[1922]},{"title":"Variables","kind":32,"children":[1920,1921,1937,1938,1933,1934,1931,1932,1935,1936,1939,1940]},{"title":"Functions","kind":64,"children":[1904,1907,1916,1910,1913]}],"sources":[{"fileName":"packages/core/src/utils_social.ts","line":15,"character":0}],"permalink":"/apify-ts/api/next/core/namespace/socialUtils","previousId":1798,"nextId":2110},{"id":2181,"name":"LogLevel","kind":8,"kindString":"Enumeration","flags":{"isExternal":true},"children":[{"id":2187,"name":"DEBUG","kind":16,"kindString":"Enumeration member","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log_consts.d.ts","line":7,"character":4}],"defaultValue":"5"},{"id":2183,"name":"ERROR","kind":16,"kindString":"Enumeration member","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log_consts.d.ts","line":3,"character":4}],"defaultValue":"1"},{"id":2186,"name":"INFO","kind":16,"kindString":"Enumeration member","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log_consts.d.ts","line":6,"character":4}],"defaultValue":"4"},{"id":2182,"name":"OFF","kind":16,"kindString":"Enumeration member","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log_consts.d.ts","line":2,"character":4}],"defaultValue":"0"},{"id":2188,"name":"PERF","kind":16,"kindString":"Enumeration member","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log_consts.d.ts","line":8,"character":4}],"defaultValue":"6"},{"id":2184,"name":"SOFT_FAIL","kind":16,"kindString":"Enumeration member","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log_consts.d.ts","line":4,"character":4}],"defaultValue":"2"},{"id":2185,"name":"WARNING","kind":16,"kindString":"Enumeration member","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log_consts.d.ts","line":5,"character":4}],"defaultValue":"3"}],"groups":[{"title":"Enumeration members","kind":16,"children":[2187,2183,2186,2182,2188,2184,2185]}],"sources":[{"fileName":"node_modules/@apify/log/log_consts.d.ts","line":1,"character":20}],"permalink":"/apify-ts/api/next/core/enum/LogLevel","previousId":462,"nextId":1662},{"id":256,"name":"AutoscaledPool","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"Manages a pool of asynchronous resource-intensive tasks that are executed in parallel.\\nThe pool only starts new tasks if there is enough free CPU and memory available\\nand the Javascript event loop is not blocked.","text":"The information about the CPU and memory usage is obtained by the {@link Snapshotter} class,\\nwhich makes regular snapshots of system resources that may be either local\\nor from the Apify cloud infrastructure in case the process is running on the Apify platform.\\nMeaningful data gathered from these snapshots is provided to `AutoscaledPool` by the {@link SystemStatus} class.\\n\\nBefore running the pool, you need to implement the following three functions:\\n{@link AutoscaledPoolOptions.runTaskFunction},\\n{@link AutoscaledPoolOptions.isTaskReadyFunction} and\\n{@link AutoscaledPoolOptions.isFinishedFunction}.\\n\\nThe auto-scaled pool is started by calling the {@link AutoscaledPool.run} function.\\nThe pool periodically queries the {@link AutoscaledPoolOptions.isTaskReadyFunction} function\\nfor more tasks, managing optimal concurrency, until the function resolves to `false`. The pool then queries\\nthe {@link AutoscaledPoolOptions.isFinishedFunction}. If it resolves to `true`, the run finishes after all running tasks complete.\\nIf it resolves to `false`, it assumes there will be more tasks available later and keeps periodically querying for tasks.\\nIf any of the tasks throws then the {@link AutoscaledPool.run} function rejects the promise with an error.\\n\\nThe pool evaluates whether it should start a new task every time one of the tasks finishes\\nand also in the interval set by the `options.maybeRunIntervalSecs` parameter.\\n\\n**Example usage:**\\n\\n```javascript\\nconst pool = new Apify.AutoscaledPool({\\n    maxConcurrency: 50,\\n    runTaskFunction: async () => {\\n        // Run some resource-intensive asynchronous operation here.\\n    },\\n    isTaskReadyFunction: async () => {\\n        // Tell the pool whether more tasks are ready to be processed.\\n        // Return true or false\\n    },\\n    isFinishedFunction: async () => {\\n        // Tell the pool whether it should finish\\n        // or wait for more tasks to become available.\\n        // Return true or false\\n    }\\n});\\n\\nawait pool.run();\\n```"},"children":[{"id":257,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":199,"character":4}],"signatures":[{"id":258,"name":"new AutoscaledPool","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":259,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":236,"name":"AutoscaledPoolOptions"}}],"type":{"type":"reference","id":256,"name":"AutoscaledPool"}}]},{"id":310,"name":"currentConcurrency","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":324,"character":8}],"getSignature":[{"id":311,"name":"currentConcurrency","kind":524288,"kindString":"Get signature","flags":{},"comment":{"shortText":"Gets the the number of parallel tasks currently running in the pool."},"type":{"type":"intrinsic","name":"number"}}]},{"id":306,"name":"desiredConcurrency","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":308,"character":8}],"getSignature":[{"id":307,"name":"desiredConcurrency","kind":524288,"kindString":"Get signature","flags":{},"comment":{"shortText":"Gets the desired concurrency for the pool,\\nwhich is an estimated number of parallel tasks that the system can currently support."},"type":{"type":"intrinsic","name":"number"}}],"setSignature":[{"id":308,"name":"desiredConcurrency","kind":1048576,"kindString":"Set signature","flags":{},"comment":{"shortText":"Sets the desired concurrency for the pool, i.e. the number of tasks that should be running\\nin parallel if there\'s large enough supply of tasks."},"parameters":[{"id":309,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":302,"name":"maxConcurrency","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":292,"character":8}],"getSignature":[{"id":303,"name":"maxConcurrency","kind":524288,"kindString":"Get signature","flags":{},"comment":{"shortText":"Gets the maximum number of tasks running in parallel."},"type":{"type":"intrinsic","name":"number"}}],"setSignature":[{"id":304,"name":"maxConcurrency","kind":1048576,"kindString":"Set signature","flags":{},"comment":{"shortText":"Sets the maximum number of tasks running in parallel."},"parameters":[{"id":305,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":298,"name":"minConcurrency","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":274,"character":8}],"getSignature":[{"id":299,"name":"minConcurrency","kind":524288,"kindString":"Get signature","flags":{},"comment":{"shortText":"Gets the minimum number of tasks running in parallel."},"type":{"type":"intrinsic","name":"number"}}],"setSignature":[{"id":300,"name":"minConcurrency","kind":1048576,"kindString":"Set signature","flags":{},"comment":{"shortText":"Sets the minimum number of tasks running in parallel.","text":"*WARNING:* If you set this value too high with respect to the available system memory and CPU, your code might run extremely slow or crash.\\nIf you\'re not sure, just keep the default value and the concurrency will scale up automatically.\\n"},"parameters":[{"id":301,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":314,"name":"abort","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":367,"character":10}],"signatures":[{"id":315,"name":"abort","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Aborts the run of the auto-scaled pool and destroys it. The promise returned from\\nthe {@link AutoscaledPool.run} function will immediately resolve, no more new tasks\\nwill be spawned and all running tasks will be left in their current state.","text":"Due to the nature of the tasks, auto-scaled pool cannot reliably guarantee abortion\\nof all the running tasks, therefore, no abortion is attempted and some of the tasks\\nmay finish, while others may not. Essentially, auto-scaled pool doesn\'t care about\\ntheir state after the invocation of `.abort()`, but that does not mean that some\\nparts of their asynchronous chains of commands will not execute.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":316,"name":"pause","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":386,"character":10}],"signatures":[{"id":317,"name":"pause","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Prevents the auto-scaled pool from starting new tasks, but allows the running ones to finish\\n(unlike abort, which terminates them). Used together with {@link AutoscaledPool.resume}","text":"The function\'s promise will resolve once all running tasks have completed and the pool\\nis effectively idle. If the `timeoutSecs` argument is provided, the promise will reject\\nwith a timeout error after the `timeoutSecs` seconds.\\n\\nThe promise returned from the {@link AutoscaledPool.run} function will not resolve\\nwhen `.pause()` is invoked (unlike abort, which resolves it).\\n"},"parameters":[{"id":318,"name":"timeoutSecs","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":319,"name":"resume","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":416,"character":4}],"signatures":[{"id":320,"name":"resume","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Resumes the operation of the autoscaled-pool by allowing more tasks to be run.\\nUsed together with {@link AutoscaledPool.pause}","text":"Tasks will automatically start running again in `options.maybeRunIntervalSecs`.\\n"},"type":{"type":"intrinsic","name":"void"}}]},{"id":312,"name":"run","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":332,"character":10}],"signatures":[{"id":313,"name":"run","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Runs the auto-scaled pool. Returns a promise that gets resolved or rejected once\\nall the tasks are finished or one of them fails."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"groups":[{"title":"Constructors","kind":512,"children":[257]},{"title":"Accessors","kind":262144,"children":[310,306,302,298]},{"title":"Methods","kind":2048,"children":[314,316,319,312]}],"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":167,"character":13}],"permalink":"/apify-ts/api/next/core/class/AutoscaledPool","nextId":1453},{"id":1453,"name":"Configuration","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"`Configuration` is a value object holding the SDK configuration. We can use it in two ways:","text":"1. When using `Apify` class, we can get the instance configuration via `sdk.config`\\n    ```js\\n    const { Apify } = require(\'apify\');\\n\\n    const sdk = new Apify({ token: \'123\' });\\n    console.log(sdk.config.get(\'token\')); // \'123\'\\n    ```\\n2. To get the global configuration (singleton instance). It will respect the environment variables.\\n    ```js\\n    // returns the token from APIFY_TOKEN env var\\n    console.log(Configuration.getGlobalConfig().get(\'token\'));\\n    ```\\n\\n## Supported Configuration Options\\n\\nKey | Environment Variable | Default Value\\n---|---|---\\n`defaultDatasetId` | `APIFY_DEFAULT_DATASET_ID` | `\'default\'`\\n`defaultKeyValueStoreId` | `APIFY_DEFAULT_KEY_VALUE_STORE_ID` | `\'default\'`\\n`defaultRequestQueueId` | `APIFY_DEFAULT_REQUEST_QUEUE_ID` | `\'default\'`\\n`localStorageDir` | `APIFY_LOCAL_STORAGE_DIR` | `\'./apify_storage\'`\\n`localStorageEnableWalMode` | `APIFY_LOCAL_STORAGE_ENABLE_WAL_MODE` | `true`\\n`persistStateIntervalMillis` | `APIFY_PERSIST_STATE_INTERVAL_MILLIS` | `60e3`\\n`token` | `APIFY_TOKEN` | -\\n\\n## Advanced Configuration Options\\n\\nKey | Environment Variable | Default Value\\n---|---|---\\n`actorEventsWsUrl` | `APIFY_ACTOR_EVENTS_WS_URL` | -\\n`actorId` | `APIFY_ACTOR_ID` | -\\n`actorRunId` | `APIFY_ACTOR_RUN_ID` | -\\n`actorTaskId` | `APIFY_ACTOR_TASK_ID` | -\\n`apiBaseUrl` | `APIFY_API_BASE_URL` | `\'https://api.apify.com\'`\\n`containerPort` | `APIFY_CONTAINER_PORT` | `4321`\\n`containerUrl` | `APIFY_CONTAINER_URL` | `\'http://localhost:4321\'`\\n`inputKey` | `APIFY_INPUT_KEY` | `\'INPUT\'`\\n`isAtHome` | `APIFY_IS_AT_HOME` | -\\n`metamorphAfterSleepMillis` | `APIFY_METAMORPH_AFTER_SLEEP_MILLIS` | `300e3`\\n`proxyHostname` | `APIFY_PROXY_HOSTNAME` | `\'proxy.apify.com\'`\\n`proxyPassword` | `APIFY_PROXY_PASSWORD` | -\\n`proxyPort` | `APIFY_PROXY_PORT` | `8000`\\n`proxyStatusUrl` | `APIFY_PROXY_STATUS_URL` | `\'http://proxy.apify.com\'`\\n`userId` | `APIFY_USER_ID` | -\\n\\n## Not Supported environment variables\\n\\n- `MEMORY_MBYTES`\\n- `HEADLESS`\\n- `XVFB`\\n- `CHROME_EXECUTABLE_PATH`\\n"},"children":[{"id":1504,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/configuration.ts","line":160,"character":4}],"signatures":[{"id":1505,"name":"new Configuration","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates new `Configuration` instance with provided options. Env vars will have precedence over those."},"parameters":[{"id":1506,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1430,"name":"ConfigurationOptions"},"defaultValue":"{}"}],"type":{"type":"reference","id":1453,"name":"Configuration"}}]},{"id":1509,"name":"get","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/configuration.ts","line":179,"character":4}],"signatures":[{"id":1510,"name":"get","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns configured value. First checks the environment variables, then provided configuration,\\nfallbacks to the `defaultValue` argument if provided, otherwise uses the default value as described\\nin the above section."},"typeParameter":[{"id":1511,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":1430,"name":"ConfigurationOptions"}}},{"id":1512,"name":"U","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"}]}}],"parameters":[{"id":1513,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1511,"name":"T"}},{"id":1514,"name":"defaultValue","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1512,"name":"U"}}],"type":{"type":"reference","id":1512,"name":"U"}}]},{"id":1519,"name":"set","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/configuration.ts","line":214,"character":4}],"signatures":[{"id":1520,"name":"set","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Sets value for given option. Only affects this `Configuration` instance, the value will not be propagated down to the env var.\\nTo reset a value, we can omit the `value` argument or pass `undefined` there."},"parameters":[{"id":1521,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":1430,"name":"ConfigurationOptions"}}},{"id":1522,"name":"value","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"}]}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1500,"name":"getDefaultClient","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":307,"character":11}],"signatures":[{"id":1501,"name":"getDefaultClient","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets default {@link ApifyClient} instance."},"type":{"type":"reference","qualifiedName":"ApifyClient","package":"apify-client","name":"ApifyClient"}}]},{"id":1498,"name":"getGlobalConfig","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":296,"character":11}],"signatures":[{"id":1499,"name":"getGlobalConfig","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the global configuration instance. It will respect the environment variables.\\nAs opposed to this method, we can also get the SDK instance configuration via `sdk.config` property."},"type":{"type":"reference","id":1453,"name":"Configuration"}}]},{"id":1502,"name":"resetGlobalState","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":315,"character":11}],"signatures":[{"id":1503,"name":"resetGlobalState","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Resets global configuration instance. The default instance holds configuration based on env vars,\\nif we want to change them, we need to first reset the global state. Used mainly for testing purposes."},"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Constructors","kind":512,"children":[1504]},{"title":"Methods","kind":2048,"children":[1509,1519,1500,1498,1502]}],"sources":[{"fileName":"packages/core/src/configuration.ts","line":89,"character":13}],"permalink":"/apify-ts/api/next/core/class/Configuration","previousId":256,"nextId":992},{"id":992,"name":"Dataset","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"The `Dataset` class represents a store for structured data where each object stored has the same attributes,\\nsuch as online store products or real estate offers. You can imagine it as a table,\\nwhere each object is a row and its attributes are columns.\\nDataset is an append-only storage - you can only add new records to it but you cannot modify or remove existing records.\\nTypically it is used to store crawling results.","text":"Do not instantiate this class directly, use the\\n{@link Apify.openDataset} function instead.\\n\\n`Dataset` stores its data either on local disk or in the Apify cloud,\\ndepending on whether the `APIFY_LOCAL_STORAGE_DIR` or `APIFY_TOKEN` environment variables are set.\\n\\nIf the `APIFY_LOCAL_STORAGE_DIR` environment variable is set, the data is stored in\\nthe local directory in the following files:\\n```\\n{APIFY_LOCAL_STORAGE_DIR}/datasets/{DATASET_ID}/{INDEX}.json\\n```\\nNote that `{DATASET_ID}` is the name or ID of the dataset. The default dataset has ID: `default`,\\nunless you override it by setting the `APIFY_DEFAULT_DATASET_ID` environment variable.\\nEach dataset item is stored as a separate JSON file, where `{INDEX}` is a zero-based index of the item in the dataset.\\n\\nIf the `APIFY_TOKEN` environment variable is set but `APIFY_LOCAL_STORAGE_DIR` not, the data is stored in the\\n[Apify Dataset](https://docs.apify.com/storage/dataset)\\ncloud storage. Note that you can force usage of the cloud storage also by passing the `forceCloud`\\noption to {@link Apify.openDataset} function,\\neven if the `APIFY_LOCAL_STORAGE_DIR` variable is set.\\n\\n**Example usage:**\\n\\n```javascript\\n// Write a single row to the default dataset\\nawait Apify.pushData({ col1: 123, col2: \'val2\' });\\n\\n// Open a named dataset\\nconst dataset = await Apify.openDataset(\'some-name\');\\n\\n// Write a single row\\nawait dataset.pushData({ foo: \'bar\' });\\n\\n// Write multiple rows\\nawait dataset.pushData([\\n  { foo: \'bar2\', col2: \'val2\' },\\n  { col3: 123 },\\n]);\\n```"},"children":[{"id":1005,"name":"client","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":215,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Data"}],"qualifiedName":"DatasetClient","package":"apify-client","name":"DatasetClient"}},{"id":1002,"name":"id","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":212,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1004,"name":"isLocal","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":214,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1006,"name":"log","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":216,"character":4}],"type":{"type":"reference","id":2114,"qualifiedName":"Log","package":"@apify/log","name":"Log"},"defaultValue":"..."},{"id":1003,"name":"name","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":213,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1031,"name":"drop","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":416,"character":10}],"signatures":[{"id":1032,"name":"drop","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Removes the dataset either from the Apify cloud storage or from the local directory,\\ndepending on the mode of operation."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1015,"name":"forEach","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":339,"character":10}],"signatures":[{"id":1016,"name":"forEach","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Iterates over dataset items, yielding each in turn to an `iteratee` function.\\nEach invocation of `iteratee` is called with two arguments: `(item, index)`.","text":"If the `iteratee` function returns a Promise then it is awaited before the next call.\\nIf it throws an error, the iteration is aborted and the `forEach` function throws the error.\\n\\n**Example usage**\\n```javascript\\nconst dataset = await Apify.openDataset(\'my-results\');\\nawait dataset.forEach(async (item, index) => {\\n  console.log(`Item at ${index}: ${JSON.stringify(item)}`);\\n});\\n```\\n","tags":[{"tag":"default","text":"0\\n"}]},"parameters":[{"id":1017,"name":"iteratee","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"A function that is called for every item in the dataset."},"type":{"type":"reference","id":1034,"typeArguments":[{"type":"reference","name":"Data"}],"name":"DatasetConsumer"}},{"id":1018,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":982,"name":"DatasetIteratorOptions"},"defaultValue":"{}"},{"id":1019,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"},"defaultValue":"0"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1010,"name":"getData","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":280,"character":10}],"signatures":[{"id":1011,"name":"getData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns {@link DatasetContent} object holding the items in the dataset based on the provided parameters.","text":"If you need to get data in an unparsed format, use the {@link Actor.newClient} function to get a new\\n`apify-client` instance and call\\n[`datasetClient.downloadItems()`](https://github.com/apify/apify-client-js#DatasetClient+downloadItems)\\n"},"parameters":[{"id":1012,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":973,"name":"DatasetDataOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"Data"}],"qualifiedName":"PaginatedList","package":"apify-client","name":"PaginatedList"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1013,"name":"getInfo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":315,"character":10}],"signatures":[{"id":1014,"name":"getInfo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns an object containing general information about the dataset.","text":"The function returns the same object as the Apify API Client\'s\\n[getDataset](https://docs.apify.com/api/apify-client-js/latest#ApifyClient-datasets-getDataset)\\nfunction, which in turn calls the\\n[Get dataset](https://apify.com/docs/api/v2#/reference/datasets/dataset/get-dataset)\\nAPI endpoint.\\n\\n**Example:**\\n```\\n{\\n  id: \\"WkzbQMuFYuamGv3YF\\",\\n  name: \\"my-dataset\\",\\n  userId: \\"wRsJZtadYvn4mBZmm\\",\\n  createdAt: new Date(\\"2015-12-12T07:34:14.202Z\\"),\\n  modifiedAt: new Date(\\"2015-12-13T08:36:13.202Z\\"),\\n  accessedAt: new Date(\\"2015-12-14T08:36:13.202Z\\"),\\n  itemCount: 14,\\n  cleanItemCount: 10\\n}\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"Dataset","package":"apify-client","name":"Dataset"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1020,"name":"map","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":366,"character":10}],"signatures":[{"id":1021,"name":"map","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Produces a new array of values by mapping each value in list through a transformation function `iteratee()`.\\nEach invocation of `iteratee()` is called with two arguments: `(element, index)`.","text":"If `iteratee` returns a `Promise` then it\'s awaited before a next call.\\n"},"typeParameter":[{"id":1022,"name":"R","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1023,"name":"iteratee","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","id":1039,"typeArguments":[{"type":"reference","name":"Data"},{"type":"reference","id":1022,"name":"R"}],"name":"DatasetMapper"}},{"id":1024,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":982,"name":"DatasetIteratorOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1022,"name":"R"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1007,"name":"pushData","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":252,"character":10}],"signatures":[{"id":1008,"name":"pushData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Stores an object or an array of objects to the dataset.\\nThe function returns a promise that resolves when the operation finishes.\\nIt has no result, but throws on invalid args or other errors.","text":"**IMPORTANT**: Make sure to use the `await` keyword when calling `pushData()`,\\notherwise the actor process might finish before the data is stored!\\n\\nThe size of the data is limited by the receiving API and therefore `pushData()` will only\\nallow objects whose JSON representation is smaller than 9MB. When an array is passed,\\nnone of the included objects\\nmay be larger than 9MB, but the array itself may be of any size.\\n\\nThe function internally\\nchunks the array into separate items and pushes them sequentially.\\nThe chunking process is stable (keeps order of data), but it does not provide a transaction\\nsafety mechanism. Therefore, in the event of an uploading error (after several automatic retries),\\nthe function\'s Promise will reject and the dataset will be left in a state where some of\\nthe items have already been saved to the dataset while other items from the source array were not.\\nTo overcome this limitation, the developer may, for example, read the last item saved in the dataset\\nand re-attempt the save of the data from this item onwards to prevent duplicates."},"parameters":[{"id":1009,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Object or array of objects containing data to be stored in the default dataset.\\n  The objects must be serializable to JSON and the JSON representation of each object must be smaller than 9MB.\\n"},"type":{"type":"union","types":[{"type":"reference","name":"Data"},{"type":"array","elementType":{"type":"reference","name":"Data"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1025,"name":"reduce","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":392,"character":10}],"signatures":[{"id":1026,"name":"reduce","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Reduces a list of values down to a single value.","text":"Memo is the initial state of the reduction, and each successive step of it should be returned by `iteratee()`.\\nThe `iteratee()` is passed three arguments: the `memo`, then the `value` and `index` of the iteration.\\n\\nIf no `memo` is passed to the initial invocation of reduce, the `iteratee()` is not invoked on the first element of the list.\\nThe first element is instead passed as the memo in the invocation of the `iteratee()` on the next element in the list.\\n\\nIf `iteratee()` returns a `Promise` then it\'s awaited before a next call.\\n"},"typeParameter":[{"id":1027,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1028,"name":"iteratee","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","id":1045,"typeArguments":[{"type":"reference","id":1027,"name":"T"},{"type":"reference","name":"Data"}],"name":"DatasetReducer"}},{"id":1029,"name":"memo","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Initial state of the reduction."},"type":{"type":"reference","id":1027,"name":"T"}},{"id":1030,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":982,"name":"DatasetIteratorOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1027,"name":"T"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":993,"name":"open","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":436,"character":17}],"signatures":[{"id":994,"name":"open","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens a dataset and returns a promise resolving to an instance of the {@link Dataset} class.","text":"Datasets are used to store structured data where each object stored has the same attributes,\\nsuch as online store products or real estate offers.\\nThe actual data is stored either on the local filesystem or in the cloud.\\n\\nFor more details and code examples, see the {@link Dataset} class.\\n"},"typeParameter":[{"id":995,"name":"Data","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"},"default":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}}],"parameters":[{"id":996,"name":"datasetIdOrName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":997,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1427,"name":"StorageManagerOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":992,"typeArguments":[{"type":"reference","id":995,"name":"Data"}],"name":"Dataset"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"groups":[{"title":"Properties","kind":1024,"children":[1005,1002,1004,1006,1003]},{"title":"Methods","kind":2048,"children":[1031,1015,1010,1013,1020,1007,1025,993]}],"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":211,"character":13}],"typeParameter":[{"id":1033,"name":"Data","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","name":"Dictionary"},"default":{"type":"reference","name":"Dictionary"}}],"permalink":"/apify-ts/api/next/core/class/Dataset","previousId":1453,"nextId":1090},{"id":1090,"name":"KeyValueStore","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"The `KeyValueStore` class represents a key-value store, a simple data storage that is used\\nfor saving and reading data records or files. Each data record is\\nrepresented by a unique key and associated with a MIME content type. Key-value stores are ideal\\nfor saving screenshots, actor inputs and outputs, web pages, PDFs or to persist the state of crawlers.","text":"Do not instantiate this class directly, use the\\n{@link Apify.openKeyValueStore} function instead.\\n\\nEach actor run is associated with a default key-value store, which is created exclusively\\nfor the run. By convention, the actor input and output are stored into the\\ndefault key-value store under the `INPUT` and `OUTPUT` key, respectively.\\nTypically, input and output are JSON files, although it can be any other format.\\nTo access the default key-value store directly, you can use the\\n{@link Apify.getValue} and {@link Apify.setValue} convenience functions.\\n\\nTo access the input, you can also use the {@link Apify.getInput} convenience function.\\n\\n`KeyValueStore` stores its data either on local disk or in the Apify cloud,\\ndepending on whether the [`APIFY_LOCAL_STORAGE_DIR`](../guides/environment-variables#apify_local_storage_dir)\\nor [`APIFY_TOKEN`](../guides/environment-variables#apify_token) environment variables are set.\\n\\nIf the `APIFY_LOCAL_STORAGE_DIR` environment variable is set, the data is stored in\\nthe local directory in the following files:\\n```\\n{APIFY_LOCAL_STORAGE_DIR}/key_value_stores/{STORE_ID}/{INDEX}.{EXT}\\n```\\nNote that `{STORE_ID}` is the name or ID of the key-value store. The default key-value store has ID: `default`,\\nunless you override it by setting the `APIFY_DEFAULT_KEY_VALUE_STORE_ID` environment variable.\\nThe `{KEY}` is the key of the record and `{EXT}` corresponds to the MIME content type of the data value.\\n\\nIf the [`APIFY_TOKEN`](../guides/environment-variables#apify_token) environment variable is set but\\n[`APIFY_LOCAL_STORAGE_DIR`](../guides/environment-variables#apify_local_storage_dir) not,\\nthe data is stored in the [Apify Key-value store](https://docs.apify.com/storage/key-value-store)\\ncloud storage. Note that you can force usage of the cloud storage also by passing the `forceCloud`\\noption to {@link Apify.openKeyValueStore} function, even if the\\n[`APIFY_LOCAL_STORAGE_DIR`](../guides/environment-variables#apify_local_storage_dir) variable is set.\\n\\n**Example usage:**\\n\\n```javascript\\n// Get actor input from the default key-value store.\\nconst input = await Apify.getInput();\\n// Get some value from the default key-value store.\\nconst otherValue = await Apify.getValue(\'my-key\');\\n\\n// Write actor output to the default key-value store.\\nawait Apify.setValue(\'OUTPUT\', { myResult: 123 });\\n\\n// Open a named key-value store\\nconst store = await Apify.openKeyValueStore(\'some-name\');\\n\\n// Write a record. JavaScript object is automatically converted to JSON,\\n// strings and binary buffers are stored as they are\\nawait store.setValue(\'some-key\', { foo: \'bar\' });\\n\\n// Read a record. Note that JSON is automatically parsed to a JavaScript object,\\n// text data returned as a string and other data is returned as binary buffer\\nconst value = await store.getValue(\'some-key\');\\n\\n // Drop (delete) the store\\nawait store.drop();\\n```"},"children":[{"id":1103,"name":"config","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"type":{"type":"reference","id":1453,"name":"Configuration"},"defaultValue":"..."},{"id":1099,"name":"id","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":110,"character":13}],"type":{"type":"intrinsic","name":"string"}},{"id":1101,"name":"isLocal","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":112,"character":13}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1100,"name":"name","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":111,"character":13}],"type":{"type":"intrinsic","name":"string"}},{"id":1114,"name":"drop","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":237,"character":10}],"signatures":[{"id":1115,"name":"drop","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Removes the key-value store either from the Apify cloud storage or from the local directory,\\ndepending on the mode of operation."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1119,"name":"forEachKey","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":272,"character":10}],"signatures":[{"id":1120,"name":"forEachKey","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Iterates over key-value store keys, yielding each in turn to an `iteratee` function.\\nEach invocation of `iteratee` is called with three arguments: `(key, index, info)`, where `key`\\nis the record key, `index` is a zero-based index of the key in the current iteration\\n(regardless of `options.exclusiveStartKey`) and `info` is an object that contains a single property `size`\\nindicating size of the record in bytes.","text":"If the `iteratee` function returns a Promise then it is awaited before the next call.\\nIf it throws an error, the iteration is aborted and the `forEachKey` function throws the error.\\n\\n**Example usage**\\n```javascript\\nconst keyValueStore = await Apify.openKeyValueStore();\\nawait keyValueStore.forEachKey(async (key, index, info) => {\\n  console.log(`Key at ${index}: ${key} has size ${info.size}`);\\n});\\n```\\n"},"parameters":[{"id":1121,"name":"iteratee","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"A function that is called for every key in the key-value store."},"type":{"type":"reference","id":1128,"name":"KeyConsumer"}},{"id":1122,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1142,"name":"KeyValueStoreIteratorOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1116,"name":"getPublicUrl","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":247,"character":4}],"signatures":[{"id":1117,"name":"getPublicUrl","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a URL for the given key that may be used to publicly\\naccess the value in the remote key-value store."},"parameters":[{"id":1118,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":1104,"name":"getValue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":155,"character":10}],"signatures":[{"id":1105,"name":"getValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets a value from the key-value store.","text":"The function returns a `Promise` that resolves to the record value,\\nwhose JavaScript type depends on the MIME content type of the record.\\nRecords with the `application/json`\\ncontent type are automatically parsed and returned as a JavaScript object.\\nSimilarly, records with `text/plain` content types are returned as a string.\\nFor all other content types, the value is returned as a raw\\n[`Buffer`](https://nodejs.org/api/buffer.html) instance.\\n\\nIf the record does not exist, the function resolves to `null`.\\n\\nTo save or delete a value in the key-value store, use the\\n{@link KeyValueStore.setValue} function.\\n\\n**Example usage:**\\n\\n```javascript\\nconst store = await Apify.openKeyValueStore();\\nconst buffer = await store.getValue(\'screenshot1.png\');\\n```","returns":"\\n  Returns a promise that resolves to an object, string\\n  or [`Buffer`](https://nodejs.org/api/buffer.html), depending\\n  on the MIME content type of the record.\\n"},"typeParameter":[{"id":1106,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"unknown"}}],"parameters":[{"id":1107,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  Unique key of the record. It can be at most 256 characters long and only consist\\n  of the following characters: `a`-`z`, `A`-`Z`, `0`-`9` and `!-_.\'()`"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":1106,"name":"T"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1108,"name":"setValue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":205,"character":10}],"signatures":[{"id":1109,"name":"setValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Saves or deletes a record in the key-value store.\\nThe function returns a promise that resolves once the record has been saved or deleted.","text":"**Example usage:**\\n\\n```javascript\\nconst store = await Apify.openKeyValueStore();\\nawait store.setValue(\'OUTPUT\', { foo: \'bar\' });\\n```\\n\\nBeware that the key can be at most 256 characters long and only contain the following characters: `a-zA-Z0-9!-_.\'()`\\n\\nBy default, `value` is converted to JSON and stored with the\\n`application/json; charset=utf-8` MIME content type.\\nTo store the value with another content type, pass it in the options as follows:\\n```javascript\\nconst store = await Apify.openKeyValueStore(\'my-text-store\');\\nawait store.setValue(\'RESULTS\', \'my text data\', { contentType: \'text/plain\' });\\n```\\nIf you set custom content type, `value` must be either a string or\\n[`Buffer`](https://nodejs.org/api/buffer.html), otherwise an error will be thrown.\\n\\nIf `value` is `null`, the record is deleted instead. Note that the `setValue()` function succeeds\\nregardless whether the record existed or not.\\n\\nTo retrieve a value from the key-value store, use the\\n{@link KeyValueStore.getValue} function.\\n\\n**IMPORTANT:** Always make sure to use the `await` keyword when calling `setValue()`,\\notherwise the actor process might finish before the value is stored!\\n"},"typeParameter":[{"id":1110,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1111,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  Unique key of the record. It can be at most 256 characters long and only consist\\n  of the following characters: `a`-`z`, `A`-`Z`, `0`-`9` and `!-_.\'()`"},"type":{"type":"intrinsic","name":"string"}},{"id":1112,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  Record data, which can be one of the following values:\\n   - If `null`, the record in the key-value store is deleted.\\n   - If no `options.contentType` is specified, `value` can be any JavaScript object and it will be stringified to JSON.\\n   - If `options.contentType` is set, `value` is taken as is and it must be a `String` or [`Buffer`](https://nodejs.org/api/buffer.html).\\n  For any other value an error will be thrown."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":1110,"name":"T"}]}},{"id":1113,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1140,"name":"RecordOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1091,"name":"open","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":307,"character":17}],"signatures":[{"id":1092,"name":"open","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens a key-value store and returns a promise resolving to an instance of the {@link KeyValueStore} class.","text":"Key-value stores are used to store records or files, along with their MIME content type.\\nThe records are stored and retrieved using a unique key.\\nThe actual data is stored either on a local filesystem or in the Apify cloud.\\n\\nFor more details and code examples, see the {@link KeyValueStore} class.\\n"},"parameters":[{"id":1093,"name":"storeIdOrName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":1094,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1427,"name":"StorageManagerOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1090,"name":"KeyValueStore"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"groups":[{"title":"Properties","kind":1024,"children":[1103,1099,1101,1100]},{"title":"Methods","kind":2048,"children":[1114,1119,1116,1104,1108,1091]}],"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":109,"character":13}],"permalink":"/apify-ts/api/next/core/class/KeyValueStore","previousId":992,"nextId":2114},{"id":2114,"name":"Log","kind":128,"kindString":"Class","flags":{"isExternal":true},"comment":{"shortText":"The log instance enables level aware logging of messages and we advise\\nto use it instead of `console.log()` and its aliases in most development\\nscenarios.","text":"A very useful use case for `log` is using `log.debug` liberally throughout\\nthe codebase to get useful logging messages only when appropriate log level is set\\nand keeping the console tidy in production environments.\\n\\nThe available logging levels are, in this order: `DEBUG`, `INFO`, `WARNING`, `ERROR`, `OFF`\\nand can be referenced from the `log.LEVELS` constant, such as `log.LEVELS.ERROR`.\\n\\nTo log messages to the system console, use the `log.level(message)` invocation,\\nsuch as `log.debug(\'this is a debug message\')`.\\n\\nTo prevent writing of messages above a certain log level to the console, simply\\nset the appropriate level. The default log level is `INFO`, which means that\\n`DEBUG` messages will not be printed, unless enabled.\\n\\n**Example:**\\n```js\\nconst Apify = require(\'apify\');\\nconst { log } = Apify.utils;\\n\\nlog.info(\'Information message\', { someData: 123 }); // prints message\\nlog.debug(\'Debug message\', { debugData: \'hello\' }); // doesn\'t print anything\\n\\nlog.setLevel(log.LEVELS.DEBUG);\\nlog.debug(\'Debug message\'); // prints message\\n\\nlog.setLevel(log.LEVELS.ERROR);\\nlog.debug(\'Debug message\'); // doesn\'t print anything\\nlog.info(\'Info message\'); // doesn\'t print anything\\n\\nlog.error(\'Error message\', { errorDetails: \'This is bad!\' }); // prints message\\ntry {\\n  throw new Error(\'Not good!\');\\n} catch (e) {\\n  log.exception(e, \'Exception occurred\', { errorDetails: \'This is really bad!\' }); // prints message\\n}\\n\\nlog.setOptions({ prefix: \'My actor\' });\\nlog.info(\'I am running!\'); // prints \\"My actor: I am running\\"\\n\\nconst childLog = log.child({ prefix: \'Crawler\' });\\nlog.info(\'I am crawling!\'); // prints \\"My actor:Crawler: I am crawling\\"\\n```\\n\\nAnother very useful way of setting the log level is by setting the `APIFY_LOG_LEVEL`\\nenvironment variable, such as `APIFY_LOG_LEVEL=DEBUG`. This way, no code changes\\nare necessary to turn on your debug messages and start debugging right away.\\n\\nTo add timestamps to your logs, you can override the default logger settings:\\n```js\\nlog.setOptions({\\n    logger: new log.LoggerText({ skipTime: false }),\\n});\\n```\\nYou can customize your logging further by extending or replacing the default\\nlogger instances with your own implementations.\\n"},"children":[{"id":2115,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":94,"character":4}],"signatures":[{"id":2116,"name":"new Log","kind":16384,"kindString":"Constructor signature","flags":{"isExternal":true},"parameters":[{"id":2117,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reference","id":2173,"qualifiedName":"LoggerOptions","package":"@apify/log","name":"LoggerOptions"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"}}],"type":{"type":"reference","id":2114,"qualifiedName":"Log","package":"@apify/log","name":"Log"}}]},{"id":2118,"name":"LEVELS","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"comment":{"shortText":"Map of available log levels that\'s useful for easy setting of appropriate log levels.\\nEach log level is represented internally by a number. Eg. `log.LEVELS.DEBUG === 5`."},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":91,"character":13}],"type":{"type":"query","queryType":{"type":"reference","id":2181,"qualifiedName":"LogLevel","package":"@apify/log","name":"LogLevel"}}},{"id":2138,"name":"child","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":126,"character":4}],"signatures":[{"id":2139,"name":"child","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Creates a new instance of logger that inherits settings from a parent logger."},"parameters":[{"id":2140,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","id":2173,"qualifiedName":"LoggerOptions","package":"@apify/log","name":"LoggerOptions"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"}}],"type":{"type":"reference","id":2114,"qualifiedName":"Log","package":"@apify/log","name":"Log"}}]},{"id":2162,"name":"debug","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":153,"character":4}],"signatures":[{"id":2163,"name":"debug","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Logs a `DEBUG` message. By default, it will not be written to the console. To see `DEBUG`\\nmessages in the console, set the log level to `DEBUG` either using the `log.setLevel(log.LEVELS.DEBUG)`\\nmethod or using the environment variable `APIFY_LOG_LEVEL=DEBUG`. Data are stringified and appended\\nto the message."},"parameters":[{"id":2164,"name":"message","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":2165,"name":"data","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2170,"name":"deprecated","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":158,"character":4}],"signatures":[{"id":2171,"name":"deprecated","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Logs given message only once as WARNING. It\'s used to warn user that some feature he is using has been deprecated."},"parameters":[{"id":2172,"name":"message","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2141,"name":"error","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":131,"character":4}],"signatures":[{"id":2142,"name":"error","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Logs an `ERROR` message. Use this method to log error messages that are not directly connected\\nto an exception. For logging exceptions, use the `log.exception` method."},"parameters":[{"id":2143,"name":"message","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":2144,"name":"data","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2145,"name":"exception","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":136,"character":4}],"signatures":[{"id":2146,"name":"exception","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Logs an `ERROR` level message with a nicely formatted exception. Note that the exception is the first parameter\\nhere and an additional message is only optional."},"parameters":[{"id":2147,"name":"exception","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"}},{"id":2148,"name":"message","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":2149,"name":"data","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2122,"name":"getLevel","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":102,"character":4}],"signatures":[{"id":2123,"name":"getLevel","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns the currently selected logging level. This is useful for checking whether a message\\nwill actually be printed to the console before one actually performs a resource intensive operation\\nto construct the message, such as querying a DB for some metadata that need to be added. If the log\\nlevel is not high enough at the moment, it doesn\'t make sense to execute the query."},"type":{"type":"intrinsic","name":"number"}}]},{"id":2136,"name":"getOptions","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":122,"character":4}],"signatures":[{"id":2137,"name":"getOptions","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns the logger configuration."},"type":{"type":"reference","typeArguments":[{"type":"reference","id":2173,"qualifiedName":"LoggerOptions","package":"@apify/log","name":"LoggerOptions"}],"qualifiedName":"Required","package":"typescript","name":"Required"}}]},{"id":2158,"name":"info","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":146,"character":4}],"signatures":[{"id":2159,"name":"info","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Logs an `INFO` message. `INFO` is the default log level so info messages will be always logged,\\nunless the log level is changed. Data are stringified and appended to the message."},"parameters":[{"id":2160,"name":"message","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":2161,"name":"data","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2127,"name":"internal","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":114,"character":4}],"signatures":[{"id":2128,"name":"internal","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2129,"name":"level","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","id":2181,"qualifiedName":"LogLevel","package":"@apify/log","name":"LogLevel"}},{"id":2130,"name":"message","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":2131,"name":"data","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}},{"id":2132,"name":"exception","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2166,"name":"perf","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":154,"character":4}],"signatures":[{"id":2167,"name":"perf","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2168,"name":"message","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":2169,"name":"data","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2124,"name":"setLevel","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":113,"character":4}],"signatures":[{"id":2125,"name":"setLevel","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Sets the log level to the given value, preventing messages from less important log levels\\nfrom being printed to the console. Use in conjunction with the `log.LEVELS` constants such as","text":"```\\nlog.setLevel(log.LEVELS.DEBUG);\\n```\\n\\nDefault log level is INFO.\\n"},"parameters":[{"id":2126,"name":"level","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","id":2181,"qualifiedName":"LogLevel","package":"@apify/log","name":"LogLevel"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2133,"name":"setOptions","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":118,"character":4}],"signatures":[{"id":2134,"name":"setOptions","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Configures logger."},"parameters":[{"id":2135,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","id":2173,"qualifiedName":"LoggerOptions","package":"@apify/log","name":"LoggerOptions"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2150,"name":"softFail","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":137,"character":4}],"signatures":[{"id":2151,"name":"softFail","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2152,"name":"message","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":2153,"name":"data","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2154,"name":"warning","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":141,"character":4}],"signatures":[{"id":2155,"name":"warning","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Logs a `WARNING` level message. Data are stringified and appended to the message."},"parameters":[{"id":2156,"name":"message","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":2157,"name":"data","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Constructors","kind":512,"children":[2115]},{"title":"Properties","kind":1024,"children":[2118]},{"title":"Methods","kind":2048,"children":[2138,2162,2170,2141,2145,2122,2136,2158,2127,2166,2124,2133,2150,2154]}],"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":86,"character":21}],"permalink":"/apify-ts/api/next/core/class/Log","previousId":1090,"nextId":2189},{"id":2189,"name":"Logger","kind":128,"kindString":"Class","flags":{"isExternal":true},"comment":{"shortText":"This is an abstract class that should\\nbe extended by custom logger classes.","text":"this._log() method must be implemented by them.\\n"},"children":[{"id":2216,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/logger.d.ts","line":13,"character":4}],"signatures":[{"id":2217,"name":"new Logger","kind":16384,"kindString":"Constructor signature","flags":{"isExternal":true},"parameters":[{"id":2218,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}}],"type":{"type":"reference","id":2189,"qualifiedName":"Logger","package":"@apify/log","name":"Logger"},"overwrites":{"type":"reference","name":"EventEmitter.constructor"}}],"overwrites":{"type":"reference","name":"EventEmitter.constructor"}},{"id":2213,"name":"captureRejectionSymbol","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":273,"character":24}],"type":{"type":"query","queryType":{"type":"reference","id":810,"qualifiedName":"EventEmitter.captureRejectionSymbol","package":"@types/node","name":"captureRejectionSymbol"}},"inheritedFrom":{"type":"reference","name":"EventEmitter.captureRejectionSymbol"}},{"id":2214,"name":"captureRejections","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true},"comment":{"shortText":"Sets or gets the default captureRejection value for all emitters."},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":278,"character":15}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"EventEmitter.captureRejections"}},{"id":2215,"name":"defaultMaxListeners","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":279,"character":15}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"EventEmitter.defaultMaxListeners"}},{"id":2212,"name":"errorMonitor","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isReadonly":true},"comment":{"shortText":"This symbol shall be used to install a listener for only monitoring `\'error\'`\\nevents. Listeners installed using this symbol are called before the regular\\n`\'error\'` listeners are called.","text":"Installing a listener using this symbol does not change the behavior once an\\n`\'error\'` event is emitted, therefore the process will still crash if no\\nregular `\'error\'` listener is installed.\\n"},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":272,"character":24}],"type":{"type":"query","queryType":{"type":"reference","id":809,"qualifiedName":"EventEmitter.errorMonitor","package":"@types/node","name":"errorMonitor"}},"inheritedFrom":{"type":"reference","name":"EventEmitter.errorMonitor"}},{"id":2229,"name":"_log","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/logger.d.ts","line":17,"character":4}],"signatures":[{"id":2230,"name":"_log","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2231,"name":"level","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","id":2181,"qualifiedName":"LogLevel","package":"@apify/log","name":"LogLevel"}},{"id":2232,"name":"message","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":2233,"name":"data","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}},{"id":2234,"name":"exception","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"Exception","package":"@apify/log","name":"Exception"}},{"id":2235,"name":"opts","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2225,"name":"_outputWithConsole","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/logger.d.ts","line":16,"character":4}],"signatures":[{"id":2226,"name":"_outputWithConsole","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2227,"name":"level","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","id":2181,"qualifiedName":"LogLevel","package":"@apify/log","name":"LogLevel"}},{"id":2228,"name":"line","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2241,"name":"addListener","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2242,"name":"addListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Alias for `emitter.on(eventName, listener)`.","tags":[{"tag":"since","text":"v0.1.26\\n"}]},"parameters":[{"id":2243,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2244,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2245,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2246,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2247,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2189,"qualifiedName":"Logger","package":"@apify/log","name":"Logger"},"inheritedFrom":{"type":"reference","name":"EventEmitter.addListener"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.addListener"}},{"id":2290,"name":"emit","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2291,"name":"emit","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Synchronously calls each of the listeners registered for the event named`eventName`, in the order they were registered, passing the supplied arguments\\nto each.","text":"Returns `true` if the event had listeners, `false` otherwise.\\n\\n```js\\nconst EventEmitter = require(\'events\');\\nconst myEmitter = new EventEmitter();\\n\\n// First listener\\nmyEmitter.on(\'event\', function firstListener() {\\n  console.log(\'Helloooo! first listener\');\\n});\\n// Second listener\\nmyEmitter.on(\'event\', function secondListener(arg1, arg2) {\\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\\n});\\n// Third listener\\nmyEmitter.on(\'event\', function thirdListener(...args) {\\n  const parameters = args.join(\', \');\\n  console.log(`event with parameters ${parameters} in third listener`);\\n});\\n\\nconsole.log(myEmitter.listeners(\'event\'));\\n\\nmyEmitter.emit(\'event\', 1, 2, 3, 4, 5);\\n\\n// Prints:\\n// [\\n//   [Function: firstListener],\\n//   [Function: secondListener],\\n//   [Function: thirdListener]\\n// ]\\n// Helloooo! first listener\\n// event with parameters 1, 2 in second listener\\n// event with parameters 1, 2, 3, 4, 5 in third listener\\n```","tags":[{"tag":"since","text":"v0.1.26\\n"}]},"parameters":[{"id":2292,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2293,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"EventEmitter.emit"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.emit"}},{"id":2311,"name":"eventNames","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2312,"name":"eventNames","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns an array listing the events for which the emitter has registered\\nlisteners. The values in the array are strings or `Symbol`s.","text":"```js\\nconst EventEmitter = require(\'events\');\\nconst myEE = new EventEmitter();\\nmyEE.on(\'foo\', () => {});\\nmyEE.on(\'bar\', () => {});\\n\\nconst sym = Symbol(\'symbol\');\\nmyEE.on(sym, () => {});\\n\\nconsole.log(myEE.eventNames());\\n// Prints: [ \'foo\', \'bar\', Symbol(symbol) ]\\n```","tags":[{"tag":"since","text":"v6.0.0\\n"}]},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},"inheritedFrom":{"type":"reference","name":"EventEmitter.eventNames"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.eventNames"}},{"id":2282,"name":"getMaxListeners","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2283,"name":"getMaxListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns the current max listener value for the `EventEmitter` which is either\\nset by `emitter.setMaxListeners(n)` or defaults to {@link defaultMaxListeners}.","tags":[{"tag":"since","text":"v1.0.0\\n"}]},"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"EventEmitter.getMaxListeners"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.getMaxListeners"}},{"id":2223,"name":"getOptions","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/logger.d.ts","line":15,"character":4}],"signatures":[{"id":2224,"name":"getOptions","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}}]},{"id":2294,"name":"listenerCount","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2295,"name":"listenerCount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns the number of listeners listening to the event named `eventName`.","tags":[{"tag":"since","text":"v3.2.0"}]},"parameters":[{"id":2296,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event being listened for\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"EventEmitter.listenerCount"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.listenerCount"}},{"id":2284,"name":"listeners","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2285,"name":"listeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns a copy of the array of listeners for the event named `eventName`.","text":"```js\\nserver.on(\'connection\', (stream) => {\\n  console.log(\'someone connected!\');\\n});\\nconsole.log(util.inspect(server.listeners(\'connection\')));\\n// Prints: [ [Function] ]\\n```","tags":[{"tag":"since","text":"v0.1.26\\n"}]},"parameters":[{"id":2286,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"array","elementType":{"type":"reference","qualifiedName":"Function","package":"typescript","name":"Function"}},"inheritedFrom":{"type":"reference","name":"EventEmitter.listeners"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.listeners"}},{"id":2236,"name":"log","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/logger.d.ts","line":18,"character":4}],"signatures":[{"id":2237,"name":"log","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2238,"name":"level","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","id":2181,"qualifiedName":"LogLevel","package":"@apify/log","name":"LogLevel"}},{"id":2239,"name":"message","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":2240,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2269,"name":"off","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2270,"name":"off","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Alias for `emitter.removeListener()`.","tags":[{"tag":"since","text":"v10.0.0\\n"}]},"parameters":[{"id":2271,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2272,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2273,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2274,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2275,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2189,"qualifiedName":"Logger","package":"@apify/log","name":"Logger"},"inheritedFrom":{"type":"reference","name":"EventEmitter.off"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.off"}},{"id":2248,"name":"on","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2249,"name":"on","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Adds the `listener` function to the end of the listeners array for the\\nevent named `eventName`. No checks are made to see if the `listener` has\\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\\ntimes.","text":"```js\\nserver.on(\'connection\', (stream) => {\\n  console.log(\'someone connected!\');\\n});\\n```\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.\\n\\nBy default, event listeners are invoked in the order they are added. The`emitter.prependListener()` method can be used as an alternative to add the\\nevent listener to the beginning of the listeners array.\\n\\n```js\\nconst myEE = new EventEmitter();\\nmyEE.on(\'foo\', () => console.log(\'a\'));\\nmyEE.prependListener(\'foo\', () => console.log(\'b\'));\\nmyEE.emit(\'foo\');\\n// Prints:\\n//   b\\n//   a\\n```","tags":[{"tag":"since","text":"v0.1.101"}]},"parameters":[{"id":2250,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2251,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The callback function\\n"},"type":{"type":"reflection","declaration":{"id":2252,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2253,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2254,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2189,"qualifiedName":"Logger","package":"@apify/log","name":"Logger"},"inheritedFrom":{"type":"reference","name":"EventEmitter.on"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.on"}},{"id":2255,"name":"once","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2256,"name":"once","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Adds a **one-time**`listener` function for the event named `eventName`. The\\nnext time `eventName` is triggered, this listener is removed and then invoked.","text":"```js\\nserver.once(\'connection\', (stream) => {\\n  console.log(\'Ah, we have our first user!\');\\n});\\n```\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.\\n\\nBy default, event listeners are invoked in the order they are added. The`emitter.prependOnceListener()` method can be used as an alternative to add the\\nevent listener to the beginning of the listeners array.\\n\\n```js\\nconst myEE = new EventEmitter();\\nmyEE.once(\'foo\', () => console.log(\'a\'));\\nmyEE.prependOnceListener(\'foo\', () => console.log(\'b\'));\\nmyEE.emit(\'foo\');\\n// Prints:\\n//   b\\n//   a\\n```","tags":[{"tag":"since","text":"v0.3.0"}]},"parameters":[{"id":2257,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2258,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The callback function\\n"},"type":{"type":"reflection","declaration":{"id":2259,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2260,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2261,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2189,"qualifiedName":"Logger","package":"@apify/log","name":"Logger"},"inheritedFrom":{"type":"reference","name":"EventEmitter.once"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.once"}},{"id":2297,"name":"prependListener","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2298,"name":"prependListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Adds the `listener` function to the _beginning_ of the listeners array for the\\nevent named `eventName`. No checks are made to see if the `listener` has\\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\\ntimes.","text":"```js\\nserver.prependListener(\'connection\', (stream) => {\\n  console.log(\'someone connected!\');\\n});\\n```\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.","tags":[{"tag":"since","text":"v6.0.0"}]},"parameters":[{"id":2299,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2300,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The callback function\\n"},"type":{"type":"reflection","declaration":{"id":2301,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2302,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2303,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2189,"qualifiedName":"Logger","package":"@apify/log","name":"Logger"},"inheritedFrom":{"type":"reference","name":"EventEmitter.prependListener"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.prependListener"}},{"id":2304,"name":"prependOnceListener","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2305,"name":"prependOnceListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Adds a **one-time**`listener` function for the event named `eventName` to the_beginning_ of the listeners array. The next time `eventName` is triggered, this\\nlistener is removed, and then invoked.","text":"```js\\nserver.prependOnceListener(\'connection\', (stream) => {\\n  console.log(\'Ah, we have our first user!\');\\n});\\n```\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.","tags":[{"tag":"since","text":"v6.0.0"}]},"parameters":[{"id":2306,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2307,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The callback function\\n"},"type":{"type":"reflection","declaration":{"id":2308,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2309,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2310,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2189,"qualifiedName":"Logger","package":"@apify/log","name":"Logger"},"inheritedFrom":{"type":"reference","name":"EventEmitter.prependOnceListener"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.prependOnceListener"}},{"id":2287,"name":"rawListeners","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2288,"name":"rawListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns a copy of the array of listeners for the event named `eventName`,\\nincluding any wrappers (such as those created by `.once()`).","text":"```js\\nconst emitter = new EventEmitter();\\nemitter.once(\'log\', () => console.log(\'log once\'));\\n\\n// Returns a new Array with a function `onceWrapper` which has a property\\n// `listener` which contains the original listener bound above\\nconst listeners = emitter.rawListeners(\'log\');\\nconst logFnWrapper = listeners[0];\\n\\n// Logs \\"log once\\" to the console and does not unbind the `once` event\\nlogFnWrapper.listener();\\n\\n// Logs \\"log once\\" to the console and removes the listener\\nlogFnWrapper();\\n\\nemitter.on(\'log\', () => console.log(\'log persistently\'));\\n// Will return a new Array with a single function bound by `.on()` above\\nconst newListeners = emitter.rawListeners(\'log\');\\n\\n// Logs \\"log persistently\\" twice\\nnewListeners[0]();\\nemitter.emit(\'log\');\\n```","tags":[{"tag":"since","text":"v9.4.0\\n"}]},"parameters":[{"id":2289,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"array","elementType":{"type":"reference","qualifiedName":"Function","package":"typescript","name":"Function"}},"inheritedFrom":{"type":"reference","name":"EventEmitter.rawListeners"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.rawListeners"}},{"id":2276,"name":"removeAllListeners","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2277,"name":"removeAllListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Removes all listeners, or those of the specified `eventName`.","text":"It is bad practice to remove listeners added elsewhere in the code,\\nparticularly when the `EventEmitter` instance was created by some other\\ncomponent or module (e.g. sockets or file streams).\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.","tags":[{"tag":"since","text":"v0.1.26\\n"}]},"parameters":[{"id":2278,"name":"event","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"reference","id":2189,"qualifiedName":"Logger","package":"@apify/log","name":"Logger"},"inheritedFrom":{"type":"reference","name":"EventEmitter.removeAllListeners"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.removeAllListeners"}},{"id":2262,"name":"removeListener","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2263,"name":"removeListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Removes the specified `listener` from the listener array for the event named`eventName`.","text":"```js\\nconst callback = (stream) => {\\n  console.log(\'someone connected!\');\\n};\\nserver.on(\'connection\', callback);\\n// ...\\nserver.removeListener(\'connection\', callback);\\n```\\n\\n`removeListener()` will remove, at most, one instance of a listener from the\\nlistener array. If any single listener has been added multiple times to the\\nlistener array for the specified `eventName`, then `removeListener()` must be\\ncalled multiple times to remove each instance.\\n\\nOnce an event is emitted, all listeners attached to it at the\\ntime of emitting are called in order. This implies that any`removeListener()` or `removeAllListeners()` calls _after_ emitting and_before_ the last listener finishes execution will\\nnot remove them from`emit()` in progress. Subsequent events behave as expected.\\n\\n```js\\nconst myEmitter = new MyEmitter();\\n\\nconst callbackA = () => {\\n  console.log(\'A\');\\n  myEmitter.removeListener(\'event\', callbackB);\\n};\\n\\nconst callbackB = () => {\\n  console.log(\'B\');\\n};\\n\\nmyEmitter.on(\'event\', callbackA);\\n\\nmyEmitter.on(\'event\', callbackB);\\n\\n// callbackA removes listener callbackB but it will still be called.\\n// Internal listener array at time of emit [callbackA, callbackB]\\nmyEmitter.emit(\'event\');\\n// Prints:\\n//   A\\n//   B\\n\\n// callbackB is now removed.\\n// Internal listener array [callbackA]\\nmyEmitter.emit(\'event\');\\n// Prints:\\n//   A\\n```\\n\\nBecause listeners are managed using an internal array, calling this will\\nchange the position indices of any listener registered _after_ the listener\\nbeing removed. This will not impact the order in which listeners are called,\\nbut it means that any copies of the listener array as returned by\\nthe `emitter.listeners()` method will need to be recreated.\\n\\nWhen a single function has been added as a handler multiple times for a single\\nevent (as in the example below), `removeListener()` will remove the most\\nrecently added instance. In the example the `once(\'ping\')`listener is removed:\\n\\n```js\\nconst ee = new EventEmitter();\\n\\nfunction pong() {\\n  console.log(\'pong\');\\n}\\n\\nee.on(\'ping\', pong);\\nee.once(\'ping\', pong);\\nee.removeListener(\'ping\', pong);\\n\\nee.emit(\'ping\');\\nee.emit(\'ping\');\\n```\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.","tags":[{"tag":"since","text":"v0.1.26\\n"}]},"parameters":[{"id":2264,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2265,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2266,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2267,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2268,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2189,"qualifiedName":"Logger","package":"@apify/log","name":"Logger"},"inheritedFrom":{"type":"reference","name":"EventEmitter.removeListener"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.removeListener"}},{"id":2279,"name":"setMaxListeners","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2280,"name":"setMaxListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"By default `EventEmitter`s will print a warning if more than `10` listeners are\\nadded for a particular event. This is a useful default that helps finding\\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.","text":"Returns a reference to the `EventEmitter`, so that calls can be chained.","tags":[{"tag":"since","text":"v0.3.5\\n"}]},"parameters":[{"id":2281,"name":"n","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":2189,"qualifiedName":"Logger","package":"@apify/log","name":"Logger"},"inheritedFrom":{"type":"reference","name":"EventEmitter.setMaxListeners"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.setMaxListeners"}},{"id":2220,"name":"setOptions","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/logger.d.ts","line":14,"character":4}],"signatures":[{"id":2221,"name":"setOptions","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2222,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2208,"name":"getEventListeners","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":262,"character":15}],"signatures":[{"id":2209,"name":"getEventListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns a copy of the array of listeners for the event named `eventName`.","text":"For `EventEmitter`s this behaves exactly the same as calling `.listeners` on\\nthe emitter.\\n\\nFor `EventTarget`s this is the only way to get the event listeners for the\\nevent target. This is useful for debugging and diagnostic purposes.\\n\\n```js\\nconst { getEventListeners, EventEmitter } = require(\'events\');\\n\\n{\\n  const ee = new EventEmitter();\\n  const listener = () => console.log(\'Events are fun\');\\n  ee.on(\'foo\', listener);\\n  getEventListeners(ee, \'foo\'); // [listener]\\n}\\n{\\n  const et = new EventTarget();\\n  const listener = () => console.log(\'Events are fun\');\\n  et.addEventListener(\'foo\', listener);\\n  getEventListeners(et, \'foo\'); // [listener]\\n}\\n```","tags":[{"tag":"since","text":"v15.2.0\\n"}]},"parameters":[{"id":2210,"name":"emitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","qualifiedName":"global.NodeJS.EventEmitter","package":"@types/node","name":"EventEmitter"},{"type":"reference","qualifiedName":"DOMEventTarget","package":"@types/node","name":"DOMEventTarget"}]}},{"id":2211,"name":"name","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"array","elementType":{"type":"reference","qualifiedName":"Function","package":"typescript","name":"Function"}},"inheritedFrom":{"type":"reference","name":"EventEmitter.getEventListeners"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.getEventListeners"}},{"id":2204,"name":"listenerCount","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":234,"character":15}],"signatures":[{"id":2205,"name":"listenerCount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.","text":"```js\\nconst { EventEmitter, listenerCount } = require(\'events\');\\nconst myEmitter = new EventEmitter();\\nmyEmitter.on(\'event\', () => {});\\nmyEmitter.on(\'event\', () => {});\\nconsole.log(listenerCount(myEmitter, \'event\'));\\n// Prints: 2\\n```","tags":[{"tag":"since","text":"v0.9.12"},{"tag":"deprecated","text":"Since v3.2.0 - Use `listenerCount` instead."}]},"parameters":[{"id":2206,"name":"emitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The emitter to query"},"type":{"type":"reference","qualifiedName":"global.NodeJS.EventEmitter","package":"@types/node","name":"EventEmitter"}},{"id":2207,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The event name\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"EventEmitter.listenerCount"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.listenerCount"}},{"id":2199,"name":"on","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":217,"character":15}],"signatures":[{"id":2200,"name":"on","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"```js\\nconst { on, EventEmitter } = require(\'events\');","text":"(async () => {\\n  const ee = new EventEmitter();\\n\\n  // Emit later on\\n  process.nextTick(() => {\\n    ee.emit(\'foo\', \'bar\');\\n    ee.emit(\'foo\', 42);\\n  });\\n\\n  for await (const event of on(ee, \'foo\')) {\\n    // The execution of this inner block is synchronous and it\\n    // processes one event at a time (even with await). Do not use\\n    // if concurrent execution is required.\\n    console.log(event); // prints [\'bar\'] [42]\\n  }\\n  // Unreachable here\\n})();\\n```\\n\\nReturns an `AsyncIterator` that iterates `eventName` events. It will throw\\nif the `EventEmitter` emits `\'error\'`. It removes all listeners when\\nexiting the loop. The `value` returned by each iteration is an array\\ncomposed of the emitted event arguments.\\n\\nAn `AbortSignal` can be used to cancel waiting on events:\\n\\n```js\\nconst { on, EventEmitter } = require(\'events\');\\nconst ac = new AbortController();\\n\\n(async () => {\\n  const ee = new EventEmitter();\\n\\n  // Emit later on\\n  process.nextTick(() => {\\n    ee.emit(\'foo\', \'bar\');\\n    ee.emit(\'foo\', 42);\\n  });\\n\\n  for await (const event of on(ee, \'foo\', { signal: ac.signal })) {\\n    // The execution of this inner block is synchronous and it\\n    // processes one event at a time (even with await). Do not use\\n    // if concurrent execution is required.\\n    console.log(event); // prints [\'bar\'] [42]\\n  }\\n  // Unreachable here\\n})();\\n\\nprocess.nextTick(() => ac.abort());\\n```","returns":"that iterates `eventName` events emitted by the `emitter`\\n","tags":[{"tag":"since","text":"v13.6.0, v12.16.0"}]},"parameters":[{"id":2201,"name":"emitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"global.NodeJS.EventEmitter","package":"@types/node","name":"EventEmitter"}},{"id":2202,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event being listened for"},"type":{"type":"intrinsic","name":"string"}},{"id":2203,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"StaticEventEmitterOptions","package":"@types/node","name":"StaticEventEmitterOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"AsyncIterableIterator","package":"typescript","name":"AsyncIterableIterator"},"inheritedFrom":{"type":"reference","name":"EventEmitter.on"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.on"}},{"id":2190,"name":"once","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":157,"character":15}],"signatures":[{"id":2191,"name":"once","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\\nevent or that is rejected if the `EventEmitter` emits `\'error\'` while waiting.\\nThe `Promise` will resolve with an array of all the arguments emitted to the\\ngiven event.","text":"This method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special`\'error\'` event\\nsemantics and does not listen to the `\'error\'` event.\\n\\n```js\\nconst { once, EventEmitter } = require(\'events\');\\n\\nasync function run() {\\n  const ee = new EventEmitter();\\n\\n  process.nextTick(() => {\\n    ee.emit(\'myevent\', 42);\\n  });\\n\\n  const [value] = await once(ee, \'myevent\');\\n  console.log(value);\\n\\n  const err = new Error(\'kaboom\');\\n  process.nextTick(() => {\\n    ee.emit(\'error\', err);\\n  });\\n\\n  try {\\n    await once(ee, \'myevent\');\\n  } catch (err) {\\n    console.log(\'error happened\', err);\\n  }\\n}\\n\\nrun();\\n```\\n\\nThe special handling of the `\'error\'` event is only used when `events.once()`is used to wait for another event. If `events.once()` is used to wait for the\\n\'`error\'` event itself, then it is treated as any other kind of event without\\nspecial handling:\\n\\n```js\\nconst { EventEmitter, once } = require(\'events\');\\n\\nconst ee = new EventEmitter();\\n\\nonce(ee, \'error\')\\n  .then(([err]) => console.log(\'ok\', err.message))\\n  .catch((err) => console.log(\'error\', err.message));\\n\\nee.emit(\'error\', new Error(\'boom\'));\\n\\n// Prints: ok boom\\n```\\n\\nAn `AbortSignal` can be used to cancel waiting for the event:\\n\\n```js\\nconst { EventEmitter, once } = require(\'events\');\\n\\nconst ee = new EventEmitter();\\nconst ac = new AbortController();\\n\\nasync function foo(emitter, event, signal) {\\n  try {\\n    await once(emitter, event, { signal });\\n    console.log(\'event emitted!\');\\n  } catch (error) {\\n    if (error.name === \'AbortError\') {\\n      console.error(\'Waiting for the event was canceled!\');\\n    } else {\\n      console.error(\'There was an error\', error.message);\\n    }\\n  }\\n}\\n\\nfoo(ee, \'foo\', ac.signal);\\nac.abort(); // Abort waiting for the event\\nee.emit(\'foo\'); // Prints: Waiting for the event was canceled!\\n```","tags":[{"tag":"since","text":"v11.13.0, v10.16.0\\n"}]},"parameters":[{"id":2192,"name":"emitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"NodeEventTarget","package":"@types/node","name":"NodeEventTarget"}},{"id":2193,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2194,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"StaticEventEmitterOptions","package":"@types/node","name":"StaticEventEmitterOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","name":"EventEmitter.once"}},{"id":2195,"name":"once","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2196,"name":"emitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"DOMEventTarget","package":"@types/node","name":"DOMEventTarget"}},{"id":2197,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":2198,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"StaticEventEmitterOptions","package":"@types/node","name":"StaticEventEmitterOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","name":"EventEmitter.once"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.once"}}],"groups":[{"title":"Constructors","kind":512,"children":[2216]},{"title":"Properties","kind":1024,"children":[2213,2214,2215,2212]},{"title":"Methods","kind":2048,"children":[2229,2225,2241,2290,2311,2282,2223,2294,2284,2236,2269,2248,2255,2297,2304,2287,2276,2262,2279,2220,2208,2204,2199,2190]}],"sources":[{"fileName":"node_modules/@apify/log/logger.d.ts","line":11,"character":21}],"extendedTypes":[{"type":"reference","qualifiedName":"EventEmitter","package":"@types/node","name":"EventEmitter"}],"extendedBy":[{"type":"reference","id":2313,"name":"LoggerJson"},{"type":"reference","id":2438,"name":"LoggerText"}],"permalink":"/apify-ts/api/next/core/class/Logger","previousId":2114,"nextId":2313},{"id":2313,"name":"LoggerJson","kind":128,"kindString":"Class","flags":{"isExternal":true},"children":[{"id":2340,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/logger_json.d.ts","line":5,"character":4}],"signatures":[{"id":2341,"name":"new LoggerJson","kind":16384,"kindString":"Constructor signature","flags":{"isExternal":true},"parameters":[{"id":2342,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":2343,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}}],"type":{"type":"reference","id":2313,"qualifiedName":"LoggerJson","package":"@apify/log","name":"LoggerJson"},"overwrites":{"type":"reference","id":2217,"name":"Logger.constructor"}}],"overwrites":{"type":"reference","id":2216,"name":"Logger.constructor"}},{"id":2337,"name":"captureRejectionSymbol","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":273,"character":24}],"type":{"type":"query","queryType":{"type":"reference","id":810,"qualifiedName":"EventEmitter.captureRejectionSymbol","package":"@types/node","name":"captureRejectionSymbol"}},"inheritedFrom":{"type":"reference","id":2213,"name":"Logger.captureRejectionSymbol"}},{"id":2338,"name":"captureRejections","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true},"comment":{"shortText":"Sets or gets the default captureRejection value for all emitters."},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":278,"character":15}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2214,"name":"Logger.captureRejections"}},{"id":2339,"name":"defaultMaxListeners","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":279,"character":15}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":2215,"name":"Logger.defaultMaxListeners"}},{"id":2336,"name":"errorMonitor","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isReadonly":true},"comment":{"shortText":"This symbol shall be used to install a listener for only monitoring `\'error\'`\\nevents. Listeners installed using this symbol are called before the regular\\n`\'error\'` listeners are called.","text":"Installing a listener using this symbol does not change the behavior once an\\n`\'error\'` event is emitted, therefore the process will still crash if no\\nregular `\'error\'` listener is installed.\\n"},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":272,"character":24}],"type":{"type":"query","queryType":{"type":"reference","id":809,"qualifiedName":"EventEmitter.errorMonitor","package":"@types/node","name":"errorMonitor"}},"inheritedFrom":{"type":"reference","id":2212,"name":"Logger.errorMonitor"}},{"id":2344,"name":"_log","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/logger_json.d.ts","line":6,"character":4}],"signatures":[{"id":2345,"name":"_log","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2346,"name":"level","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","id":2181,"qualifiedName":"LogLevel","package":"@apify/log","name":"LogLevel"}},{"id":2347,"name":"message","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":2348,"name":"data","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}},{"id":2349,"name":"exception","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"Exception","package":"@apify/log","name":"Exception"}},{"id":2350,"name":"opts","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","id":2230,"name":"Logger._log"}}],"overwrites":{"type":"reference","id":2229,"name":"Logger._log"}},{"id":2357,"name":"_outputWithConsole","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/logger.d.ts","line":16,"character":4}],"signatures":[{"id":2358,"name":"_outputWithConsole","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2359,"name":"level","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","id":2181,"qualifiedName":"LogLevel","package":"@apify/log","name":"LogLevel"}},{"id":2360,"name":"line","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","id":2226,"name":"Logger._outputWithConsole"}}],"inheritedFrom":{"type":"reference","id":2225,"name":"Logger._outputWithConsole"}},{"id":2366,"name":"addListener","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2367,"name":"addListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Alias for `emitter.on(eventName, listener)`.","tags":[{"tag":"since","text":"v0.1.26\\n"}]},"parameters":[{"id":2368,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2369,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2370,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2371,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2372,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2313,"qualifiedName":"LoggerJson","package":"@apify/log","name":"LoggerJson"},"inheritedFrom":{"type":"reference","id":2242,"name":"Logger.addListener"}}],"inheritedFrom":{"type":"reference","id":2241,"name":"Logger.addListener"}},{"id":2415,"name":"emit","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2416,"name":"emit","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Synchronously calls each of the listeners registered for the event named`eventName`, in the order they were registered, passing the supplied arguments\\nto each.","text":"Returns `true` if the event had listeners, `false` otherwise.\\n\\n```js\\nconst EventEmitter = require(\'events\');\\nconst myEmitter = new EventEmitter();\\n\\n// First listener\\nmyEmitter.on(\'event\', function firstListener() {\\n  console.log(\'Helloooo! first listener\');\\n});\\n// Second listener\\nmyEmitter.on(\'event\', function secondListener(arg1, arg2) {\\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\\n});\\n// Third listener\\nmyEmitter.on(\'event\', function thirdListener(...args) {\\n  const parameters = args.join(\', \');\\n  console.log(`event with parameters ${parameters} in third listener`);\\n});\\n\\nconsole.log(myEmitter.listeners(\'event\'));\\n\\nmyEmitter.emit(\'event\', 1, 2, 3, 4, 5);\\n\\n// Prints:\\n// [\\n//   [Function: firstListener],\\n//   [Function: secondListener],\\n//   [Function: thirdListener]\\n// ]\\n// Helloooo! first listener\\n// event with parameters 1, 2 in second listener\\n// event with parameters 1, 2, 3, 4, 5 in third listener\\n```","tags":[{"tag":"since","text":"v0.1.26\\n"}]},"parameters":[{"id":2417,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2418,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2291,"name":"Logger.emit"}}],"inheritedFrom":{"type":"reference","id":2290,"name":"Logger.emit"}},{"id":2436,"name":"eventNames","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2437,"name":"eventNames","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns an array listing the events for which the emitter has registered\\nlisteners. The values in the array are strings or `Symbol`s.","text":"```js\\nconst EventEmitter = require(\'events\');\\nconst myEE = new EventEmitter();\\nmyEE.on(\'foo\', () => {});\\nmyEE.on(\'bar\', () => {});\\n\\nconst sym = Symbol(\'symbol\');\\nmyEE.on(sym, () => {});\\n\\nconsole.log(myEE.eventNames());\\n// Prints: [ \'foo\', \'bar\', Symbol(symbol) ]\\n```","tags":[{"tag":"since","text":"v6.0.0\\n"}]},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},"inheritedFrom":{"type":"reference","id":2312,"name":"Logger.eventNames"}}],"inheritedFrom":{"type":"reference","id":2311,"name":"Logger.eventNames"}},{"id":2407,"name":"getMaxListeners","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2408,"name":"getMaxListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns the current max listener value for the `EventEmitter` which is either\\nset by `emitter.setMaxListeners(n)` or defaults to {@link defaultMaxListeners}.","tags":[{"tag":"since","text":"v1.0.0\\n"}]},"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":2283,"name":"Logger.getMaxListeners"}}],"inheritedFrom":{"type":"reference","id":2282,"name":"Logger.getMaxListeners"}},{"id":2355,"name":"getOptions","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/logger.d.ts","line":15,"character":4}],"signatures":[{"id":2356,"name":"getOptions","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"inheritedFrom":{"type":"reference","id":2224,"name":"Logger.getOptions"}}],"inheritedFrom":{"type":"reference","id":2223,"name":"Logger.getOptions"}},{"id":2419,"name":"listenerCount","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2420,"name":"listenerCount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns the number of listeners listening to the event named `eventName`.","tags":[{"tag":"since","text":"v3.2.0"}]},"parameters":[{"id":2421,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event being listened for\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":2295,"name":"Logger.listenerCount"}}],"inheritedFrom":{"type":"reference","id":2294,"name":"Logger.listenerCount"}},{"id":2409,"name":"listeners","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2410,"name":"listeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns a copy of the array of listeners for the event named `eventName`.","text":"```js\\nserver.on(\'connection\', (stream) => {\\n  console.log(\'someone connected!\');\\n});\\nconsole.log(util.inspect(server.listeners(\'connection\')));\\n// Prints: [ [Function] ]\\n```","tags":[{"tag":"since","text":"v0.1.26\\n"}]},"parameters":[{"id":2411,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"array","elementType":{"type":"reference","qualifiedName":"Function","package":"typescript","name":"Function"}},"inheritedFrom":{"type":"reference","id":2285,"name":"Logger.listeners"}}],"inheritedFrom":{"type":"reference","id":2284,"name":"Logger.listeners"}},{"id":2361,"name":"log","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/logger.d.ts","line":18,"character":4}],"signatures":[{"id":2362,"name":"log","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2363,"name":"level","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","id":2181,"qualifiedName":"LogLevel","package":"@apify/log","name":"LogLevel"}},{"id":2364,"name":"message","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":2365,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","id":2237,"name":"Logger.log"}}],"inheritedFrom":{"type":"reference","id":2236,"name":"Logger.log"}},{"id":2394,"name":"off","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2395,"name":"off","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Alias for `emitter.removeListener()`.","tags":[{"tag":"since","text":"v10.0.0\\n"}]},"parameters":[{"id":2396,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2397,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2398,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2399,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2400,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2313,"qualifiedName":"LoggerJson","package":"@apify/log","name":"LoggerJson"},"inheritedFrom":{"type":"reference","id":2270,"name":"Logger.off"}}],"inheritedFrom":{"type":"reference","id":2269,"name":"Logger.off"}},{"id":2373,"name":"on","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2374,"name":"on","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Adds the `listener` function to the end of the listeners array for the\\nevent named `eventName`. No checks are made to see if the `listener` has\\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\\ntimes.","text":"```js\\nserver.on(\'connection\', (stream) => {\\n  console.log(\'someone connected!\');\\n});\\n```\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.\\n\\nBy default, event listeners are invoked in the order they are added. The`emitter.prependListener()` method can be used as an alternative to add the\\nevent listener to the beginning of the listeners array.\\n\\n```js\\nconst myEE = new EventEmitter();\\nmyEE.on(\'foo\', () => console.log(\'a\'));\\nmyEE.prependListener(\'foo\', () => console.log(\'b\'));\\nmyEE.emit(\'foo\');\\n// Prints:\\n//   b\\n//   a\\n```","tags":[{"tag":"since","text":"v0.1.101"}]},"parameters":[{"id":2375,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2376,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The callback function\\n"},"type":{"type":"reflection","declaration":{"id":2377,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2378,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2379,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2313,"qualifiedName":"LoggerJson","package":"@apify/log","name":"LoggerJson"},"inheritedFrom":{"type":"reference","id":2249,"name":"Logger.on"}}],"inheritedFrom":{"type":"reference","id":2248,"name":"Logger.on"}},{"id":2380,"name":"once","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2381,"name":"once","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Adds a **one-time**`listener` function for the event named `eventName`. The\\nnext time `eventName` is triggered, this listener is removed and then invoked.","text":"```js\\nserver.once(\'connection\', (stream) => {\\n  console.log(\'Ah, we have our first user!\');\\n});\\n```\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.\\n\\nBy default, event listeners are invoked in the order they are added. The`emitter.prependOnceListener()` method can be used as an alternative to add the\\nevent listener to the beginning of the listeners array.\\n\\n```js\\nconst myEE = new EventEmitter();\\nmyEE.once(\'foo\', () => console.log(\'a\'));\\nmyEE.prependOnceListener(\'foo\', () => console.log(\'b\'));\\nmyEE.emit(\'foo\');\\n// Prints:\\n//   b\\n//   a\\n```","tags":[{"tag":"since","text":"v0.3.0"}]},"parameters":[{"id":2382,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2383,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The callback function\\n"},"type":{"type":"reflection","declaration":{"id":2384,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2385,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2386,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2313,"qualifiedName":"LoggerJson","package":"@apify/log","name":"LoggerJson"},"inheritedFrom":{"type":"reference","id":2256,"name":"Logger.once"}}],"inheritedFrom":{"type":"reference","id":2255,"name":"Logger.once"}},{"id":2422,"name":"prependListener","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2423,"name":"prependListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Adds the `listener` function to the _beginning_ of the listeners array for the\\nevent named `eventName`. No checks are made to see if the `listener` has\\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\\ntimes.","text":"```js\\nserver.prependListener(\'connection\', (stream) => {\\n  console.log(\'someone connected!\');\\n});\\n```\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.","tags":[{"tag":"since","text":"v6.0.0"}]},"parameters":[{"id":2424,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2425,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The callback function\\n"},"type":{"type":"reflection","declaration":{"id":2426,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2427,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2428,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2313,"qualifiedName":"LoggerJson","package":"@apify/log","name":"LoggerJson"},"inheritedFrom":{"type":"reference","id":2298,"name":"Logger.prependListener"}}],"inheritedFrom":{"type":"reference","id":2297,"name":"Logger.prependListener"}},{"id":2429,"name":"prependOnceListener","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2430,"name":"prependOnceListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Adds a **one-time**`listener` function for the event named `eventName` to the_beginning_ of the listeners array. The next time `eventName` is triggered, this\\nlistener is removed, and then invoked.","text":"```js\\nserver.prependOnceListener(\'connection\', (stream) => {\\n  console.log(\'Ah, we have our first user!\');\\n});\\n```\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.","tags":[{"tag":"since","text":"v6.0.0"}]},"parameters":[{"id":2431,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2432,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The callback function\\n"},"type":{"type":"reflection","declaration":{"id":2433,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2434,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2435,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2313,"qualifiedName":"LoggerJson","package":"@apify/log","name":"LoggerJson"},"inheritedFrom":{"type":"reference","id":2305,"name":"Logger.prependOnceListener"}}],"inheritedFrom":{"type":"reference","id":2304,"name":"Logger.prependOnceListener"}},{"id":2412,"name":"rawListeners","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2413,"name":"rawListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns a copy of the array of listeners for the event named `eventName`,\\nincluding any wrappers (such as those created by `.once()`).","text":"```js\\nconst emitter = new EventEmitter();\\nemitter.once(\'log\', () => console.log(\'log once\'));\\n\\n// Returns a new Array with a function `onceWrapper` which has a property\\n// `listener` which contains the original listener bound above\\nconst listeners = emitter.rawListeners(\'log\');\\nconst logFnWrapper = listeners[0];\\n\\n// Logs \\"log once\\" to the console and does not unbind the `once` event\\nlogFnWrapper.listener();\\n\\n// Logs \\"log once\\" to the console and removes the listener\\nlogFnWrapper();\\n\\nemitter.on(\'log\', () => console.log(\'log persistently\'));\\n// Will return a new Array with a single function bound by `.on()` above\\nconst newListeners = emitter.rawListeners(\'log\');\\n\\n// Logs \\"log persistently\\" twice\\nnewListeners[0]();\\nemitter.emit(\'log\');\\n```","tags":[{"tag":"since","text":"v9.4.0\\n"}]},"parameters":[{"id":2414,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"array","elementType":{"type":"reference","qualifiedName":"Function","package":"typescript","name":"Function"}},"inheritedFrom":{"type":"reference","id":2288,"name":"Logger.rawListeners"}}],"inheritedFrom":{"type":"reference","id":2287,"name":"Logger.rawListeners"}},{"id":2401,"name":"removeAllListeners","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2402,"name":"removeAllListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Removes all listeners, or those of the specified `eventName`.","text":"It is bad practice to remove listeners added elsewhere in the code,\\nparticularly when the `EventEmitter` instance was created by some other\\ncomponent or module (e.g. sockets or file streams).\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.","tags":[{"tag":"since","text":"v0.1.26\\n"}]},"parameters":[{"id":2403,"name":"event","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"reference","id":2313,"qualifiedName":"LoggerJson","package":"@apify/log","name":"LoggerJson"},"inheritedFrom":{"type":"reference","id":2277,"name":"Logger.removeAllListeners"}}],"inheritedFrom":{"type":"reference","id":2276,"name":"Logger.removeAllListeners"}},{"id":2387,"name":"removeListener","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2388,"name":"removeListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Removes the specified `listener` from the listener array for the event named`eventName`.","text":"```js\\nconst callback = (stream) => {\\n  console.log(\'someone connected!\');\\n};\\nserver.on(\'connection\', callback);\\n// ...\\nserver.removeListener(\'connection\', callback);\\n```\\n\\n`removeListener()` will remove, at most, one instance of a listener from the\\nlistener array. If any single listener has been added multiple times to the\\nlistener array for the specified `eventName`, then `removeListener()` must be\\ncalled multiple times to remove each instance.\\n\\nOnce an event is emitted, all listeners attached to it at the\\ntime of emitting are called in order. This implies that any`removeListener()` or `removeAllListeners()` calls _after_ emitting and_before_ the last listener finishes execution will\\nnot remove them from`emit()` in progress. Subsequent events behave as expected.\\n\\n```js\\nconst myEmitter = new MyEmitter();\\n\\nconst callbackA = () => {\\n  console.log(\'A\');\\n  myEmitter.removeListener(\'event\', callbackB);\\n};\\n\\nconst callbackB = () => {\\n  console.log(\'B\');\\n};\\n\\nmyEmitter.on(\'event\', callbackA);\\n\\nmyEmitter.on(\'event\', callbackB);\\n\\n// callbackA removes listener callbackB but it will still be called.\\n// Internal listener array at time of emit [callbackA, callbackB]\\nmyEmitter.emit(\'event\');\\n// Prints:\\n//   A\\n//   B\\n\\n// callbackB is now removed.\\n// Internal listener array [callbackA]\\nmyEmitter.emit(\'event\');\\n// Prints:\\n//   A\\n```\\n\\nBecause listeners are managed using an internal array, calling this will\\nchange the position indices of any listener registered _after_ the listener\\nbeing removed. This will not impact the order in which listeners are called,\\nbut it means that any copies of the listener array as returned by\\nthe `emitter.listeners()` method will need to be recreated.\\n\\nWhen a single function has been added as a handler multiple times for a single\\nevent (as in the example below), `removeListener()` will remove the most\\nrecently added instance. In the example the `once(\'ping\')`listener is removed:\\n\\n```js\\nconst ee = new EventEmitter();\\n\\nfunction pong() {\\n  console.log(\'pong\');\\n}\\n\\nee.on(\'ping\', pong);\\nee.once(\'ping\', pong);\\nee.removeListener(\'ping\', pong);\\n\\nee.emit(\'ping\');\\nee.emit(\'ping\');\\n```\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.","tags":[{"tag":"since","text":"v0.1.26\\n"}]},"parameters":[{"id":2389,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2390,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2391,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2392,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2393,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2313,"qualifiedName":"LoggerJson","package":"@apify/log","name":"LoggerJson"},"inheritedFrom":{"type":"reference","id":2263,"name":"Logger.removeListener"}}],"inheritedFrom":{"type":"reference","id":2262,"name":"Logger.removeListener"}},{"id":2404,"name":"setMaxListeners","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2405,"name":"setMaxListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"By default `EventEmitter`s will print a warning if more than `10` listeners are\\nadded for a particular event. This is a useful default that helps finding\\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.","text":"Returns a reference to the `EventEmitter`, so that calls can be chained.","tags":[{"tag":"since","text":"v0.3.5\\n"}]},"parameters":[{"id":2406,"name":"n","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":2313,"qualifiedName":"LoggerJson","package":"@apify/log","name":"LoggerJson"},"inheritedFrom":{"type":"reference","id":2280,"name":"Logger.setMaxListeners"}}],"inheritedFrom":{"type":"reference","id":2279,"name":"Logger.setMaxListeners"}},{"id":2352,"name":"setOptions","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/logger.d.ts","line":14,"character":4}],"signatures":[{"id":2353,"name":"setOptions","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2354,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","id":2221,"name":"Logger.setOptions"}}],"inheritedFrom":{"type":"reference","id":2220,"name":"Logger.setOptions"}},{"id":2332,"name":"getEventListeners","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":262,"character":15}],"signatures":[{"id":2333,"name":"getEventListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns a copy of the array of listeners for the event named `eventName`.","text":"For `EventEmitter`s this behaves exactly the same as calling `.listeners` on\\nthe emitter.\\n\\nFor `EventTarget`s this is the only way to get the event listeners for the\\nevent target. This is useful for debugging and diagnostic purposes.\\n\\n```js\\nconst { getEventListeners, EventEmitter } = require(\'events\');\\n\\n{\\n  const ee = new EventEmitter();\\n  const listener = () => console.log(\'Events are fun\');\\n  ee.on(\'foo\', listener);\\n  getEventListeners(ee, \'foo\'); // [listener]\\n}\\n{\\n  const et = new EventTarget();\\n  const listener = () => console.log(\'Events are fun\');\\n  et.addEventListener(\'foo\', listener);\\n  getEventListeners(et, \'foo\'); // [listener]\\n}\\n```","tags":[{"tag":"since","text":"v15.2.0\\n"}]},"parameters":[{"id":2334,"name":"emitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","qualifiedName":"global.NodeJS.EventEmitter","package":"@types/node","name":"EventEmitter"},{"type":"reference","qualifiedName":"DOMEventTarget","package":"@types/node","name":"DOMEventTarget"}]}},{"id":2335,"name":"name","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"array","elementType":{"type":"reference","qualifiedName":"Function","package":"typescript","name":"Function"}},"inheritedFrom":{"type":"reference","id":2209,"name":"Logger.getEventListeners"}}],"inheritedFrom":{"type":"reference","id":2208,"name":"Logger.getEventListeners"}},{"id":2328,"name":"listenerCount","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":234,"character":15}],"signatures":[{"id":2329,"name":"listenerCount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.","text":"```js\\nconst { EventEmitter, listenerCount } = require(\'events\');\\nconst myEmitter = new EventEmitter();\\nmyEmitter.on(\'event\', () => {});\\nmyEmitter.on(\'event\', () => {});\\nconsole.log(listenerCount(myEmitter, \'event\'));\\n// Prints: 2\\n```","tags":[{"tag":"since","text":"v0.9.12"},{"tag":"deprecated","text":"Since v3.2.0 - Use `listenerCount` instead."}]},"parameters":[{"id":2330,"name":"emitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The emitter to query"},"type":{"type":"reference","qualifiedName":"global.NodeJS.EventEmitter","package":"@types/node","name":"EventEmitter"}},{"id":2331,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The event name\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":2205,"name":"Logger.listenerCount"}}],"inheritedFrom":{"type":"reference","id":2204,"name":"Logger.listenerCount"}},{"id":2323,"name":"on","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":217,"character":15}],"signatures":[{"id":2324,"name":"on","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"```js\\nconst { on, EventEmitter } = require(\'events\');","text":"(async () => {\\n  const ee = new EventEmitter();\\n\\n  // Emit later on\\n  process.nextTick(() => {\\n    ee.emit(\'foo\', \'bar\');\\n    ee.emit(\'foo\', 42);\\n  });\\n\\n  for await (const event of on(ee, \'foo\')) {\\n    // The execution of this inner block is synchronous and it\\n    // processes one event at a time (even with await). Do not use\\n    // if concurrent execution is required.\\n    console.log(event); // prints [\'bar\'] [42]\\n  }\\n  // Unreachable here\\n})();\\n```\\n\\nReturns an `AsyncIterator` that iterates `eventName` events. It will throw\\nif the `EventEmitter` emits `\'error\'`. It removes all listeners when\\nexiting the loop. The `value` returned by each iteration is an array\\ncomposed of the emitted event arguments.\\n\\nAn `AbortSignal` can be used to cancel waiting on events:\\n\\n```js\\nconst { on, EventEmitter } = require(\'events\');\\nconst ac = new AbortController();\\n\\n(async () => {\\n  const ee = new EventEmitter();\\n\\n  // Emit later on\\n  process.nextTick(() => {\\n    ee.emit(\'foo\', \'bar\');\\n    ee.emit(\'foo\', 42);\\n  });\\n\\n  for await (const event of on(ee, \'foo\', { signal: ac.signal })) {\\n    // The execution of this inner block is synchronous and it\\n    // processes one event at a time (even with await). Do not use\\n    // if concurrent execution is required.\\n    console.log(event); // prints [\'bar\'] [42]\\n  }\\n  // Unreachable here\\n})();\\n\\nprocess.nextTick(() => ac.abort());\\n```","returns":"that iterates `eventName` events emitted by the `emitter`\\n","tags":[{"tag":"since","text":"v13.6.0, v12.16.0"}]},"parameters":[{"id":2325,"name":"emitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"global.NodeJS.EventEmitter","package":"@types/node","name":"EventEmitter"}},{"id":2326,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event being listened for"},"type":{"type":"intrinsic","name":"string"}},{"id":2327,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"StaticEventEmitterOptions","package":"@types/node","name":"StaticEventEmitterOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"AsyncIterableIterator","package":"typescript","name":"AsyncIterableIterator"},"inheritedFrom":{"type":"reference","id":2200,"name":"Logger.on"}}],"inheritedFrom":{"type":"reference","id":2199,"name":"Logger.on"}},{"id":2314,"name":"once","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":157,"character":15}],"signatures":[{"id":2315,"name":"once","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\\nevent or that is rejected if the `EventEmitter` emits `\'error\'` while waiting.\\nThe `Promise` will resolve with an array of all the arguments emitted to the\\ngiven event.","text":"This method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special`\'error\'` event\\nsemantics and does not listen to the `\'error\'` event.\\n\\n```js\\nconst { once, EventEmitter } = require(\'events\');\\n\\nasync function run() {\\n  const ee = new EventEmitter();\\n\\n  process.nextTick(() => {\\n    ee.emit(\'myevent\', 42);\\n  });\\n\\n  const [value] = await once(ee, \'myevent\');\\n  console.log(value);\\n\\n  const err = new Error(\'kaboom\');\\n  process.nextTick(() => {\\n    ee.emit(\'error\', err);\\n  });\\n\\n  try {\\n    await once(ee, \'myevent\');\\n  } catch (err) {\\n    console.log(\'error happened\', err);\\n  }\\n}\\n\\nrun();\\n```\\n\\nThe special handling of the `\'error\'` event is only used when `events.once()`is used to wait for another event. If `events.once()` is used to wait for the\\n\'`error\'` event itself, then it is treated as any other kind of event without\\nspecial handling:\\n\\n```js\\nconst { EventEmitter, once } = require(\'events\');\\n\\nconst ee = new EventEmitter();\\n\\nonce(ee, \'error\')\\n  .then(([err]) => console.log(\'ok\', err.message))\\n  .catch((err) => console.log(\'error\', err.message));\\n\\nee.emit(\'error\', new Error(\'boom\'));\\n\\n// Prints: ok boom\\n```\\n\\nAn `AbortSignal` can be used to cancel waiting for the event:\\n\\n```js\\nconst { EventEmitter, once } = require(\'events\');\\n\\nconst ee = new EventEmitter();\\nconst ac = new AbortController();\\n\\nasync function foo(emitter, event, signal) {\\n  try {\\n    await once(emitter, event, { signal });\\n    console.log(\'event emitted!\');\\n  } catch (error) {\\n    if (error.name === \'AbortError\') {\\n      console.error(\'Waiting for the event was canceled!\');\\n    } else {\\n      console.error(\'There was an error\', error.message);\\n    }\\n  }\\n}\\n\\nfoo(ee, \'foo\', ac.signal);\\nac.abort(); // Abort waiting for the event\\nee.emit(\'foo\'); // Prints: Waiting for the event was canceled!\\n```","tags":[{"tag":"since","text":"v11.13.0, v10.16.0\\n"}]},"parameters":[{"id":2316,"name":"emitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"NodeEventTarget","package":"@types/node","name":"NodeEventTarget"}},{"id":2317,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2318,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"StaticEventEmitterOptions","package":"@types/node","name":"StaticEventEmitterOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","id":2191,"name":"Logger.once"}},{"id":2319,"name":"once","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2320,"name":"emitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"DOMEventTarget","package":"@types/node","name":"DOMEventTarget"}},{"id":2321,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":2322,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"StaticEventEmitterOptions","package":"@types/node","name":"StaticEventEmitterOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","id":2195,"name":"Logger.once"}}],"inheritedFrom":{"type":"reference","id":2190,"name":"Logger.once"}}],"groups":[{"title":"Constructors","kind":512,"children":[2340]},{"title":"Properties","kind":1024,"children":[2337,2338,2339,2336]},{"title":"Methods","kind":2048,"children":[2344,2357,2366,2415,2436,2407,2355,2419,2409,2361,2394,2373,2380,2422,2429,2412,2401,2387,2404,2352,2332,2328,2323,2314]}],"sources":[{"fileName":"node_modules/@apify/log/logger_json.d.ts","line":4,"character":21}],"extendedTypes":[{"type":"reference","id":2189,"qualifiedName":"Logger","package":"@apify/log","name":"Logger"}],"permalink":"/apify-ts/api/next/core/class/LoggerJson","previousId":2189,"nextId":2438},{"id":2438,"name":"LoggerText","kind":128,"kindString":"Class","flags":{"isExternal":true},"children":[{"id":2465,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/logger_text.d.ts","line":9,"character":4}],"signatures":[{"id":2466,"name":"new LoggerText","kind":16384,"kindString":"Constructor signature","flags":{"isExternal":true},"parameters":[{"id":2467,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":2468,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}}],"type":{"type":"reference","id":2438,"qualifiedName":"LoggerText","package":"@apify/log","name":"LoggerText"},"overwrites":{"type":"reference","id":2217,"name":"Logger.constructor"}}],"overwrites":{"type":"reference","id":2216,"name":"Logger.constructor"}},{"id":2462,"name":"captureRejectionSymbol","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":273,"character":24}],"type":{"type":"query","queryType":{"type":"reference","id":810,"qualifiedName":"EventEmitter.captureRejectionSymbol","package":"@types/node","name":"captureRejectionSymbol"}},"inheritedFrom":{"type":"reference","id":2213,"name":"Logger.captureRejectionSymbol"}},{"id":2463,"name":"captureRejections","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true},"comment":{"shortText":"Sets or gets the default captureRejection value for all emitters."},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":278,"character":15}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2214,"name":"Logger.captureRejections"}},{"id":2464,"name":"defaultMaxListeners","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":279,"character":15}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":2215,"name":"Logger.defaultMaxListeners"}},{"id":2461,"name":"errorMonitor","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isReadonly":true},"comment":{"shortText":"This symbol shall be used to install a listener for only monitoring `\'error\'`\\nevents. Listeners installed using this symbol are called before the regular\\n`\'error\'` listeners are called.","text":"Installing a listener using this symbol does not change the behavior once an\\n`\'error\'` event is emitted, therefore the process will still crash if no\\nregular `\'error\'` listener is installed.\\n"},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":272,"character":24}],"type":{"type":"query","queryType":{"type":"reference","id":809,"qualifiedName":"EventEmitter.errorMonitor","package":"@types/node","name":"errorMonitor"}},"inheritedFrom":{"type":"reference","id":2212,"name":"Logger.errorMonitor"}},{"id":2469,"name":"_log","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/logger_text.d.ts","line":10,"character":4}],"signatures":[{"id":2470,"name":"_log","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2471,"name":"level","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","id":2181,"qualifiedName":"LogLevel","package":"@apify/log","name":"LogLevel"}},{"id":2472,"name":"message","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":2473,"name":"data","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}},{"id":2474,"name":"exception","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"Exception","package":"@apify/log","name":"Exception"}},{"id":2475,"name":"opts","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","id":2230,"name":"Logger._log"}}],"overwrites":{"type":"reference","id":2229,"name":"Logger._log"}},{"id":2485,"name":"_outputWithConsole","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/logger.d.ts","line":16,"character":4}],"signatures":[{"id":2486,"name":"_outputWithConsole","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2487,"name":"level","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","id":2181,"qualifiedName":"LogLevel","package":"@apify/log","name":"LogLevel"}},{"id":2488,"name":"line","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","id":2226,"name":"Logger._outputWithConsole"}}],"inheritedFrom":{"type":"reference","id":2225,"name":"Logger._outputWithConsole"}},{"id":2476,"name":"_parseException","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/logger_text.d.ts","line":11,"character":4}],"signatures":[{"id":2477,"name":"_parseException","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2478,"name":"exception","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"Exception","package":"@apify/log","name":"Exception"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":2494,"name":"addListener","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2495,"name":"addListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Alias for `emitter.on(eventName, listener)`.","tags":[{"tag":"since","text":"v0.1.26\\n"}]},"parameters":[{"id":2496,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2497,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2498,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2499,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2500,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2438,"qualifiedName":"LoggerText","package":"@apify/log","name":"LoggerText"},"inheritedFrom":{"type":"reference","id":2242,"name":"Logger.addListener"}}],"inheritedFrom":{"type":"reference","id":2241,"name":"Logger.addListener"}},{"id":2543,"name":"emit","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2544,"name":"emit","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Synchronously calls each of the listeners registered for the event named`eventName`, in the order they were registered, passing the supplied arguments\\nto each.","text":"Returns `true` if the event had listeners, `false` otherwise.\\n\\n```js\\nconst EventEmitter = require(\'events\');\\nconst myEmitter = new EventEmitter();\\n\\n// First listener\\nmyEmitter.on(\'event\', function firstListener() {\\n  console.log(\'Helloooo! first listener\');\\n});\\n// Second listener\\nmyEmitter.on(\'event\', function secondListener(arg1, arg2) {\\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\\n});\\n// Third listener\\nmyEmitter.on(\'event\', function thirdListener(...args) {\\n  const parameters = args.join(\', \');\\n  console.log(`event with parameters ${parameters} in third listener`);\\n});\\n\\nconsole.log(myEmitter.listeners(\'event\'));\\n\\nmyEmitter.emit(\'event\', 1, 2, 3, 4, 5);\\n\\n// Prints:\\n// [\\n//   [Function: firstListener],\\n//   [Function: secondListener],\\n//   [Function: thirdListener]\\n// ]\\n// Helloooo! first listener\\n// event with parameters 1, 2 in second listener\\n// event with parameters 1, 2, 3, 4, 5 in third listener\\n```","tags":[{"tag":"since","text":"v0.1.26\\n"}]},"parameters":[{"id":2545,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2546,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2291,"name":"Logger.emit"}}],"inheritedFrom":{"type":"reference","id":2290,"name":"Logger.emit"}},{"id":2564,"name":"eventNames","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2565,"name":"eventNames","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns an array listing the events for which the emitter has registered\\nlisteners. The values in the array are strings or `Symbol`s.","text":"```js\\nconst EventEmitter = require(\'events\');\\nconst myEE = new EventEmitter();\\nmyEE.on(\'foo\', () => {});\\nmyEE.on(\'bar\', () => {});\\n\\nconst sym = Symbol(\'symbol\');\\nmyEE.on(sym, () => {});\\n\\nconsole.log(myEE.eventNames());\\n// Prints: [ \'foo\', \'bar\', Symbol(symbol) ]\\n```","tags":[{"tag":"since","text":"v6.0.0\\n"}]},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},"inheritedFrom":{"type":"reference","id":2312,"name":"Logger.eventNames"}}],"inheritedFrom":{"type":"reference","id":2311,"name":"Logger.eventNames"}},{"id":2535,"name":"getMaxListeners","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2536,"name":"getMaxListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns the current max listener value for the `EventEmitter` which is either\\nset by `emitter.setMaxListeners(n)` or defaults to {@link defaultMaxListeners}.","tags":[{"tag":"since","text":"v1.0.0\\n"}]},"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":2283,"name":"Logger.getMaxListeners"}}],"inheritedFrom":{"type":"reference","id":2282,"name":"Logger.getMaxListeners"}},{"id":2483,"name":"getOptions","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/logger.d.ts","line":15,"character":4}],"signatures":[{"id":2484,"name":"getOptions","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"inheritedFrom":{"type":"reference","id":2224,"name":"Logger.getOptions"}}],"inheritedFrom":{"type":"reference","id":2223,"name":"Logger.getOptions"}},{"id":2547,"name":"listenerCount","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2548,"name":"listenerCount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns the number of listeners listening to the event named `eventName`.","tags":[{"tag":"since","text":"v3.2.0"}]},"parameters":[{"id":2549,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event being listened for\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":2295,"name":"Logger.listenerCount"}}],"inheritedFrom":{"type":"reference","id":2294,"name":"Logger.listenerCount"}},{"id":2537,"name":"listeners","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2538,"name":"listeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns a copy of the array of listeners for the event named `eventName`.","text":"```js\\nserver.on(\'connection\', (stream) => {\\n  console.log(\'someone connected!\');\\n});\\nconsole.log(util.inspect(server.listeners(\'connection\')));\\n// Prints: [ [Function] ]\\n```","tags":[{"tag":"since","text":"v0.1.26\\n"}]},"parameters":[{"id":2539,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"array","elementType":{"type":"reference","qualifiedName":"Function","package":"typescript","name":"Function"}},"inheritedFrom":{"type":"reference","id":2285,"name":"Logger.listeners"}}],"inheritedFrom":{"type":"reference","id":2284,"name":"Logger.listeners"}},{"id":2489,"name":"log","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/logger.d.ts","line":18,"character":4}],"signatures":[{"id":2490,"name":"log","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2491,"name":"level","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","id":2181,"qualifiedName":"LogLevel","package":"@apify/log","name":"LogLevel"}},{"id":2492,"name":"message","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":2493,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","id":2237,"name":"Logger.log"}}],"inheritedFrom":{"type":"reference","id":2236,"name":"Logger.log"}},{"id":2522,"name":"off","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2523,"name":"off","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Alias for `emitter.removeListener()`.","tags":[{"tag":"since","text":"v10.0.0\\n"}]},"parameters":[{"id":2524,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2525,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2526,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2527,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2528,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2438,"qualifiedName":"LoggerText","package":"@apify/log","name":"LoggerText"},"inheritedFrom":{"type":"reference","id":2270,"name":"Logger.off"}}],"inheritedFrom":{"type":"reference","id":2269,"name":"Logger.off"}},{"id":2501,"name":"on","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2502,"name":"on","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Adds the `listener` function to the end of the listeners array for the\\nevent named `eventName`. No checks are made to see if the `listener` has\\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\\ntimes.","text":"```js\\nserver.on(\'connection\', (stream) => {\\n  console.log(\'someone connected!\');\\n});\\n```\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.\\n\\nBy default, event listeners are invoked in the order they are added. The`emitter.prependListener()` method can be used as an alternative to add the\\nevent listener to the beginning of the listeners array.\\n\\n```js\\nconst myEE = new EventEmitter();\\nmyEE.on(\'foo\', () => console.log(\'a\'));\\nmyEE.prependListener(\'foo\', () => console.log(\'b\'));\\nmyEE.emit(\'foo\');\\n// Prints:\\n//   b\\n//   a\\n```","tags":[{"tag":"since","text":"v0.1.101"}]},"parameters":[{"id":2503,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2504,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The callback function\\n"},"type":{"type":"reflection","declaration":{"id":2505,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2506,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2507,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2438,"qualifiedName":"LoggerText","package":"@apify/log","name":"LoggerText"},"inheritedFrom":{"type":"reference","id":2249,"name":"Logger.on"}}],"inheritedFrom":{"type":"reference","id":2248,"name":"Logger.on"}},{"id":2508,"name":"once","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2509,"name":"once","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Adds a **one-time**`listener` function for the event named `eventName`. The\\nnext time `eventName` is triggered, this listener is removed and then invoked.","text":"```js\\nserver.once(\'connection\', (stream) => {\\n  console.log(\'Ah, we have our first user!\');\\n});\\n```\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.\\n\\nBy default, event listeners are invoked in the order they are added. The`emitter.prependOnceListener()` method can be used as an alternative to add the\\nevent listener to the beginning of the listeners array.\\n\\n```js\\nconst myEE = new EventEmitter();\\nmyEE.once(\'foo\', () => console.log(\'a\'));\\nmyEE.prependOnceListener(\'foo\', () => console.log(\'b\'));\\nmyEE.emit(\'foo\');\\n// Prints:\\n//   b\\n//   a\\n```","tags":[{"tag":"since","text":"v0.3.0"}]},"parameters":[{"id":2510,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2511,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The callback function\\n"},"type":{"type":"reflection","declaration":{"id":2512,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2513,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2514,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2438,"qualifiedName":"LoggerText","package":"@apify/log","name":"LoggerText"},"inheritedFrom":{"type":"reference","id":2256,"name":"Logger.once"}}],"inheritedFrom":{"type":"reference","id":2255,"name":"Logger.once"}},{"id":2550,"name":"prependListener","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2551,"name":"prependListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Adds the `listener` function to the _beginning_ of the listeners array for the\\nevent named `eventName`. No checks are made to see if the `listener` has\\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\\ntimes.","text":"```js\\nserver.prependListener(\'connection\', (stream) => {\\n  console.log(\'someone connected!\');\\n});\\n```\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.","tags":[{"tag":"since","text":"v6.0.0"}]},"parameters":[{"id":2552,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2553,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The callback function\\n"},"type":{"type":"reflection","declaration":{"id":2554,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2555,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2556,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2438,"qualifiedName":"LoggerText","package":"@apify/log","name":"LoggerText"},"inheritedFrom":{"type":"reference","id":2298,"name":"Logger.prependListener"}}],"inheritedFrom":{"type":"reference","id":2297,"name":"Logger.prependListener"}},{"id":2557,"name":"prependOnceListener","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2558,"name":"prependOnceListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Adds a **one-time**`listener` function for the event named `eventName` to the_beginning_ of the listeners array. The next time `eventName` is triggered, this\\nlistener is removed, and then invoked.","text":"```js\\nserver.prependOnceListener(\'connection\', (stream) => {\\n  console.log(\'Ah, we have our first user!\');\\n});\\n```\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.","tags":[{"tag":"since","text":"v6.0.0"}]},"parameters":[{"id":2559,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2560,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The callback function\\n"},"type":{"type":"reflection","declaration":{"id":2561,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2562,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2563,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2438,"qualifiedName":"LoggerText","package":"@apify/log","name":"LoggerText"},"inheritedFrom":{"type":"reference","id":2305,"name":"Logger.prependOnceListener"}}],"inheritedFrom":{"type":"reference","id":2304,"name":"Logger.prependOnceListener"}},{"id":2540,"name":"rawListeners","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2541,"name":"rawListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns a copy of the array of listeners for the event named `eventName`,\\nincluding any wrappers (such as those created by `.once()`).","text":"```js\\nconst emitter = new EventEmitter();\\nemitter.once(\'log\', () => console.log(\'log once\'));\\n\\n// Returns a new Array with a function `onceWrapper` which has a property\\n// `listener` which contains the original listener bound above\\nconst listeners = emitter.rawListeners(\'log\');\\nconst logFnWrapper = listeners[0];\\n\\n// Logs \\"log once\\" to the console and does not unbind the `once` event\\nlogFnWrapper.listener();\\n\\n// Logs \\"log once\\" to the console and removes the listener\\nlogFnWrapper();\\n\\nemitter.on(\'log\', () => console.log(\'log persistently\'));\\n// Will return a new Array with a single function bound by `.on()` above\\nconst newListeners = emitter.rawListeners(\'log\');\\n\\n// Logs \\"log persistently\\" twice\\nnewListeners[0]();\\nemitter.emit(\'log\');\\n```","tags":[{"tag":"since","text":"v9.4.0\\n"}]},"parameters":[{"id":2542,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"array","elementType":{"type":"reference","qualifiedName":"Function","package":"typescript","name":"Function"}},"inheritedFrom":{"type":"reference","id":2288,"name":"Logger.rawListeners"}}],"inheritedFrom":{"type":"reference","id":2287,"name":"Logger.rawListeners"}},{"id":2529,"name":"removeAllListeners","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2530,"name":"removeAllListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Removes all listeners, or those of the specified `eventName`.","text":"It is bad practice to remove listeners added elsewhere in the code,\\nparticularly when the `EventEmitter` instance was created by some other\\ncomponent or module (e.g. sockets or file streams).\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.","tags":[{"tag":"since","text":"v0.1.26\\n"}]},"parameters":[{"id":2531,"name":"event","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"reference","id":2438,"qualifiedName":"LoggerText","package":"@apify/log","name":"LoggerText"},"inheritedFrom":{"type":"reference","id":2277,"name":"Logger.removeAllListeners"}}],"inheritedFrom":{"type":"reference","id":2276,"name":"Logger.removeAllListeners"}},{"id":2515,"name":"removeListener","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2516,"name":"removeListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Removes the specified `listener` from the listener array for the event named`eventName`.","text":"```js\\nconst callback = (stream) => {\\n  console.log(\'someone connected!\');\\n};\\nserver.on(\'connection\', callback);\\n// ...\\nserver.removeListener(\'connection\', callback);\\n```\\n\\n`removeListener()` will remove, at most, one instance of a listener from the\\nlistener array. If any single listener has been added multiple times to the\\nlistener array for the specified `eventName`, then `removeListener()` must be\\ncalled multiple times to remove each instance.\\n\\nOnce an event is emitted, all listeners attached to it at the\\ntime of emitting are called in order. This implies that any`removeListener()` or `removeAllListeners()` calls _after_ emitting and_before_ the last listener finishes execution will\\nnot remove them from`emit()` in progress. Subsequent events behave as expected.\\n\\n```js\\nconst myEmitter = new MyEmitter();\\n\\nconst callbackA = () => {\\n  console.log(\'A\');\\n  myEmitter.removeListener(\'event\', callbackB);\\n};\\n\\nconst callbackB = () => {\\n  console.log(\'B\');\\n};\\n\\nmyEmitter.on(\'event\', callbackA);\\n\\nmyEmitter.on(\'event\', callbackB);\\n\\n// callbackA removes listener callbackB but it will still be called.\\n// Internal listener array at time of emit [callbackA, callbackB]\\nmyEmitter.emit(\'event\');\\n// Prints:\\n//   A\\n//   B\\n\\n// callbackB is now removed.\\n// Internal listener array [callbackA]\\nmyEmitter.emit(\'event\');\\n// Prints:\\n//   A\\n```\\n\\nBecause listeners are managed using an internal array, calling this will\\nchange the position indices of any listener registered _after_ the listener\\nbeing removed. This will not impact the order in which listeners are called,\\nbut it means that any copies of the listener array as returned by\\nthe `emitter.listeners()` method will need to be recreated.\\n\\nWhen a single function has been added as a handler multiple times for a single\\nevent (as in the example below), `removeListener()` will remove the most\\nrecently added instance. In the example the `once(\'ping\')`listener is removed:\\n\\n```js\\nconst ee = new EventEmitter();\\n\\nfunction pong() {\\n  console.log(\'pong\');\\n}\\n\\nee.on(\'ping\', pong);\\nee.once(\'ping\', pong);\\nee.removeListener(\'ping\', pong);\\n\\nee.emit(\'ping\');\\nee.emit(\'ping\');\\n```\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.","tags":[{"tag":"since","text":"v0.1.26\\n"}]},"parameters":[{"id":2517,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2518,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2519,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":2520,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2521,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":2438,"qualifiedName":"LoggerText","package":"@apify/log","name":"LoggerText"},"inheritedFrom":{"type":"reference","id":2263,"name":"Logger.removeListener"}}],"inheritedFrom":{"type":"reference","id":2262,"name":"Logger.removeListener"}},{"id":2532,"name":"setMaxListeners","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":2533,"name":"setMaxListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"By default `EventEmitter`s will print a warning if more than `10` listeners are\\nadded for a particular event. This is a useful default that helps finding\\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.","text":"Returns a reference to the `EventEmitter`, so that calls can be chained.","tags":[{"tag":"since","text":"v0.3.5\\n"}]},"parameters":[{"id":2534,"name":"n","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":2438,"qualifiedName":"LoggerText","package":"@apify/log","name":"LoggerText"},"inheritedFrom":{"type":"reference","id":2280,"name":"Logger.setMaxListeners"}}],"inheritedFrom":{"type":"reference","id":2279,"name":"Logger.setMaxListeners"}},{"id":2480,"name":"setOptions","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/logger.d.ts","line":14,"character":4}],"signatures":[{"id":2481,"name":"setOptions","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2482,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","id":2221,"name":"Logger.setOptions"}}],"inheritedFrom":{"type":"reference","id":2220,"name":"Logger.setOptions"}},{"id":2457,"name":"getEventListeners","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":262,"character":15}],"signatures":[{"id":2458,"name":"getEventListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns a copy of the array of listeners for the event named `eventName`.","text":"For `EventEmitter`s this behaves exactly the same as calling `.listeners` on\\nthe emitter.\\n\\nFor `EventTarget`s this is the only way to get the event listeners for the\\nevent target. This is useful for debugging and diagnostic purposes.\\n\\n```js\\nconst { getEventListeners, EventEmitter } = require(\'events\');\\n\\n{\\n  const ee = new EventEmitter();\\n  const listener = () => console.log(\'Events are fun\');\\n  ee.on(\'foo\', listener);\\n  getEventListeners(ee, \'foo\'); // [listener]\\n}\\n{\\n  const et = new EventTarget();\\n  const listener = () => console.log(\'Events are fun\');\\n  et.addEventListener(\'foo\', listener);\\n  getEventListeners(et, \'foo\'); // [listener]\\n}\\n```","tags":[{"tag":"since","text":"v15.2.0\\n"}]},"parameters":[{"id":2459,"name":"emitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","qualifiedName":"global.NodeJS.EventEmitter","package":"@types/node","name":"EventEmitter"},{"type":"reference","qualifiedName":"DOMEventTarget","package":"@types/node","name":"DOMEventTarget"}]}},{"id":2460,"name":"name","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"array","elementType":{"type":"reference","qualifiedName":"Function","package":"typescript","name":"Function"}},"inheritedFrom":{"type":"reference","id":2209,"name":"Logger.getEventListeners"}}],"inheritedFrom":{"type":"reference","id":2208,"name":"Logger.getEventListeners"}},{"id":2453,"name":"listenerCount","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":234,"character":15}],"signatures":[{"id":2454,"name":"listenerCount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.","text":"```js\\nconst { EventEmitter, listenerCount } = require(\'events\');\\nconst myEmitter = new EventEmitter();\\nmyEmitter.on(\'event\', () => {});\\nmyEmitter.on(\'event\', () => {});\\nconsole.log(listenerCount(myEmitter, \'event\'));\\n// Prints: 2\\n```","tags":[{"tag":"since","text":"v0.9.12"},{"tag":"deprecated","text":"Since v3.2.0 - Use `listenerCount` instead."}]},"parameters":[{"id":2455,"name":"emitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The emitter to query"},"type":{"type":"reference","qualifiedName":"global.NodeJS.EventEmitter","package":"@types/node","name":"EventEmitter"}},{"id":2456,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The event name\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":2205,"name":"Logger.listenerCount"}}],"inheritedFrom":{"type":"reference","id":2204,"name":"Logger.listenerCount"}},{"id":2448,"name":"on","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":217,"character":15}],"signatures":[{"id":2449,"name":"on","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"```js\\nconst { on, EventEmitter } = require(\'events\');","text":"(async () => {\\n  const ee = new EventEmitter();\\n\\n  // Emit later on\\n  process.nextTick(() => {\\n    ee.emit(\'foo\', \'bar\');\\n    ee.emit(\'foo\', 42);\\n  });\\n\\n  for await (const event of on(ee, \'foo\')) {\\n    // The execution of this inner block is synchronous and it\\n    // processes one event at a time (even with await). Do not use\\n    // if concurrent execution is required.\\n    console.log(event); // prints [\'bar\'] [42]\\n  }\\n  // Unreachable here\\n})();\\n```\\n\\nReturns an `AsyncIterator` that iterates `eventName` events. It will throw\\nif the `EventEmitter` emits `\'error\'`. It removes all listeners when\\nexiting the loop. The `value` returned by each iteration is an array\\ncomposed of the emitted event arguments.\\n\\nAn `AbortSignal` can be used to cancel waiting on events:\\n\\n```js\\nconst { on, EventEmitter } = require(\'events\');\\nconst ac = new AbortController();\\n\\n(async () => {\\n  const ee = new EventEmitter();\\n\\n  // Emit later on\\n  process.nextTick(() => {\\n    ee.emit(\'foo\', \'bar\');\\n    ee.emit(\'foo\', 42);\\n  });\\n\\n  for await (const event of on(ee, \'foo\', { signal: ac.signal })) {\\n    // The execution of this inner block is synchronous and it\\n    // processes one event at a time (even with await). Do not use\\n    // if concurrent execution is required.\\n    console.log(event); // prints [\'bar\'] [42]\\n  }\\n  // Unreachable here\\n})();\\n\\nprocess.nextTick(() => ac.abort());\\n```","returns":"that iterates `eventName` events emitted by the `emitter`\\n","tags":[{"tag":"since","text":"v13.6.0, v12.16.0"}]},"parameters":[{"id":2450,"name":"emitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"global.NodeJS.EventEmitter","package":"@types/node","name":"EventEmitter"}},{"id":2451,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event being listened for"},"type":{"type":"intrinsic","name":"string"}},{"id":2452,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"StaticEventEmitterOptions","package":"@types/node","name":"StaticEventEmitterOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"AsyncIterableIterator","package":"typescript","name":"AsyncIterableIterator"},"inheritedFrom":{"type":"reference","id":2200,"name":"Logger.on"}}],"inheritedFrom":{"type":"reference","id":2199,"name":"Logger.on"}},{"id":2439,"name":"once","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":157,"character":15}],"signatures":[{"id":2440,"name":"once","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\\nevent or that is rejected if the `EventEmitter` emits `\'error\'` while waiting.\\nThe `Promise` will resolve with an array of all the arguments emitted to the\\ngiven event.","text":"This method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special`\'error\'` event\\nsemantics and does not listen to the `\'error\'` event.\\n\\n```js\\nconst { once, EventEmitter } = require(\'events\');\\n\\nasync function run() {\\n  const ee = new EventEmitter();\\n\\n  process.nextTick(() => {\\n    ee.emit(\'myevent\', 42);\\n  });\\n\\n  const [value] = await once(ee, \'myevent\');\\n  console.log(value);\\n\\n  const err = new Error(\'kaboom\');\\n  process.nextTick(() => {\\n    ee.emit(\'error\', err);\\n  });\\n\\n  try {\\n    await once(ee, \'myevent\');\\n  } catch (err) {\\n    console.log(\'error happened\', err);\\n  }\\n}\\n\\nrun();\\n```\\n\\nThe special handling of the `\'error\'` event is only used when `events.once()`is used to wait for another event. If `events.once()` is used to wait for the\\n\'`error\'` event itself, then it is treated as any other kind of event without\\nspecial handling:\\n\\n```js\\nconst { EventEmitter, once } = require(\'events\');\\n\\nconst ee = new EventEmitter();\\n\\nonce(ee, \'error\')\\n  .then(([err]) => console.log(\'ok\', err.message))\\n  .catch((err) => console.log(\'error\', err.message));\\n\\nee.emit(\'error\', new Error(\'boom\'));\\n\\n// Prints: ok boom\\n```\\n\\nAn `AbortSignal` can be used to cancel waiting for the event:\\n\\n```js\\nconst { EventEmitter, once } = require(\'events\');\\n\\nconst ee = new EventEmitter();\\nconst ac = new AbortController();\\n\\nasync function foo(emitter, event, signal) {\\n  try {\\n    await once(emitter, event, { signal });\\n    console.log(\'event emitted!\');\\n  } catch (error) {\\n    if (error.name === \'AbortError\') {\\n      console.error(\'Waiting for the event was canceled!\');\\n    } else {\\n      console.error(\'There was an error\', error.message);\\n    }\\n  }\\n}\\n\\nfoo(ee, \'foo\', ac.signal);\\nac.abort(); // Abort waiting for the event\\nee.emit(\'foo\'); // Prints: Waiting for the event was canceled!\\n```","tags":[{"tag":"since","text":"v11.13.0, v10.16.0\\n"}]},"parameters":[{"id":2441,"name":"emitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"NodeEventTarget","package":"@types/node","name":"NodeEventTarget"}},{"id":2442,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2443,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"StaticEventEmitterOptions","package":"@types/node","name":"StaticEventEmitterOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","id":2191,"name":"Logger.once"}},{"id":2444,"name":"once","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":2445,"name":"emitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"DOMEventTarget","package":"@types/node","name":"DOMEventTarget"}},{"id":2446,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":2447,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"StaticEventEmitterOptions","package":"@types/node","name":"StaticEventEmitterOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","id":2195,"name":"Logger.once"}}],"inheritedFrom":{"type":"reference","id":2190,"name":"Logger.once"}}],"groups":[{"title":"Constructors","kind":512,"children":[2465]},{"title":"Properties","kind":1024,"children":[2462,2463,2464,2461]},{"title":"Methods","kind":2048,"children":[2469,2485,2476,2494,2543,2564,2535,2483,2547,2537,2489,2522,2501,2508,2550,2557,2540,2529,2515,2532,2480,2457,2453,2448,2439]}],"sources":[{"fileName":"node_modules/@apify/log/logger_text.d.ts","line":8,"character":21}],"extendedTypes":[{"type":"reference","id":2189,"qualifiedName":"Logger","package":"@apify/log","name":"Logger"}],"permalink":"/apify-ts/api/next/core/class/LoggerText","previousId":2313,"nextId":1686},{"id":1686,"name":"ProxyConfiguration","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"Configures connection to a proxy server with the provided options. Proxy servers are used to prevent target websites from blocking\\nyour crawlers based on IP address rate limits or blacklists. Setting proxy configuration in your crawlers automatically configures\\nthem to use the selected proxies for all connections. You can get information about the currently used proxy by inspecting\\nthe {@link ProxyInfo} property in your crawler\'s page function. There, you can inspect the proxy\'s URL and other attributes.","text":"The proxy servers are managed by [Apify Proxy](https://docs.apify.com/proxy). To be able to use Apify Proxy,\\nyou need an Apify account and access to the selected proxies. If you provide no configuration option,\\nthe proxies will be managed automatically using a smart algorithm.\\n\\nIf you want to use your own proxies, use the {@link ProxyConfigurationOptions.proxyUrls} option. Your list of proxy URLs will\\nbe rotated by the configuration if this option is provided.\\n\\n**Example usage:**\\n\\n```javascript\\n\\nconst proxyConfiguration = await Apify.createProxyConfiguration({\\n  groups: [\'GROUP1\', \'GROUP2\'] // List of Apify Proxy groups\\n  countryCode: \'US\',\\n});\\n\\nconst crawler = new Apify.CheerioCrawler({\\n  // ...\\n  proxyConfiguration,\\n  handlePageFunction: ({ proxyInfo }) => {\\n     const usedProxyUrl = proxyInfo.url; // Getting the proxy URL\\n  }\\n})\\n\\n```"},"children":[{"id":1703,"name":"config","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"type":{"type":"reference","id":1453,"name":"Configuration"},"defaultValue":"..."},{"id":1701,"name":"isManInTheMiddle","kind":1024,"kindString":"Property","flags":{"isPublic":true},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":195,"character":11}],"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"id":1704,"name":"initialize","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":258,"character":10}],"signatures":[{"id":1705,"name":"initialize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Loads proxy password if token is provided and checks access to Apify Proxy and provided proxy groups\\nif Apify Proxy configuration is used.\\nAlso checks if country has access to Apify Proxy groups if the country code is provided.","text":"You should use the {@link createProxyConfiguration} function to create a pre-initialized\\n`ProxyConfiguration` instance instead of calling this manually.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1706,"name":"newProxyInfo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":283,"character":4}],"signatures":[{"id":1707,"name":"newProxyInfo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"This function creates a new {@link ProxyInfo} info object.\\nIt is used by CheerioCrawler and PuppeteerCrawler to generate proxy URLs and also to allow the user to inspect\\nthe currently used proxy via the handlePageFunction parameter: proxyInfo.\\nUse it if you want to work with a rich representation of a proxy URL.\\nIf you need the URL string only, use {@link ProxyConfiguration.newUrl}.","returns":"Represents information about used proxy and its configuration.\\n"},"parameters":[{"id":1708,"name":"sessionId","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"reference","id":1678,"name":"ProxyInfo"}}]},{"id":1709,"name":"newUrl","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":314,"character":4}],"signatures":[{"id":1710,"name":"newUrl","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a new proxy URL based on provided configuration options and the `sessionId` parameter.","returns":"A string with a proxy URL, including authentication credentials and port number.\\n For example, `http://bob:password123@proxy.example.com:8000`\\n"},"parameters":[{"id":1711,"name":"sessionId","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Properties","kind":1024,"children":[1703,1701]},{"title":"Methods","kind":2048,"children":[1704,1706,1709]}],"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":184,"character":13}],"permalink":"/apify-ts/api/next/core/class/ProxyConfiguration","previousId":2438,"nextId":1596},{"id":1596,"name":"PseudoUrl","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"Represents a pseudo-URL (PURL) - an URL pattern used by web crawlers\\nto specify which URLs should the crawler visit.\\nThis class is used by the {@link utils.enqueueLinks} function.","text":"A PURL is simply a URL with special directives enclosed in `[]` brackets.\\nCurrently, the only supported directive is `[RegExp]`,\\nwhich defines a JavaScript-style regular expression to match against the URL.\\n\\nThe `PseudoUrl` class can be constructed either using a pseudo-URL string\\nor a regular expression (an instance of the `RegExp` object).\\nWith a pseudo-URL string, the matching is always case-insensitive.\\nIf you need case-sensitive matching, use an appropriate `RegExp` object.\\n\\nFor example, a PURL `http://www.example.com/pages/[(\\\\w|-)*]` will match all of the following URLs:\\n\\n- `http://www.example.com/pages/`\\n- `http://www.example.com/pages/my-awesome-page`\\n- `http://www.example.com/pages/something`\\n\\nBe careful to correctly escape special characters in the pseudo-URL string.\\nIf either `[` or `]` is part of the normal query string, it must be encoded as `[\\\\x5B]` or `[\\\\x5D]`,\\nrespectively. For example, the following PURL:\\n```http\\nhttp://www.example.com/search?do[\\\\x5B]load[\\\\x5D]=1\\n```\\nwill match the URL:\\n```http\\nhttp://www.example.com/search?do[load]=1\\n```\\n\\nIf the regular expression in the pseudo-URL contains a backslash character (\\\\),\\nyou need to escape it with another back backslash, as shown in the example below.\\n\\n**Example usage:**\\n\\n```javascript\\n// Using a pseudo-URL string\\nconst purl = new Apify.PseudoUrl(\'http://www.example.com/pages/[(\\\\\\\\w|-)+]\', {\\n  userData: { foo: \'bar\' },\\n});\\n\\n// Using a regular expression\\nconst purl2 = new Apify.PseudoUrl(/http:\\\\/\\\\/www\\\\.example\\\\.com\\\\/pages\\\\/(\\\\w|-)+/);\\n\\nif (purl.matches(\'http://www.example.com/pages/my-awesome-page\')) console.log(\'Match!\');\\n```"},"children":[{"id":1597,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/pseudo_url.ts","line":112,"character":4}],"signatures":[{"id":1598,"name":"new PseudoUrl","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{},"parameters":[{"id":1599,"name":"purl","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  A pseudo-URL string or a regular expression object.\\n  Using a `RegExp` instance enables more granular control,\\n  such as making the matching case sensitive."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"}]}},{"id":1600,"name":"requestTemplate","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  Options for the new {@link Request} instances created for matching URLs\\n  by the {@link utils.enqueueLinks} function.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","id":1649,"name":"RequestOptions"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"defaultValue":"{}"}],"type":{"type":"reference","id":1596,"name":"PseudoUrl"}}]},{"id":1602,"name":"requestTemplate","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"type":{"type":"reference","typeArguments":[{"type":"reference","id":1649,"name":"RequestOptions"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"defaultValue":"{}"},{"id":1606,"name":"createRequest","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/pseudo_url.ts","line":142,"character":4}],"signatures":[{"id":1607,"name":"createRequest","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a Request object from a provided `requestTemplate` and a given URL\\nor an object that specifies ${@link Request} properties. In case of a collision\\nthe properties will override the template, except for `userData`, which will\\nbe merged together, with the `userData` property having preference over the template.\\nThis enables dynamic overriding of the template."},"parameters":[{"id":1608,"name":"urlOrProps","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","id":1649,"name":"RequestOptions"}]}}],"type":{"type":"reference","id":1626,"name":"Request"}}]},{"id":1603,"name":"matches","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/pseudo_url.ts","line":131,"character":4}],"signatures":[{"id":1604,"name":"matches","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Determines whether a URL matches this pseudo-URL pattern.","returns":"Returns `true` if given URL matches pseudo-URL.\\n"},"parameters":[{"id":1605,"name":"url","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"URL to be matched."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}]}],"groups":[{"title":"Constructors","kind":512,"children":[1597]},{"title":"Properties","kind":1024,"children":[1602]},{"title":"Methods","kind":2048,"children":[1606,1603]}],"sources":[{"fileName":"packages/core/src/pseudo_url.ts","line":100,"character":13}],"permalink":"/apify-ts/api/next/core/class/PseudoUrl","previousId":1686,"nextId":1626},{"id":1626,"name":"Request","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"Represents a URL to be crawled, optionally including HTTP method, headers, payload and other metadata.\\nThe `Request` object also stores information about errors that occurred during processing of the request.","text":"Each `Request` instance has the `uniqueKey` property, which can be either specified\\nmanually in the constructor or generated automatically from the URL. Two requests with the same `uniqueKey`\\nare considered as pointing to the same web resource. This behavior applies to all Apify SDK classes,\\nsuch as {@link RequestList}, {@link RequestQueue}, {@link PuppeteerCrawler} or {@link PlaywrightCrawler}.\\n\\nExample use:\\n\\n```javascript\\nconst request = new Apify.Request({\\n    url: \'http://www.example.com\',\\n    headers: { Accept: \'application/json\' },\\n});\\n\\n...\\n\\nrequest.userData.foo = \'bar\';\\nrequest.pushErrorMessage(new Error(\'Request failed!\'));\\n\\n...\\n\\nconst foo = request.userData.foo;\\n```"},"children":[{"id":1627,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/request.ts","line":118,"character":4}],"signatures":[{"id":1628,"name":"new Request","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"`Request` parameters including the URL, HTTP method and headers, and others."},"parameters":[{"id":1629,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1649,"name":"RequestOptions"}}],"type":{"type":"reference","id":1626,"name":"Request"}}]},{"id":1638,"name":"errorMessages","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"An array of error messages from request processing."},"sources":[{"fileName":"packages/core/src/request.ts","line":101,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":1641,"name":"handledAt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"ISO datetime string that indicates the time when the request has been processed.\\nIs `null` if the request has not been crawled yet."},"sources":[{"fileName":"packages/core/src/request.ts","line":113,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1639,"name":"headers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Object with HTTP headers. Key is header name, value is the value."},"sources":[{"fileName":"packages/core/src/request.ts","line":104,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"id":1630,"name":"id","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Request ID"},"sources":[{"fileName":"packages/core/src/request.ts","line":67,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1632,"name":"loadedUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An actually loaded URL after redirects, if present. HTTP redirects are guaranteed\\nto be included.","text":"When using {@link PuppeteerCrawler} or {@link PlaywrightCrawler}, meta tag and JavaScript redirects may,\\nor may not be included, depending on their nature. This generally means that redirects,\\nwhich happen immediately will most likely be included, but delayed redirects will not.\\n"},"sources":[{"fileName":"packages/core/src/request.ts","line":80,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1634,"name":"method","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"HTTP method, e.g. `GET` or `POST`."},"sources":[{"fileName":"packages/core/src/request.ts","line":89,"character":4}],"type":{"type":"reference","qualifiedName":"AllowedHttpMethods","package":"apify-client","name":"AllowedHttpMethods"}},{"id":1636,"name":"noRetry","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The `true` value indicates that the request will not be automatically retried on error."},"sources":[{"fileName":"packages/core/src/request.ts","line":95,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1635,"name":"payload","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"HTTP request payload, e.g. for POST requests."},"sources":[{"fileName":"packages/core/src/request.ts","line":92,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1637,"name":"retryCount","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Indicates the number of times the crawling of the request has been retried on error."},"sources":[{"fileName":"packages/core/src/request.ts","line":98,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":1633,"name":"uniqueKey","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A unique key identifying the request.\\nTwo requests with the same `uniqueKey` are considered as pointing to the same URL."},"sources":[{"fileName":"packages/core/src/request.ts","line":86,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1631,"name":"url","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"URL of the web page to crawl."},"sources":[{"fileName":"packages/core/src/request.ts","line":70,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1640,"name":"userData","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Custom user data assigned to the request."},"sources":[{"fileName":"packages/core/src/request.ts","line":107,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"id":1642,"name":"pushErrorMessage","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/request.ts","line":189,"character":4}],"signatures":[{"id":1643,"name":"pushErrorMessage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Stores information about an error that occurred during processing of this request.","text":"You should always use Error instances when throwing errors in JavaScript.\\n\\nNevertheless, to improve the debugging experience when using third party libraries\\nthat may not always throw an Error instance, the function performs a type\\ninspection of the passed argument and attempts to extract as much information\\nas possible, since just throwing a bad type error makes any debugging rather difficult.\\n"},"parameters":[{"id":1644,"name":"errorOrMessage","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Error object or error message to be stored in the request."},"type":{"type":"intrinsic","name":"unknown"}},{"id":1645,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1660,"name":"PushErrorMessageOptions"},"defaultValue":"{}"}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Constructors","kind":512,"children":[1627]},{"title":"Properties","kind":1024,"children":[1638,1641,1639,1630,1632,1634,1636,1635,1637,1633,1631,1640]},{"title":"Methods","kind":2048,"children":[1642]}],"sources":[{"fileName":"packages/core/src/request.ts","line":65,"character":13}],"permalink":"/apify-ts/api/next/core/class/Request","previousId":1596,"nextId":1158},{"id":1158,"name":"RequestList","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"Represents a static list of URLs to crawl.\\nThe URLs can be provided either in code or parsed from a text file hosted on the web.\\n`RequestList` is used by {@link BasicCrawler}, {@link CheerioCrawler}, {@link PuppeteerCrawler}\\nand {@link PlaywrightCrawler} as a source of URLs to crawl.","text":"Each URL is represented using an instance of the {@link Request} class.\\nThe list can only contain unique URLs. More precisely, it can only contain `Request` instances\\nwith distinct `uniqueKey` properties. By default, `uniqueKey` is generated from the URL, but it can also be overridden.\\nTo add a single URL to the list multiple times, corresponding {@link Request} objects will need to have different\\n`uniqueKey` properties. You can use the `keepDuplicateUrls` option to do this for you when initializing the\\n`RequestList` from sources.\\n\\nOnce you create an instance of `RequestList`, you need to call the {@link RequestList.initialize} function\\nbefore the instance can be used. After that, no more URLs can be added to the list.\\nUnlike {@link RequestQueue}, `RequestList` is static but it can contain even millions of URLs.\\n> Note that `RequestList` can be used together with `RequestQueue` by the same crawler.\\n> In such cases, each request from `RequestList` is enqueued into `RequestQueue` first and then consumed from the latter.\\n> This is necessary to avoid the same URL being processed more than once (from the list first and then possibly from the queue).\\n> In practical terms, such a combination can be useful when there is a large number of initial URLs,\\n> but more URLs would be added dynamically by the crawler.\\n\\n`RequestList` has an internal state where it stores information about which requests were already handled,\\nwhich are in progress and which were reclaimed. The state may be automatically persisted to the default\\n{@link KeyValueStore} by setting the `persistStateKey` option so that if the Node.js process is restarted,\\nthe crawling can continue where it left off. The automated persisting is launched upon receiving the `persistState`\\nevent that is periodically emitted by {@link events|Apify.events}.\\n\\nThe internal state is closely tied to the provided sources (URLs). If the sources change on actor restart, the state will become corrupted and\\n`RequestList` will raise an exception. This typically happens when the sources is a list of URLs downloaded from the web.\\nIn such case, use the `persistRequestsKey` option in conjunction with `persistStateKey`,\\nto make the `RequestList` store the initial sources to the default key-value store and load them after restart,\\nwhich will prevent any issues that a live list of URLs might cause.\\n\\n**Basic usage:**\\n```javascript\\n// Use a helper function to simplify request list initialization.\\n// State and sources are automatically persisted. This is a preferred usage.\\nconst requestList = await Apify.openRequestList(\'my-request-list\', [\\n    \'http://www.example.com/page-1\',\\n    { url: \'http://www.example.com/page-2\', method: \'POST\', userData: { foo: \'bar\' }},\\n    { requestsFromUrl: \'http://www.example.com/my-url-list.txt\', userData: { isFromUrl: true } },\\n]);\\n```\\n\\n**Advanced usage:**\\n```javascript\\n// Use the constructor to get more control over the initialization.\\nconst requestList = new Apify.RequestList({\\n    sources: [\\n        // Separate requests\\n        { url: \'http://www.example.com/page-1\', method: \'GET\', headers: { ... } },\\n        { url: \'http://www.example.com/page-2\', userData: { foo: \'bar\' }},\\n\\n        // Bulk load of URLs from file `http://www.example.com/my-url-list.txt`\\n        // Note that all URLs must start with http:// or https://\\n        { requestsFromUrl: \'http://www.example.com/my-url-list.txt\', userData: { isFromUrl: true } },\\n    ],\\n\\n    // Persist the state to avoid re-crawling which can lead to data duplications.\\n    // Keep in mind that the sources have to be immutable or this will throw an error.\\n    persistStateKey: \'my-state\',\\n});\\n\\nawait requestList.initialize();\\n```"},"children":[{"id":1164,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":279,"character":4}],"signatures":[{"id":1165,"name":"new RequestList","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{},"parameters":[{"id":1166,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"All `RequestList` configuration options\\n"},"type":{"type":"reference","id":1151,"name":"RequestListOptions"},"defaultValue":"{}"}],"type":{"type":"reference","id":1158,"name":"RequestList"}}]},{"id":1205,"name":"fetchNextRequest","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":562,"character":10}],"signatures":[{"id":1206,"name":"fetchNextRequest","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the next {@link Request} to process. First, the function gets a request previously reclaimed\\nusing the {@link RequestList.reclaimRequest} function, if there is any.\\nOtherwise it gets the next request from sources.","text":"The function\'s `Promise` resolves to `null` if there are no more\\nrequests to process.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":1626,"name":"Request"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1199,"name":"getState","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":522,"character":4}],"signatures":[{"id":1200,"name":"getState","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns an object representing the internal state of the `RequestList` instance.\\nNote that the object\'s fields can change in future releases."},"type":{"type":"reference","id":1241,"name":"RequestListState"}}]},{"id":1233,"name":"handledCount","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":738,"character":4}],"signatures":[{"id":1234,"name":"handledCount","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns number of handled requests."},"type":{"type":"intrinsic","name":"number"}}]},{"id":1183,"name":"initialize","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":321,"character":10}],"signatures":[{"id":1184,"name":"initialize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Loads all remote sources of URLs and potentially starts periodic state persistence.\\nThis function must be called before you can start using the instance in a meaningful way."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1201,"name":"isEmpty","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":539,"character":10}],"signatures":[{"id":1202,"name":"isEmpty","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Resolves to `true` if the next call to {@link RequestList.fetchNextRequest} function\\nwould return `null`, otherwise it resolves to `false`.\\nNote that even if the list is empty, there might be some pending requests currently being processed."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1203,"name":"isFinished","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":548,"character":10}],"signatures":[{"id":1204,"name":"isFinished","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns `true` if all requests were already handled and there are no more left."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1231,"name":"length","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":729,"character":4}],"signatures":[{"id":1232,"name":"length","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the total number of unique requests present in the `RequestList`."},"type":{"type":"intrinsic","name":"number"}}]},{"id":1207,"name":"markRequestHandled","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":588,"character":10}],"signatures":[{"id":1208,"name":"markRequestHandled","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Marks request as handled after successful processing."},"parameters":[{"id":1209,"name":"request","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1626,"name":"Request"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1190,"name":"persistState","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":413,"character":10}],"signatures":[{"id":1191,"name":"persistState","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Persists the current state of the `RequestList` into the default {@link KeyValueStore}.\\nThe state is persisted automatically in regular intervals, but calling this method manually\\nis useful in cases where you want to have the most current state available after you pause\\nor stop fetching its requests. For example after you pause or abort a crawl. Or just before\\na server migration."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1210,"name":"reclaimRequest","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":603,"character":10}],"signatures":[{"id":1211,"name":"reclaimRequest","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Reclaims request to the list if its processing failed.\\nThe request will become available in the next `this.fetchNextRequest()`."},"parameters":[{"id":1212,"name":"request","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1626,"name":"Request"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1159,"name":"open","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":797,"character":17}],"signatures":[{"id":1160,"name":"open","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens a request list and returns a promise resolving to an instance\\nof the {@link RequestList} class that is already initialized.","text":"{@link RequestList} represents a list of URLs to crawl, which is always stored in memory.\\nTo enable picking up where left off after a process restart, the request list sources\\nare persisted to the key-value store at initialization of the list. Then, while crawling,\\na small state object is regularly persisted to keep track of the crawling status.\\n\\nFor more details and code examples, see the {@link RequestList} class.\\n\\n**Example usage:**\\n\\n```javascript\\nconst sources = [\\n    \'https://www.example.com\',\\n    \'https://www.google.com\',\\n    \'https://www.bing.com\'\\n];\\n\\nconst requestList = await Apify.openRequestList(\'my-name\', sources);\\n```\\n"},"parameters":[{"id":1161,"name":"listName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  Name of the request list to be opened. Setting a name enables the `RequestList`\'s state to be persisted\\n  in the key-value store. This is useful in case of a restart or migration. Since `RequestList` is only\\n  stored in memory, a restart or migration wipes it clean. Setting a name will enable the `RequestList`\'s\\n  state to survive those situations and continue where it left off.\\n\\n  The name will be used as a prefix in key-value store, producing keys such as `NAME-REQUEST_LIST_STATE`\\n  and `NAME-REQUEST_LIST_SOURCES`.\\n\\n  If `null`, the list will not be persisted and will only be stored in memory. Process restart\\n  will then cause the list to be crawled again from the beginning. We suggest always using a name."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":1162,"name":"sources","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n An array of sources of URLs for the {@link RequestList}. It can be either an array of strings,\\n plain objects that define at least the `url` property, or an array of {@link Request} instances.\\n\\n **IMPORTANT:** The `sources` array will be consumed (left empty) after {@link RequestList} initializes.\\n This is a measure to prevent memory leaks in situations when millions of sources are\\n added.\\n\\n Additionally, the `requestsFromUrl` property may be used instead of `url`,\\n which will instruct {@link RequestList} to download the source URLs from a given remote location.\\n The URLs will be parsed from the received response. In this case you can limit the URLs\\n using `regex` parameter containing regular expression pattern for URLs to be included.\\n\\n For details, see the {@link RequestListOptions.sources}"},"type":{"type":"array","elementType":{"type":"reference","id":1245,"name":"Source"}}},{"id":1163,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1151,"name":"RequestListOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1158,"name":"RequestList"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"groups":[{"title":"Constructors","kind":512,"children":[1164]},{"title":"Methods","kind":2048,"children":[1205,1199,1233,1183,1201,1203,1231,1207,1190,1210,1159]}],"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":227,"character":13}],"permalink":"/apify-ts/api/next/core/class/RequestList","previousId":1626,"nextId":1270},{"id":1270,"name":"RequestQueue","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"Represents a queue of URLs to crawl, which is used for deep crawling of websites\\nwhere you start with several URLs and then recursively\\nfollow links to other pages. The data structure supports both breadth-first and depth-first crawling orders.","text":"Each URL is represented using an instance of the {@link Request} class.\\nThe queue can only contain unique URLs. More precisely, it can only contain {@link Request} instances\\nwith distinct `uniqueKey` properties. By default, `uniqueKey` is generated from the URL, but it can also be overridden.\\nTo add a single URL multiple times to the queue,\\ncorresponding {@link Request} objects will need to have different `uniqueKey` properties.\\n\\nDo not instantiate this class directly, use the\\n{@link Apify.openRequestQueue} function instead.\\n\\n`RequestQueue` is used by {@link BasicCrawler}, {@link CheerioCrawler}, {@link PuppeteerCrawler}\\nand {@link PlaywrightCrawler} as a source of URLs to crawl.\\nUnlike {@link RequestList}, `RequestQueue` supports dynamic adding and removing of requests.\\nOn the other hand, the queue is not optimized for operations that add or remove a large number of URLs in a batch.\\n\\n`RequestQueue` stores its data either on local disk or in the Apify Cloud,\\ndepending on whether the `APIFY_LOCAL_STORAGE_DIR` or `APIFY_TOKEN` environment variable is set.\\n\\nIf the `APIFY_LOCAL_STORAGE_DIR` environment variable is set, the queue data is stored in\\nthat directory in an SQLite database file.\\n\\nIf the `APIFY_TOKEN` environment variable is set but `APIFY_LOCAL_STORAGE_DIR` is not, the data is stored in the\\n[Apify Request Queue](https://docs.apify.com/storage/request-queue)\\ncloud storage. Note that you can force usage of the cloud storage also by passing the `forceCloud`\\noption to {@link Apify.openRequestQueue} function,\\neven if the `APIFY_LOCAL_STORAGE_DIR` variable is set.\\n\\n**Example usage:**\\n\\n```javascript\\n// Open the default request queue associated with the actor run\\nconst queue = await Apify.openRequestQueue();\\n\\n// Open a named request queue\\nconst queueWithName = await Apify.openRequestQueue(\'some-name\');\\n\\n// Enqueue few requests\\nawait queue.addRequest({ url: \'http://example.com/aaa\' });\\nawait queue.addRequest({ url: \'http://example.com/bbb\' });\\nawait queue.addRequest({ url: \'http://example.com/foo/bar\' }, { forefront: true });\\n```"},"children":[{"id":1295,"name":"assumedHandledCount","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":182,"character":4}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"0"},{"id":1294,"name":"assumedTotalCount","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":181,"character":4}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"0"},{"id":1283,"name":"client","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":154,"character":4}],"type":{"type":"reference","qualifiedName":"RequestQueueClient","package":"apify-client","name":"RequestQueueClient"}},{"id":1282,"name":"clientKey","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":153,"character":4}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"id":1279,"name":"id","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":150,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1292,"name":"inProgress","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":172,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Set","package":"typescript","name":"Set"},"defaultValue":"..."},{"id":1281,"name":"isLocal","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":152,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1278,"name":"log","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":149,"character":4}],"type":{"type":"reference","id":2114,"qualifiedName":"Log","package":"@apify/log","name":"Log"},"defaultValue":"..."},{"id":1280,"name":"name","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":151,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1285,"name":"queryQueueHeadPromise","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":162,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1286,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1291,"name":"hadMultipleClients","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":167,"character":8}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1288,"name":"prevLimit","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":164,"character":8}],"type":{"type":"intrinsic","name":"number"}},{"id":1290,"name":"queryStartedAt","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":166,"character":8}],"type":{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}},{"id":1289,"name":"queueModifiedAt","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":165,"character":8}],"type":{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}},{"id":1287,"name":"wasLimitReached","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":163,"character":8}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","kind":1024,"children":[1291,1288,1290,1289,1287]}]}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}]},"defaultValue":"null"},{"id":1293,"name":"recentlyHandled","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":177,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"LruCache","package":"@apify/datastructures","name":"LruCache"},"defaultValue":"..."},{"id":1296,"name":"requestsCache","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":188,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"LruCache","package":"@apify/datastructures","name":"LruCache"},"defaultValue":"..."},{"id":1299,"name":"addRequest","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":223,"character":10}],"signatures":[{"id":1300,"name":"addRequest","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a request to the queue.","text":"If a request with the same `uniqueKey` property is already present in the queue,\\nit will not be updated. You can find out whether this happened from the resulting\\n{@link QueueOperationInfo} object.\\n\\nTo add multiple requests to the queue by extracting links from a webpage,\\nsee the {@link utils.enqueueLinks} helper function.\\n"},"parameters":[{"id":1301,"name":"requestLike","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"{@link Request} object or vanilla object with request data.\\nNote that the function sets the `uniqueKey` and `id` fields to the passed Request."},"type":{"type":"union","types":[{"type":"reference","id":1649,"name":"RequestOptions"},{"type":"reference","id":1626,"name":"Request"}]}},{"id":1302,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1268,"name":"RequestQueueOperationOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1264,"name":"QueueOperationInfo"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1332,"name":"drop","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":593,"character":10}],"signatures":[{"id":1333,"name":"drop","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Removes the queue either from the Apify Cloud storage or from the local database,\\ndepending on the mode of operation."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1306,"name":"fetchNextRequest","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":310,"character":10}],"signatures":[{"id":1307,"name":"fetchNextRequest","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a next request in the queue to be processed, or `null` if there are no more pending requests.","text":"Once you successfully finish processing of the request, you need to call\\n{@link RequestQueue.markRequestHandled}\\nto mark the request as handled in the queue. If there was some error in processing the request,\\ncall {@link RequestQueue.reclaimRequest} instead,\\nso that the queue will give the request to some other consumer in another call to the `fetchNextRequest` function.\\n\\nNote that the `null` return value doesn\'t mean the queue processing finished,\\nit means there are currently no pending requests.\\nTo check whether all requests in queue were finished,\\nuse {@link RequestQueue.isFinished} instead.\\n","returns":"\\n  Returns the request object or `null` if there are no more pending requests.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":1626,"name":"Request"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1336,"name":"getInfo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":638,"character":10}],"signatures":[{"id":1337,"name":"getInfo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns an object containing general information about the request queue.","text":"The function returns the same object as the Apify API Client\'s\\n[getQueue](https://docs.apify.com/api/apify-client-js/latest#ApifyClient-requestQueues)\\nfunction, which in turn calls the\\n[Get request queue](https://apify.com/docs/api/v2#/reference/request-queues/queue/get-request-queue)\\nAPI endpoint.\\n\\n**Example:**\\n```\\n{\\n  id: \\"WkzbQMuFYuamGv3YF\\",\\n  name: \\"my-queue\\",\\n  userId: \\"wRsJZtadYvn4mBZmm\\",\\n  createdAt: new Date(\\"2015-12-12T07:34:14.202Z\\"),\\n  modifiedAt: new Date(\\"2015-12-13T08:36:13.202Z\\"),\\n  accessedAt: new Date(\\"2015-12-14T08:36:13.202Z\\"),\\n  totalRequestCount: 25,\\n  handledRequestCount: 5,\\n  pendingRequestCount: 20,\\n}\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"RequestQueue","package":"apify-client","name":"RequestQueue"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1303,"name":"getRequest","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":274,"character":10}],"signatures":[{"id":1304,"name":"getRequest","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the request from the queue specified by ID.","returns":"Returns the request object, or `null` if it was not found.\\n"},"parameters":[{"id":1305,"name":"id","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"ID of the request."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":1626,"name":"Request"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1334,"name":"handledCount","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":608,"character":10}],"signatures":[{"id":1335,"name":"handledCount","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the number of handled requests.","text":"This function is just a convenient shortcut for:\\n\\n```javascript\\nconst { handledRequestCount } = await queue.getInfo();\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1315,"name":"isEmpty","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":457,"character":10}],"signatures":[{"id":1316,"name":"isEmpty","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Resolves to `true` if the next call to {@link RequestQueue.fetchNextRequest}\\nwould return `null`, otherwise it resolves to `false`.\\nNote that even if the queue is empty, there might be some pending requests currently being processed.\\nIf you need to ensure that there is no activity in the queue, use {@link RequestQueue.isFinished}."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1317,"name":"isFinished","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":468,"character":10}],"signatures":[{"id":1318,"name":"isFinished","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Resolves to `true` if all requests were already handled and there are no more left.\\nDue to the nature of distributed storage used by the queue,\\nthe function might occasionally return a false negative,\\nbut it will never return a false positive."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1308,"name":"markRequestHandled","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":373,"character":10}],"signatures":[{"id":1309,"name":"markRequestHandled","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Marks a request that was previously returned by the\\n{@link RequestQueue.fetchNextRequest}\\nfunction as handled after successful processing.\\nHandled requests will never again be returned by the `fetchNextRequest` function."},"parameters":[{"id":1310,"name":"request","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1626,"name":"Request"}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":1264,"name":"QueueOperationInfo"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1311,"name":"reclaimRequest","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":407,"character":10}],"signatures":[{"id":1312,"name":"reclaimRequest","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Reclaims a failed request back to the queue, so that it can be returned for processing later again\\nby another call to {@link RequestQueue.fetchNextRequest}.\\nThe request record in the queue is updated using the provided `request` parameter.\\nFor example, this lets you store the number of retries or error messages for the request."},"parameters":[{"id":1313,"name":"request","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1626,"name":"Request"}},{"id":1314,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1268,"name":"RequestQueueOperationOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":1264,"name":"QueueOperationInfo"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":1271,"name":"open","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":658,"character":17}],"signatures":[{"id":1272,"name":"open","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens a request queue and returns a promise resolving to an instance\\nof the {@link RequestQueue} class.","text":"{@link RequestQueue} represents a queue of URLs to crawl, which is stored either on local filesystem or in the cloud.\\nThe queue is used for deep crawling of websites, where you start with several URLs and then\\nrecursively follow links to other pages. The data structure supports both breadth-first\\nand depth-first crawling orders.\\n\\nFor more details and code examples, see the {@link RequestQueue} class.\\n"},"parameters":[{"id":1273,"name":"queueIdOrName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":1274,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":1427,"name":"StorageManagerOptions"},{"type":"literal","value":"config"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1270,"name":"RequestQueue"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"groups":[{"title":"Properties","kind":1024,"children":[1295,1294,1283,1282,1279,1292,1281,1278,1280,1285,1293,1296]},{"title":"Methods","kind":2048,"children":[1299,1332,1306,1336,1303,1334,1315,1317,1308,1311,1271]}],"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":148,"character":13}],"permalink":"/apify-ts/api/next/core/class/RequestQueue","previousId":1158,"nextId":701},{"id":701,"name":"Session","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"Sessions are used to store information such as cookies and can be used for generating fingerprints and proxy sessions.\\nYou can imagine each session as a specific user, with its own cookies, IP (via proxy) and potentially a unique browser fingerprint.\\nSession internal state can be enriched with custom user data for example some authorization tokens and specific headers in general."},"children":[{"id":702,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":119,"character":4}],"signatures":[{"id":703,"name":"new Session","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Session configuration."},"parameters":[{"id":704,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":687,"name":"SessionOptions"}}],"type":{"type":"reference","id":701,"name":"Session"}}]},{"id":705,"name":"id","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":102,"character":13}],"type":{"type":"intrinsic","name":"string"}},{"id":707,"name":"userData","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":104,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}},{"id":751,"name":"getCookieString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":334,"character":4}],"signatures":[{"id":752,"name":"getCookieString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns cookies saved with the session in the typical\\nkey1=value1; key2=value2 format, ready to be used in\\na cookie header or elsewhere.","returns":"Represents `Cookie` header.\\n"},"parameters":[{"id":753,"name":"url","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":748,"name":"getPuppeteerCookies","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":323,"character":4}],"signatures":[{"id":749,"name":"getPuppeteerCookies","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns cookies in a format compatible with puppeteer and ready to be used with `page.setCookie`."},"parameters":[{"id":750,"name":"url","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"website url. Only cookies stored for this url will be returned\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"reference","id":675,"name":"PuppeteerCookie"}}}]},{"id":728,"name":"getState","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":224,"character":4}],"signatures":[{"id":729,"name":"getState","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets session state for persistence in KeyValueStore.","returns":"Represents session internal state.\\n"},"type":{"type":"reference","id":676,"name":"SessionState"}}]},{"id":718,"name":"isBlocked","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":177,"character":4}],"signatures":[{"id":719,"name":"isBlocked","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Indicates whether the session is blocked.\\nSession is blocked once it reaches the `maxErrorScore`."},"type":{"type":"intrinsic","name":"boolean"}}]},{"id":720,"name":"isExpired","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":186,"character":4}],"signatures":[{"id":721,"name":"isExpired","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Indicates whether the session is expired.\\nSession expiration is determined by the `maxAgeSecs`.\\nOnce the session is older than `createdAt + maxAgeSecs` the session is considered expired."},"type":{"type":"intrinsic","name":"boolean"}}]},{"id":722,"name":"isMaxUsageCountReached","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":194,"character":4}],"signatures":[{"id":723,"name":"isMaxUsageCountReached","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Indicates whether the session is used maximum number of times.\\nSession maximum usage count can be changed by `maxUsageCount` parameter."},"type":{"type":"intrinsic","name":"boolean"}}]},{"id":724,"name":"isUsable","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":202,"character":4}],"signatures":[{"id":725,"name":"isUsable","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Indicates whether the session can be used for next requests.\\nSession is usable when it is not expired, not blocked and the maximum usage count has not be reached."},"type":{"type":"intrinsic","name":"boolean"}}]},{"id":732,"name":"markBad","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":259,"character":4}],"signatures":[{"id":733,"name":"markBad","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Increases usage and error count.\\nShould be used when the session has been used unsuccessfully. For example because of timeouts."},"type":{"type":"intrinsic","name":"void"}}]},{"id":726,"name":"markGood","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":210,"character":4}],"signatures":[{"id":727,"name":"markGood","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"This method should be called after a successful session usage.\\nIt increases `usageCount` and potentially lowers the `errorScore` by the `errorScoreDecrement`."},"type":{"type":"intrinsic","name":"void"}}]},{"id":730,"name":"retire","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":246,"character":4}],"signatures":[{"id":731,"name":"retire","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Marks session as blocked and emits event on the `SessionPool`\\nThis method should be used if the session usage was unsuccessful\\nand you are sure that it is because of the session configuration and not any external matters.\\nFor example when server returns 403 status code.\\nIf the session does not work due to some external factors as server error such as 5XX you probably want to use `markBad` method."},"type":{"type":"intrinsic","name":"void"}}]},{"id":734,"name":"retireOnBlockedStatusCodes","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":275,"character":4}],"signatures":[{"id":735,"name":"retireOnBlockedStatusCodes","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"With certain status codes: `401`, `403` or `429` we can be certain\\nthat the target website is blocking us. This function helps to do this conveniently\\nby retiring the session when such code is received. Optionally the default status\\ncodes can be extended in the second parameter.","returns":"Whether the session was retired.\\n"},"parameters":[{"id":736,"name":"statusCode","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"HTTP status code."},"type":{"type":"intrinsic","name":"number"}},{"id":737,"name":"blockedStatusCodes","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}},"defaultValue":"[]"}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":738,"name":"setCookiesFromResponse","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":290,"character":4}],"signatures":[{"id":739,"name":"setCookiesFromResponse","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Saves cookies from an HTTP response to be used with the session.\\nIt expects an object with a `headers` property that\'s either an `Object`\\n(typical Node.js responses) or a `Function` (Puppeteer Response).","text":"It then parses and saves the cookies from the `set-cookie` header, if available.\\n"},"parameters":[{"id":740,"name":"response","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","qualifiedName":"IncomingMessage","package":"@types/node","name":"IncomingMessage"},{"type":"reference","qualifiedName":"HTTPResponse","package":"puppeteer","name":"HTTPResponse"},{"type":"reflection","declaration":{"id":741,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":742,"name":"headers","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":290,"character":72}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}],"name":"Dictionary"}},{"id":743,"name":"url","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":290,"character":112}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[742,743]}]}}]}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":744,"name":"setPuppeteerCookies","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":314,"character":4}],"signatures":[{"id":745,"name":"setPuppeteerCookies","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Saves an array with cookie objects to be used with the session.\\nThe objects should be in the format that\\n[Puppeteer uses](https://pptr.dev/#?product=Puppeteer&version=v2.0.0&show=api-pagecookiesurls),\\nbut you can also use this function to set cookies manually:","text":"```\\n[\\n  { name: \'cookie1\', value: \'my-cookie\' },\\n  { name: \'cookie2\', value: \'your-cookie\' }\\n]\\n```\\n"},"parameters":[{"id":746,"name":"cookies","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","id":675,"name":"PuppeteerCookie"}}},{"id":747,"name":"url","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Constructors","kind":512,"children":[702]},{"title":"Properties","kind":1024,"children":[705,707]},{"title":"Methods","kind":2048,"children":[751,748,728,718,720,722,724,732,726,730,734,738,744]}],"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":101,"character":13}],"permalink":"/apify-ts/api/next/core/class/Session","previousId":1270,"nextId":786},{"id":786,"name":"SessionPool","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"Handles the rotation, creation and persistence of user-like sessions.\\nCreates a pool of {@link Session} instances, that are randomly rotated.\\nWhen some session is marked as blocked, it is removed and new one is created instead (the pool never returns an unusable session).\\nLearn more in the [`Session management guide`](../guides/session-management).","text":"You can create one by calling the {@link Apify.openSessionPool} function.\\n\\nSession pool is already integrated into crawlers, and it can significantly improve your scraper\\nperformance with just 2 lines of code.\\n\\n**Example usage:**\\n\\n```javascript\\nconst crawler = new Apify.CheerioCrawler({\\n    useSessionPool: true,\\n    persistCookiesPerSession: true,\\n    // ...\\n})\\n```\\n\\nYou can configure the pool with many options. See the {@link SessionPoolOptions}.\\nSession pool is by default persisted in default {@link KeyValueStore}.\\nIf you want to have one pool for all runs you have to specify\\n{@link SessionPoolOptions.persistStateKeyValueStoreId}.\\n\\n**Advanced usage:**\\n\\n```javascript\\nconst sessionPool = await Apify.openSessionPool({\\n    maxPoolSize: 25,\\n    sessionOptions:{\\n         maxAgeSecs: 10,\\n         maxUsageCount: 150, // for example when you know that the site blocks after 150 requests.\\n    },\\n    persistStateKeyValueStoreId: \'my-key-value-store-for-sessions\',\\n    persistStateKey: \'my-session-pool\',\\n});\\n\\n// Get random session from the pool\\nconst session1 = await sessionPool.getSession();\\nconst session2 = await sessionPool.getSession();\\nconst session3 = await sessionPool.getSession();\\n\\n// Now you can mark the session either failed or successful\\n\\n// Marks session as bad after unsuccessful usage -> it increases error count (soft retire)\\nsession1.markBad()\\n\\n// Marks as successful.\\nsession2.markGood()\\n\\n// Retires session -> session is removed from the pool\\nsession3.retire()\\n\\n```"},"children":[{"id":830,"name":"config","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"type":{"type":"reference","id":1453,"name":"Configuration"},"defaultValue":"..."},{"id":819,"name":"createSessionFunction","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":122,"character":4}],"type":{"type":"reference","id":772,"name":"CreateSession"}},{"id":823,"name":"forceCloud","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":126,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":820,"name":"keyValueStore","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":123,"character":4}],"type":{"type":"reference","id":1090,"name":"KeyValueStore"}},{"id":817,"name":"log","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":120,"character":4}],"type":{"type":"reference","id":2114,"qualifiedName":"Log","package":"@apify/log","name":"Log"}},{"id":818,"name":"maxPoolSize","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":121,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":826,"name":"persistStateKey","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":129,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":825,"name":"persistStateKeyValueStoreId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":128,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":822,"name":"sessionMap","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":125,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","id":701,"name":"Session"}],"qualifiedName":"Map","package":"typescript","name":"Map"},"defaultValue":"..."},{"id":824,"name":"sessionOptions","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":127,"character":4}],"type":{"type":"reference","id":687,"name":"SessionOptions"}},{"id":821,"name":"sessions","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":124,"character":4}],"type":{"type":"array","elementType":{"type":"reference","id":701,"name":"Session"}},"defaultValue":"[]"},{"id":810,"name":"captureRejectionSymbol","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":273,"character":24}],"type":{"type":"query","queryType":{"type":"reference","id":810,"qualifiedName":"EventEmitter.captureRejectionSymbol","package":"@types/node","name":"captureRejectionSymbol"}},"inheritedFrom":{"type":"reference","name":"EventEmitter.captureRejectionSymbol"}},{"id":811,"name":"captureRejections","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true},"comment":{"shortText":"Sets or gets the default captureRejection value for all emitters."},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":278,"character":15}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"EventEmitter.captureRejections"}},{"id":812,"name":"defaultMaxListeners","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":279,"character":15}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"EventEmitter.defaultMaxListeners"}},{"id":809,"name":"errorMonitor","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isReadonly":true},"comment":{"shortText":"This symbol shall be used to install a listener for only monitoring `\'error\'`\\nevents. Listeners installed using this symbol are called before the regular\\n`\'error\'` listeners are called.","text":"Installing a listener using this symbol does not change the behavior once an\\n`\'error\'` event is emitted, therefore the process will still crash if no\\nregular `\'error\'` listener is installed.\\n"},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":272,"character":24}],"type":{"type":"query","queryType":{"type":"reference","id":809,"qualifiedName":"EventEmitter.errorMonitor","package":"@types/node","name":"errorMonitor"}},"inheritedFrom":{"type":"reference","name":"EventEmitter.errorMonitor"}},{"id":833,"name":"retiredSessionsCount","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":195,"character":8}],"getSignature":[{"id":834,"name":"retiredSessionsCount","kind":524288,"kindString":"Get signature","flags":{},"comment":{"shortText":"Gets count of retired sessions in the pool."},"type":{"type":"intrinsic","name":"number"}}]},{"id":831,"name":"usableSessionsCount","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":188,"character":8}],"getSignature":[{"id":832,"name":"usableSessionsCount","kind":524288,"kindString":"Get signature","flags":{},"comment":{"shortText":"Gets count of usable sessions in the pool."},"type":{"type":"intrinsic","name":"number"}}]},{"id":877,"name":"addListener","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":878,"name":"addListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Alias for `emitter.on(eventName, listener)`.","tags":[{"tag":"since","text":"v0.1.26\\n"}]},"parameters":[{"id":879,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":880,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":881,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":882,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":883,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":786,"name":"SessionPool"},"inheritedFrom":{"type":"reference","name":"EventEmitter.addListener"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.addListener"}},{"id":837,"name":"addSession","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":225,"character":10}],"signatures":[{"id":838,"name":"addSession","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a new session to the session pool. The pool automatically creates sessions up to the maximum size of the pool,\\nbut this allows you to add more sessions once the max pool size is reached.\\nThis also allows you to add session with overridden session options (e.g. with specific session id)."},"parameters":[{"id":839,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","id":701,"name":"Session"},{"type":"reference","id":687,"name":"SessionOptions"}]},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":926,"name":"emit","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":927,"name":"emit","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Synchronously calls each of the listeners registered for the event named`eventName`, in the order they were registered, passing the supplied arguments\\nto each.","text":"Returns `true` if the event had listeners, `false` otherwise.\\n\\n```js\\nconst EventEmitter = require(\'events\');\\nconst myEmitter = new EventEmitter();\\n\\n// First listener\\nmyEmitter.on(\'event\', function firstListener() {\\n  console.log(\'Helloooo! first listener\');\\n});\\n// Second listener\\nmyEmitter.on(\'event\', function secondListener(arg1, arg2) {\\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\\n});\\n// Third listener\\nmyEmitter.on(\'event\', function thirdListener(...args) {\\n  const parameters = args.join(\', \');\\n  console.log(`event with parameters ${parameters} in third listener`);\\n});\\n\\nconsole.log(myEmitter.listeners(\'event\'));\\n\\nmyEmitter.emit(\'event\', 1, 2, 3, 4, 5);\\n\\n// Prints:\\n// [\\n//   [Function: firstListener],\\n//   [Function: secondListener],\\n//   [Function: thirdListener]\\n// ]\\n// Helloooo! first listener\\n// event with parameters 1, 2 in second listener\\n// event with parameters 1, 2, 3, 4, 5 in third listener\\n```","tags":[{"tag":"since","text":"v0.1.26\\n"}]},"parameters":[{"id":928,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":929,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"EventEmitter.emit"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.emit"}},{"id":947,"name":"eventNames","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":948,"name":"eventNames","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns an array listing the events for which the emitter has registered\\nlisteners. The values in the array are strings or `Symbol`s.","text":"```js\\nconst EventEmitter = require(\'events\');\\nconst myEE = new EventEmitter();\\nmyEE.on(\'foo\', () => {});\\nmyEE.on(\'bar\', () => {});\\n\\nconst sym = Symbol(\'symbol\');\\nmyEE.on(sym, () => {});\\n\\nconsole.log(myEE.eventNames());\\n// Prints: [ \'foo\', \'bar\', Symbol(symbol) ]\\n```","tags":[{"tag":"since","text":"v6.0.0\\n"}]},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},"inheritedFrom":{"type":"reference","name":"EventEmitter.eventNames"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.eventNames"}},{"id":918,"name":"getMaxListeners","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":919,"name":"getMaxListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns the current max listener value for the `EventEmitter` which is either\\nset by `emitter.setMaxListeners(n)` or defaults to {@link defaultMaxListeners}.","tags":[{"tag":"since","text":"v1.0.0\\n"}]},"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"EventEmitter.getMaxListeners"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.getMaxListeners"}},{"id":840,"name":"getSession","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":253,"character":10}],"signatures":[{"id":841,"name":"getSession","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets session.\\nIf there is space for new session, it creates and returns new session.\\nIf the session pool is full, it picks a session from the pool,\\nIf the picked session is usable it is returned, otherwise it creates and returns a new one."},"type":{"type":"reference","typeArguments":[{"type":"reference","id":701,"name":"Session"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}},{"id":842,"name":"getSession","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets session based on the provided session id or `undefined."},"parameters":[{"id":843,"name":"sessionId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":701,"name":"Session"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":844,"name":"getState","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":292,"character":4}],"signatures":[{"id":845,"name":"getState","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns an object representing the internal state of the `SessionPool` instance.\\nNote that the object\'s fields can change in future releases."},"type":{"type":"reflection","declaration":{"id":846,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":848,"name":"retiredSessionsCount","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"},"defaultValue":"..."},{"id":849,"name":"sessions","kind":1024,"kindString":"Property","flags":{},"type":{"type":"array","elementType":{"type":"reference","id":676,"name":"SessionState"}},"defaultValue":"..."},{"id":847,"name":"usableSessionsCount","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"},"defaultValue":"..."}],"groups":[{"title":"Properties","kind":1024,"children":[848,849,847]}]}}}]},{"id":835,"name":"initialize","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":203,"character":10}],"signatures":[{"id":836,"name":"initialize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Starts periodic state persistence and potentially loads SessionPool state from {@link KeyValueStore}.\\nIt is called automatically by the {@link Apify.openSessionPool} function."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":930,"name":"listenerCount","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":931,"name":"listenerCount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns the number of listeners listening to the event named `eventName`.","tags":[{"tag":"since","text":"v3.2.0"}]},"parameters":[{"id":932,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event being listened for\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"EventEmitter.listenerCount"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.listenerCount"}},{"id":920,"name":"listeners","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":921,"name":"listeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns a copy of the array of listeners for the event named `eventName`.","text":"```js\\nserver.on(\'connection\', (stream) => {\\n  console.log(\'someone connected!\');\\n});\\nconsole.log(util.inspect(server.listeners(\'connection\')));\\n// Prints: [ [Function] ]\\n```","tags":[{"tag":"since","text":"v0.1.26\\n"}]},"parameters":[{"id":922,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"array","elementType":{"type":"reference","qualifiedName":"Function","package":"typescript","name":"Function"}},"inheritedFrom":{"type":"reference","name":"EventEmitter.listeners"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.listeners"}},{"id":905,"name":"off","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":906,"name":"off","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Alias for `emitter.removeListener()`.","tags":[{"tag":"since","text":"v10.0.0\\n"}]},"parameters":[{"id":907,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":908,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":909,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":910,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":911,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":786,"name":"SessionPool"},"inheritedFrom":{"type":"reference","name":"EventEmitter.off"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.off"}},{"id":884,"name":"on","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":885,"name":"on","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Adds the `listener` function to the end of the listeners array for the\\nevent named `eventName`. No checks are made to see if the `listener` has\\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\\ntimes.","text":"```js\\nserver.on(\'connection\', (stream) => {\\n  console.log(\'someone connected!\');\\n});\\n```\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.\\n\\nBy default, event listeners are invoked in the order they are added. The`emitter.prependListener()` method can be used as an alternative to add the\\nevent listener to the beginning of the listeners array.\\n\\n```js\\nconst myEE = new EventEmitter();\\nmyEE.on(\'foo\', () => console.log(\'a\'));\\nmyEE.prependListener(\'foo\', () => console.log(\'b\'));\\nmyEE.emit(\'foo\');\\n// Prints:\\n//   b\\n//   a\\n```","tags":[{"tag":"since","text":"v0.1.101"}]},"parameters":[{"id":886,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":887,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The callback function\\n"},"type":{"type":"reflection","declaration":{"id":888,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":889,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":890,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":786,"name":"SessionPool"},"inheritedFrom":{"type":"reference","name":"EventEmitter.on"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.on"}},{"id":891,"name":"once","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":892,"name":"once","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Adds a **one-time**`listener` function for the event named `eventName`. The\\nnext time `eventName` is triggered, this listener is removed and then invoked.","text":"```js\\nserver.once(\'connection\', (stream) => {\\n  console.log(\'Ah, we have our first user!\');\\n});\\n```\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.\\n\\nBy default, event listeners are invoked in the order they are added. The`emitter.prependOnceListener()` method can be used as an alternative to add the\\nevent listener to the beginning of the listeners array.\\n\\n```js\\nconst myEE = new EventEmitter();\\nmyEE.once(\'foo\', () => console.log(\'a\'));\\nmyEE.prependOnceListener(\'foo\', () => console.log(\'b\'));\\nmyEE.emit(\'foo\');\\n// Prints:\\n//   b\\n//   a\\n```","tags":[{"tag":"since","text":"v0.3.0"}]},"parameters":[{"id":893,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":894,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The callback function\\n"},"type":{"type":"reflection","declaration":{"id":895,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":896,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":897,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":786,"name":"SessionPool"},"inheritedFrom":{"type":"reference","name":"EventEmitter.once"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.once"}},{"id":850,"name":"persistState","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":304,"character":10}],"signatures":[{"id":851,"name":"persistState","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Persists the current state of the `SessionPool` into the default {@link KeyValueStore}.\\nThe state is persisted automatically in regular intervals."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":933,"name":"prependListener","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":934,"name":"prependListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Adds the `listener` function to the _beginning_ of the listeners array for the\\nevent named `eventName`. No checks are made to see if the `listener` has\\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\\ntimes.","text":"```js\\nserver.prependListener(\'connection\', (stream) => {\\n  console.log(\'someone connected!\');\\n});\\n```\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.","tags":[{"tag":"since","text":"v6.0.0"}]},"parameters":[{"id":935,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":936,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The callback function\\n"},"type":{"type":"reflection","declaration":{"id":937,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":938,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":939,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":786,"name":"SessionPool"},"inheritedFrom":{"type":"reference","name":"EventEmitter.prependListener"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.prependListener"}},{"id":940,"name":"prependOnceListener","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":941,"name":"prependOnceListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Adds a **one-time**`listener` function for the event named `eventName` to the_beginning_ of the listeners array. The next time `eventName` is triggered, this\\nlistener is removed, and then invoked.","text":"```js\\nserver.prependOnceListener(\'connection\', (stream) => {\\n  console.log(\'Ah, we have our first user!\');\\n});\\n```\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.","tags":[{"tag":"since","text":"v6.0.0"}]},"parameters":[{"id":942,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":943,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The callback function\\n"},"type":{"type":"reflection","declaration":{"id":944,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":945,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":946,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":786,"name":"SessionPool"},"inheritedFrom":{"type":"reference","name":"EventEmitter.prependOnceListener"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.prependOnceListener"}},{"id":923,"name":"rawListeners","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":924,"name":"rawListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns a copy of the array of listeners for the event named `eventName`,\\nincluding any wrappers (such as those created by `.once()`).","text":"```js\\nconst emitter = new EventEmitter();\\nemitter.once(\'log\', () => console.log(\'log once\'));\\n\\n// Returns a new Array with a function `onceWrapper` which has a property\\n// `listener` which contains the original listener bound above\\nconst listeners = emitter.rawListeners(\'log\');\\nconst logFnWrapper = listeners[0];\\n\\n// Logs \\"log once\\" to the console and does not unbind the `once` event\\nlogFnWrapper.listener();\\n\\n// Logs \\"log once\\" to the console and removes the listener\\nlogFnWrapper();\\n\\nemitter.on(\'log\', () => console.log(\'log persistently\'));\\n// Will return a new Array with a single function bound by `.on()` above\\nconst newListeners = emitter.rawListeners(\'log\');\\n\\n// Logs \\"log persistently\\" twice\\nnewListeners[0]();\\nemitter.emit(\'log\');\\n```","tags":[{"tag":"since","text":"v9.4.0\\n"}]},"parameters":[{"id":925,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"array","elementType":{"type":"reference","qualifiedName":"Function","package":"typescript","name":"Function"}},"inheritedFrom":{"type":"reference","name":"EventEmitter.rawListeners"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.rawListeners"}},{"id":912,"name":"removeAllListeners","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":913,"name":"removeAllListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Removes all listeners, or those of the specified `eventName`.","text":"It is bad practice to remove listeners added elsewhere in the code,\\nparticularly when the `EventEmitter` instance was created by some other\\ncomponent or module (e.g. sockets or file streams).\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.","tags":[{"tag":"since","text":"v0.1.26\\n"}]},"parameters":[{"id":914,"name":"event","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"reference","id":786,"name":"SessionPool"},"inheritedFrom":{"type":"reference","name":"EventEmitter.removeAllListeners"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.removeAllListeners"}},{"id":898,"name":"removeListener","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":899,"name":"removeListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Removes the specified `listener` from the listener array for the event named`eventName`.","text":"```js\\nconst callback = (stream) => {\\n  console.log(\'someone connected!\');\\n};\\nserver.on(\'connection\', callback);\\n// ...\\nserver.removeListener(\'connection\', callback);\\n```\\n\\n`removeListener()` will remove, at most, one instance of a listener from the\\nlistener array. If any single listener has been added multiple times to the\\nlistener array for the specified `eventName`, then `removeListener()` must be\\ncalled multiple times to remove each instance.\\n\\nOnce an event is emitted, all listeners attached to it at the\\ntime of emitting are called in order. This implies that any`removeListener()` or `removeAllListeners()` calls _after_ emitting and_before_ the last listener finishes execution will\\nnot remove them from`emit()` in progress. Subsequent events behave as expected.\\n\\n```js\\nconst myEmitter = new MyEmitter();\\n\\nconst callbackA = () => {\\n  console.log(\'A\');\\n  myEmitter.removeListener(\'event\', callbackB);\\n};\\n\\nconst callbackB = () => {\\n  console.log(\'B\');\\n};\\n\\nmyEmitter.on(\'event\', callbackA);\\n\\nmyEmitter.on(\'event\', callbackB);\\n\\n// callbackA removes listener callbackB but it will still be called.\\n// Internal listener array at time of emit [callbackA, callbackB]\\nmyEmitter.emit(\'event\');\\n// Prints:\\n//   A\\n//   B\\n\\n// callbackB is now removed.\\n// Internal listener array [callbackA]\\nmyEmitter.emit(\'event\');\\n// Prints:\\n//   A\\n```\\n\\nBecause listeners are managed using an internal array, calling this will\\nchange the position indices of any listener registered _after_ the listener\\nbeing removed. This will not impact the order in which listeners are called,\\nbut it means that any copies of the listener array as returned by\\nthe `emitter.listeners()` method will need to be recreated.\\n\\nWhen a single function has been added as a handler multiple times for a single\\nevent (as in the example below), `removeListener()` will remove the most\\nrecently added instance. In the example the `once(\'ping\')`listener is removed:\\n\\n```js\\nconst ee = new EventEmitter();\\n\\nfunction pong() {\\n  console.log(\'pong\');\\n}\\n\\nee.on(\'ping\', pong);\\nee.once(\'ping\', pong);\\nee.removeListener(\'ping\', pong);\\n\\nee.emit(\'ping\');\\nee.emit(\'ping\');\\n```\\n\\nReturns a reference to the `EventEmitter`, so that calls can be chained.","tags":[{"tag":"since","text":"v0.1.26\\n"}]},"parameters":[{"id":900,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":901,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":902,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":903,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":904,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":786,"name":"SessionPool"},"inheritedFrom":{"type":"reference","name":"EventEmitter.removeListener"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.removeListener"}},{"id":915,"name":"setMaxListeners","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":916,"name":"setMaxListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"By default `EventEmitter`s will print a warning if more than `10` listeners are\\nadded for a particular event. This is a useful default that helps finding\\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.","text":"Returns a reference to the `EventEmitter`, so that calls can be chained.","tags":[{"tag":"since","text":"v0.3.5\\n"}]},"parameters":[{"id":917,"name":"n","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":786,"name":"SessionPool"},"inheritedFrom":{"type":"reference","name":"EventEmitter.setMaxListeners"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.setMaxListeners"}},{"id":852,"name":"teardown","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":316,"character":10}],"signatures":[{"id":853,"name":"teardown","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Removes listener from `persistState` event.\\nThis function should be called after you are done with using the `SessionPool` instance."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":805,"name":"getEventListeners","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":262,"character":15}],"signatures":[{"id":806,"name":"getEventListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns a copy of the array of listeners for the event named `eventName`.","text":"For `EventEmitter`s this behaves exactly the same as calling `.listeners` on\\nthe emitter.\\n\\nFor `EventTarget`s this is the only way to get the event listeners for the\\nevent target. This is useful for debugging and diagnostic purposes.\\n\\n```js\\nconst { getEventListeners, EventEmitter } = require(\'events\');\\n\\n{\\n  const ee = new EventEmitter();\\n  const listener = () => console.log(\'Events are fun\');\\n  ee.on(\'foo\', listener);\\n  getEventListeners(ee, \'foo\'); // [listener]\\n}\\n{\\n  const et = new EventTarget();\\n  const listener = () => console.log(\'Events are fun\');\\n  et.addEventListener(\'foo\', listener);\\n  getEventListeners(et, \'foo\'); // [listener]\\n}\\n```","tags":[{"tag":"since","text":"v15.2.0\\n"}]},"parameters":[{"id":807,"name":"emitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","qualifiedName":"global.NodeJS.EventEmitter","package":"@types/node","name":"EventEmitter"},{"type":"reference","qualifiedName":"DOMEventTarget","package":"@types/node","name":"DOMEventTarget"}]}},{"id":808,"name":"name","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"array","elementType":{"type":"reference","qualifiedName":"Function","package":"typescript","name":"Function"}},"inheritedFrom":{"type":"reference","name":"EventEmitter.getEventListeners"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.getEventListeners"}},{"id":801,"name":"listenerCount","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":234,"character":15}],"signatures":[{"id":802,"name":"listenerCount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.","text":"```js\\nconst { EventEmitter, listenerCount } = require(\'events\');\\nconst myEmitter = new EventEmitter();\\nmyEmitter.on(\'event\', () => {});\\nmyEmitter.on(\'event\', () => {});\\nconsole.log(listenerCount(myEmitter, \'event\'));\\n// Prints: 2\\n```","tags":[{"tag":"since","text":"v0.9.12"},{"tag":"deprecated","text":"Since v3.2.0 - Use `listenerCount` instead."}]},"parameters":[{"id":803,"name":"emitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The emitter to query"},"type":{"type":"reference","qualifiedName":"global.NodeJS.EventEmitter","package":"@types/node","name":"EventEmitter"}},{"id":804,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The event name\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"EventEmitter.listenerCount"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.listenerCount"}},{"id":796,"name":"on","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":217,"character":15}],"signatures":[{"id":797,"name":"on","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"```js\\nconst { on, EventEmitter } = require(\'events\');","text":"(async () => {\\n  const ee = new EventEmitter();\\n\\n  // Emit later on\\n  process.nextTick(() => {\\n    ee.emit(\'foo\', \'bar\');\\n    ee.emit(\'foo\', 42);\\n  });\\n\\n  for await (const event of on(ee, \'foo\')) {\\n    // The execution of this inner block is synchronous and it\\n    // processes one event at a time (even with await). Do not use\\n    // if concurrent execution is required.\\n    console.log(event); // prints [\'bar\'] [42]\\n  }\\n  // Unreachable here\\n})();\\n```\\n\\nReturns an `AsyncIterator` that iterates `eventName` events. It will throw\\nif the `EventEmitter` emits `\'error\'`. It removes all listeners when\\nexiting the loop. The `value` returned by each iteration is an array\\ncomposed of the emitted event arguments.\\n\\nAn `AbortSignal` can be used to cancel waiting on events:\\n\\n```js\\nconst { on, EventEmitter } = require(\'events\');\\nconst ac = new AbortController();\\n\\n(async () => {\\n  const ee = new EventEmitter();\\n\\n  // Emit later on\\n  process.nextTick(() => {\\n    ee.emit(\'foo\', \'bar\');\\n    ee.emit(\'foo\', 42);\\n  });\\n\\n  for await (const event of on(ee, \'foo\', { signal: ac.signal })) {\\n    // The execution of this inner block is synchronous and it\\n    // processes one event at a time (even with await). Do not use\\n    // if concurrent execution is required.\\n    console.log(event); // prints [\'bar\'] [42]\\n  }\\n  // Unreachable here\\n})();\\n\\nprocess.nextTick(() => ac.abort());\\n```","returns":"that iterates `eventName` events emitted by the `emitter`\\n","tags":[{"tag":"since","text":"v13.6.0, v12.16.0"}]},"parameters":[{"id":798,"name":"emitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"global.NodeJS.EventEmitter","package":"@types/node","name":"EventEmitter"}},{"id":799,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"shortText":"The name of the event being listened for"},"type":{"type":"intrinsic","name":"string"}},{"id":800,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"StaticEventEmitterOptions","package":"@types/node","name":"StaticEventEmitterOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"AsyncIterableIterator","package":"typescript","name":"AsyncIterableIterator"},"inheritedFrom":{"type":"reference","name":"EventEmitter.on"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.on"}},{"id":787,"name":"once","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":157,"character":15}],"signatures":[{"id":788,"name":"once","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\\nevent or that is rejected if the `EventEmitter` emits `\'error\'` while waiting.\\nThe `Promise` will resolve with an array of all the arguments emitted to the\\ngiven event.","text":"This method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special`\'error\'` event\\nsemantics and does not listen to the `\'error\'` event.\\n\\n```js\\nconst { once, EventEmitter } = require(\'events\');\\n\\nasync function run() {\\n  const ee = new EventEmitter();\\n\\n  process.nextTick(() => {\\n    ee.emit(\'myevent\', 42);\\n  });\\n\\n  const [value] = await once(ee, \'myevent\');\\n  console.log(value);\\n\\n  const err = new Error(\'kaboom\');\\n  process.nextTick(() => {\\n    ee.emit(\'error\', err);\\n  });\\n\\n  try {\\n    await once(ee, \'myevent\');\\n  } catch (err) {\\n    console.log(\'error happened\', err);\\n  }\\n}\\n\\nrun();\\n```\\n\\nThe special handling of the `\'error\'` event is only used when `events.once()`is used to wait for another event. If `events.once()` is used to wait for the\\n\'`error\'` event itself, then it is treated as any other kind of event without\\nspecial handling:\\n\\n```js\\nconst { EventEmitter, once } = require(\'events\');\\n\\nconst ee = new EventEmitter();\\n\\nonce(ee, \'error\')\\n  .then(([err]) => console.log(\'ok\', err.message))\\n  .catch((err) => console.log(\'error\', err.message));\\n\\nee.emit(\'error\', new Error(\'boom\'));\\n\\n// Prints: ok boom\\n```\\n\\nAn `AbortSignal` can be used to cancel waiting for the event:\\n\\n```js\\nconst { EventEmitter, once } = require(\'events\');\\n\\nconst ee = new EventEmitter();\\nconst ac = new AbortController();\\n\\nasync function foo(emitter, event, signal) {\\n  try {\\n    await once(emitter, event, { signal });\\n    console.log(\'event emitted!\');\\n  } catch (error) {\\n    if (error.name === \'AbortError\') {\\n      console.error(\'Waiting for the event was canceled!\');\\n    } else {\\n      console.error(\'There was an error\', error.message);\\n    }\\n  }\\n}\\n\\nfoo(ee, \'foo\', ac.signal);\\nac.abort(); // Abort waiting for the event\\nee.emit(\'foo\'); // Prints: Waiting for the event was canceled!\\n```","tags":[{"tag":"since","text":"v11.13.0, v10.16.0\\n"}]},"parameters":[{"id":789,"name":"emitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"NodeEventTarget","package":"@types/node","name":"NodeEventTarget"}},{"id":790,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":791,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"StaticEventEmitterOptions","package":"@types/node","name":"StaticEventEmitterOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","name":"EventEmitter.once"}},{"id":792,"name":"once","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":793,"name":"emitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"DOMEventTarget","package":"@types/node","name":"DOMEventTarget"}},{"id":794,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":795,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"StaticEventEmitterOptions","package":"@types/node","name":"StaticEventEmitterOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","name":"EventEmitter.once"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.once"}}],"groups":[{"title":"Properties","kind":1024,"children":[830,819,823,820,817,818,826,825,822,824,821,810,811,812,809]},{"title":"Accessors","kind":262144,"children":[833,831]},{"title":"Methods","kind":2048,"children":[877,837,926,947,918,840,844,835,930,920,905,884,891,850,933,940,923,912,898,915,852,805,801,796,787]}],"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":119,"character":13}],"extendedTypes":[{"type":"reference","qualifiedName":"EventEmitter","package":"@types/node","name":"EventEmitter"}],"permalink":"/apify-ts/api/next/core/class/SessionPool","previousId":701,"nextId":352},{"id":352,"name":"Snapshotter","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"Creates snapshots of system resources at given intervals and marks the resource\\nas either overloaded or not during the last interval. Keeps a history of the snapshots.\\nIt tracks the following resources: Memory, EventLoop, API and CPU.\\nThe class is used by the {@link AutoscaledPool} class.","text":"When running on the Apify platform, the CPU and memory statistics are provided by the platform,\\nas collected from the running Docker container. When running locally, `Snapshotter`\\nmakes its own statistics by querying the OS.\\n\\nCPU becomes overloaded locally when its current use exceeds the `maxUsedCpuRatio` option or\\nwhen Apify platform marks it as overloaded.\\n\\nMemory becomes overloaded if its current use exceeds the `maxUsedMemoryRatio` option.\\nIt\'s computed using the total memory available to the container when running on\\nthe Apify platform and a quarter of total system memory when running locally.\\nMax total memory when running locally may be overridden by using the `APIFY_MEMORY_MBYTES`\\nenvironment variable.\\n\\nEvent loop becomes overloaded if it slows down by more than the `maxBlockedMillis` option.\\n\\nClient becomes overloaded when rate limit errors (429 - Too Many Requests),\\ntypically received from the request queue, exceed the set limit within the set interval."},"children":[{"id":353,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":144,"character":4}],"signatures":[{"id":354,"name":"new Snapshotter","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{},"parameters":[{"id":355,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":341,"name":"SnapshotterOptions"},"defaultValue":"{}"}],"type":{"type":"reference","id":352,"name":"Snapshotter"}}]},{"id":373,"name":"clientInterval","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":136,"character":4}],"type":{"type":"reference","qualifiedName":"BetterIntervalID","package":"@apify/utilities","name":"BetterIntervalID"},"defaultValue":"..."},{"id":359,"name":"clientSnapshotIntervalMillis","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":120,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":370,"name":"clientSnapshots","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":132,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"ClientSnapshot"}},"defaultValue":"[]"},{"id":374,"name":"cpuInterval","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":137,"character":4}],"type":{"type":"reference","qualifiedName":"BetterIntervalID","package":"@apify/utilities","name":"BetterIntervalID"},"defaultValue":"..."},{"id":360,"name":"cpuSnapshotIntervalMillis","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":121,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":367,"name":"cpuSnapshots","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":129,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CpuSnapshot"}},"defaultValue":"[]"},{"id":371,"name":"eventLoopInterval","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":134,"character":4}],"type":{"type":"reference","qualifiedName":"BetterIntervalID","package":"@apify/utilities","name":"BetterIntervalID"},"defaultValue":"..."},{"id":357,"name":"eventLoopSnapshotIntervalMillis","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":118,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":368,"name":"eventLoopSnapshots","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":130,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"EventLoopSnapshot"}},"defaultValue":"[]"},{"id":375,"name":"lastLoggedCriticalMemoryOverloadAt","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":139,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}]},"defaultValue":"null"},{"id":356,"name":"log","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":117,"character":4}],"type":{"type":"reference","id":2114,"qualifiedName":"Log","package":"@apify/log","name":"Log"}},{"id":362,"name":"maxBlockedMillis","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":123,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":365,"name":"maxClientErrors","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":126,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":366,"name":"maxMemoryBytes","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":127,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"number"}]}},{"id":364,"name":"maxUsedCpuRatio","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":125,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":363,"name":"maxUsedMemoryRatio","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":124,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":372,"name":"memoryInterval","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":135,"character":4}],"type":{"type":"reference","qualifiedName":"BetterIntervalID","package":"@apify/utilities","name":"BetterIntervalID"},"defaultValue":"..."},{"id":358,"name":"memorySnapshotIntervalMillis","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":119,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":369,"name":"memorySnapshots","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":131,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"MemorySnapshot"}},"defaultValue":"[]"},{"id":361,"name":"snapshotHistoryMillis","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":122,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":389,"name":"getClientSample","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":249,"character":4}],"signatures":[{"id":390,"name":"getClientSample","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a sample of latest Client snapshots, with the size of the sample defined\\nby the sampleDurationMillis parameter. If omitted, it returns a full snapshot history."},"parameters":[{"id":391,"name":"sampleDurationMillis","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"reference","name":"ClientSnapshot"}}}]},{"id":386,"name":"getCpuSample","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":241,"character":4}],"signatures":[{"id":387,"name":"getCpuSample","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a sample of latest CPU snapshots, with the size of the sample defined\\nby the sampleDurationMillis parameter. If omitted, it returns a full snapshot history."},"parameters":[{"id":388,"name":"sampleDurationMillis","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"reference","name":"CpuSnapshot"}}}]},{"id":383,"name":"getEventLoopSample","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":233,"character":4}],"signatures":[{"id":384,"name":"getEventLoopSample","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a sample of latest event loop snapshots, with the size of the sample defined\\nby the sampleDurationMillis parameter. If omitted, it returns a full snapshot history."},"parameters":[{"id":385,"name":"sampleDurationMillis","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"reference","name":"EventLoopSnapshot"}}}]},{"id":380,"name":"getMemorySample","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":225,"character":4}],"signatures":[{"id":381,"name":"getMemorySample","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a sample of latest memory snapshots, with the size of the sample defined\\nby the sampleDurationMillis parameter. If omitted, it returns a full snapshot history."},"parameters":[{"id":382,"name":"sampleDurationMillis","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"reference","name":"MemorySnapshot"}}}]},{"id":376,"name":"start","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":192,"character":10}],"signatures":[{"id":377,"name":"start","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Starts capturing snapshots at configured intervals."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":378,"name":"stop","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":210,"character":10}],"signatures":[{"id":379,"name":"stop","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Stops all resource capturing."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"groups":[{"title":"Constructors","kind":512,"children":[353]},{"title":"Properties","kind":1024,"children":[373,359,370,374,360,367,371,357,368,375,356,362,365,366,364,363,372,358,369,361]},{"title":"Methods","kind":2048,"children":[389,386,383,380,376,378]}],"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":116,"character":13}],"permalink":"/apify-ts/api/next/core/class/Snapshotter","previousId":786,"nextId":536},{"id":536,"name":"Statistics","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"The statistics class provides an interface to collecting and logging run\\nstatistics for requests.","text":"All statistic information is saved on key value store\\nunder the key `SDK_CRAWLER_STATISTICS_*`, persists between\\nmigrations and abort/resurrect\\n"},"children":[{"id":541,"name":"id","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"shortText":"Statistic instance id."},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":47,"character":13}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"..."},{"id":543,"name":"requestRetryHistogram","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"shortText":"Contains the current retries histogram. Index 0 means 0 retries, index 2, 2 retries, and so on"},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":57,"character":13}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}},"defaultValue":"[]"},{"id":542,"name":"state","kind":1024,"kindString":"Property","flags":{"isPublic":true},"comment":{"shortText":"Current statistic state used for doing calculations on {@link Statistics.calculate} calls"},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":52,"character":11}],"type":{"type":"reference","id":612,"name":"StatisticState"}},{"id":566,"name":"calculate","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":161,"character":4}],"signatures":[{"id":567,"name":"calculate","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Calculate the current statistics"},"type":{"type":"reflection","declaration":{"id":568,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":575,"name":"crawlerRuntimeMillis","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"},"defaultValue":"totalMillis"},{"id":569,"name":"requestAvgFailedDurationMillis","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"},"defaultValue":"..."},{"id":570,"name":"requestAvgFinishedDurationMillis","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"},"defaultValue":"..."},{"id":573,"name":"requestTotalDurationMillis","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"},"defaultValue":"..."},{"id":572,"name":"requestsFailedPerMinute","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"},"defaultValue":"..."},{"id":571,"name":"requestsFinishedPerMinute","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"},"defaultValue":"..."},{"id":574,"name":"requestsTotal","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"},"defaultValue":"..."}],"groups":[{"title":"Properties","kind":1024,"children":[575,569,570,573,572,571,574]}]}}}]},{"id":583,"name":"persistState","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":227,"character":10}],"signatures":[{"id":584,"name":"persistState","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Persist internal state to the key value store"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":555,"name":"reset","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":94,"character":4}],"signatures":[{"id":556,"name":"reset","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Set the current statistic instance to pristine values"},"type":{"type":"intrinsic","name":"void"}}]},{"id":576,"name":"startCapturing","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":186,"character":10}],"signatures":[{"id":577,"name":"startCapturing","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Initializes the key value store for persisting the statistics,\\ndisplaying the current state in predefined intervals"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":578,"name":"stopCapturing","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":208,"character":10}],"signatures":[{"id":579,"name":"stopCapturing","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Stops logging and remove event listeners, then persist"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":589,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":295,"character":4}],"signatures":[{"id":590,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Make this class serializable when called with `JSON.stringify(statsInstance)` directly\\nor through `keyValueStore.setValue(\'KEY\', statsInstance)`"},"type":{"type":"reference","id":591,"name":"StatisticPersistedState"}}]}],"groups":[{"title":"Properties","kind":1024,"children":[541,543,542]},{"title":"Methods","kind":2048,"children":[566,583,555,576,578,589]}],"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":41,"character":13}],"permalink":"/apify-ts/api/next/core/class/Statistics","previousId":352,"nextId":462},{"id":462,"name":"SystemStatus","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"Provides a simple interface to reading system status from a {@link Snapshotter} instance.\\nIt only exposes two functions {@link SystemStatus.getCurrentStatus}\\nand {@link SystemStatus.getHistoricalStatus}.\\nThe system status is calculated using a weighted average of overloaded\\nmessages in the snapshots, with the weights being the time intervals\\nbetween the snapshots. Each resource is calculated separately\\nand the system is overloaded whenever at least one resource is overloaded.\\nThe class is used by the {@link AutoscaledPool} class.","text":"{@link SystemStatus.getCurrentStatus}\\nreturns a boolean that represents the current status of the system.\\nThe length of the current timeframe in seconds is configurable\\nby the `currentHistorySecs` option and represents the max age\\nof snapshots to be considered for the calculation.\\n\\n{@link SystemStatus.getHistoricalStatus}\\nreturns a boolean that represents the long-term status\\nof the system. It considers the full snapshot history available\\nin the {@link Snapshotter} instance."},"children":[{"id":463,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":110,"character":4}],"signatures":[{"id":464,"name":"new SystemStatus","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":465,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":451,"name":"SystemStatusOptions"},"defaultValue":"{}"}],"type":{"type":"reference","id":462,"name":"SystemStatus"}}]},{"id":472,"name":"getCurrentStatus","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":153,"character":4}],"signatures":[{"id":473,"name":"getCurrentStatus","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns an {@link SystemInfo} object with the following structure:","text":"```javascript\\n{\\n    isSystemIdle: Boolean,\\n    memInfo: Object,\\n    eventLoopInfo: Object,\\n    cpuInfo: Object\\n}\\n```\\n\\nWhere the `isSystemIdle` property is set to `false` if the system\\nhas been overloaded in the last `options.currentHistorySecs` seconds,\\nand `true` otherwise.\\n"},"type":{"type":"reference","id":441,"name":"SystemInfo"}}]},{"id":474,"name":"getHistoricalStatus","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":173,"character":4}],"signatures":[{"id":475,"name":"getHistoricalStatus","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns an {@link SystemInfo} object with the following structure:","text":"```javascript\\n{\\n    isSystemIdle: Boolean,\\n    memInfo: Object,\\n    eventLoopInfo: Object,\\n    cpuInfo: Object\\n}\\n```\\n\\nWhere the `isSystemIdle` property is set to `false` if the system\\nhas been overloaded in the full history of the {@link Snapshotter}\\n(which is configurable in the {@link Snapshotter}) and `true` otherwise.\\n"},"type":{"type":"reference","id":441,"name":"SystemInfo"}}]}],"groups":[{"title":"Constructors","kind":512,"children":[463]},{"title":"Methods","kind":2048,"children":[472,474]}],"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":102,"character":13}],"permalink":"/apify-ts/api/next/core/class/SystemStatus","previousId":536,"nextId":2181},{"id":1578,"name":"ActorRunWithOutput","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"Represents information about an actor run, as returned by the {@link Apify.call} or {@link Apify.callTask} function.\\nThe object is almost equivalent to the JSON response of the [Actor run](https://apify.com/docs/api/v2#/reference/actors/run-collection/run-actor)\\nApify API endpoint and extended with certain fields. For more details, see [Runs.](https://docs.apify.com/actor/run)"},"children":[{"id":1581,"name":"actId","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":159,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":215,"name":"ActorRun.actId"}},{"id":1583,"name":"actorTaskId","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":161,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":217,"name":"ActorRun.actorTaskId"}},{"id":1590,"name":"buildId","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":168,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":224,"name":"ActorRun.buildId"}},{"id":1594,"name":"buildNumber","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":172,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":228,"name":"ActorRun.buildNumber"}},{"id":1595,"name":"containerUrl","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":173,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":229,"name":"ActorRun.containerUrl"}},{"id":1593,"name":"defaultDatasetId","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":171,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":227,"name":"ActorRun.defaultDatasetId"}},{"id":1592,"name":"defaultKeyValueStoreId","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":170,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":226,"name":"ActorRun.defaultKeyValueStoreId"}},{"id":1591,"name":"exitCode","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":169,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":225,"name":"ActorRun.exitCode"}},{"id":1585,"name":"finishedAt","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":163,"character":4}],"type":{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"},"inheritedFrom":{"type":"reference","id":219,"name":"ActorRun.finishedAt"}},{"id":1580,"name":"id","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":158,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":214,"name":"ActorRun.id"}},{"id":1587,"name":"meta","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":165,"character":4}],"type":{"type":"reference","qualifiedName":"ActorRunMeta","package":"apify-client","name":"ActorRunMeta"},"inheritedFrom":{"type":"reference","id":221,"name":"ActorRun.meta"}},{"id":1589,"name":"options","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":167,"character":4}],"type":{"type":"reference","qualifiedName":"ActorRunOptions","package":"apify-client","name":"ActorRunOptions"},"inheritedFrom":{"type":"reference","id":223,"name":"ActorRun.options"}},{"id":1579,"name":"output","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Contains output of the actor run. The value is `null` or `undefined` in case the actor is still running,\\nor if you pass `false` to the `fetchOutput` option of {@link Apify.call}.","text":"For example:\\n```\\n{\\n  \\"contentType\\": \\"application/json; charset=utf-8\\",\\n  \\"body\\": {\\n    \\"message\\": \\"Hello world!\\"\\n  }\\n}\\n```\\n"},"sources":[{"fileName":"packages/core/src/typedefs.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}]}},{"id":1584,"name":"startedAt","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":162,"character":4}],"type":{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"},"inheritedFrom":{"type":"reference","id":218,"name":"ActorRun.startedAt"}},{"id":1588,"name":"stats","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":166,"character":4}],"type":{"type":"reference","qualifiedName":"ActorRunStats","package":"apify-client","name":"ActorRunStats"},"inheritedFrom":{"type":"reference","id":222,"name":"ActorRun.stats"}},{"id":1586,"name":"status","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":164,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"SUCCEEDED"},{"type":"literal","value":"FAILED"},{"type":"literal","value":"TIMED-OUT"},{"type":"literal","value":"ABORTED"}]},"inheritedFrom":{"type":"reference","id":220,"name":"ActorRun.status"}},{"id":1582,"name":"userId","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":160,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":216,"name":"ActorRun.userId"}}],"groups":[{"title":"Properties","kind":1024,"children":[1581,1583,1590,1594,1595,1593,1592,1591,1585,1580,1587,1589,1579,1584,1588,1586,1582]}],"sources":[{"fileName":"packages/core/src/typedefs.ts","line":19,"character":17}],"extendedTypes":[{"type":"reference","id":213,"qualifiedName":"ActorRun","package":"apify-client","name":"ActorRun"}],"permalink":"/apify-ts/api/next/core/interface/ActorRunWithOutput","previousId":1752,"nextId":236},{"id":236,"name":"AutoscaledPoolOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":251,"name":"autoscaleIntervalSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Defines in seconds how often the pool should attempt to adjust the desired concurrency\\nbased on the latest system status. Setting it lower than 1 might have a severe impact on performance.\\nWe suggest using a value from 5 to 20.","tags":[{"tag":"default","text":"10\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":95,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":245,"name":"desiredConcurrency","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The desired number of tasks that should be running parallel on the start of the pool,\\nif there is a large enough supply of them.\\nBy default, it is `minConcurrency`."},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":53,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":246,"name":"desiredConcurrencyRatio","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Minimum level of desired concurrency to reach before more scaling up is allowed.","tags":[{"tag":"default","text":"0.95\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":59,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":255,"name":"log","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":116,"character":4}],"type":{"type":"reference","id":2114,"qualifiedName":"Log","package":"@apify/log","name":"Log"}},{"id":250,"name":"loggingIntervalSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specifies a period in which the instance logs its state, in seconds.\\nSet to `null` to disable periodic logging.","tags":[{"tag":"default","text":"60\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":87,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"number"}]}},{"id":244,"name":"maxConcurrency","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The maximum number of tasks running in parallel.","tags":[{"tag":"default","text":"1000\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":249,"name":"maybeRunIntervalSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates how often the pool should call the `runTaskFunction()` to start a new task, in seconds.\\nThis has no effect on starting new tasks immediately after a task completes.","tags":[{"tag":"default","text":"0.5\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":80,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":243,"name":"minConcurrency","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The minimum number of tasks running in parallel.","text":"*WARNING:* If you set this value too high with respect to the available system memory and CPU, your code might run extremely slow or crash.\\nIf you\'re not sure, just keep the default value and the concurrency will scale up automatically.","tags":[{"tag":"default","text":"1\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":40,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":248,"name":"scaleDownStepRatio","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Defines the amount of desired concurrency to be subtracted with each scaling down.\\nThe minimum scaling step is one.","tags":[{"tag":"default","text":"0.05\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":73,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":247,"name":"scaleUpStepRatio","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Defines the fractional amount of desired concurrency to be added with each scaling up.\\nThe minimum scaling step is one.","tags":[{"tag":"default","text":"0.05\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":253,"name":"snapshotterOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Options to be passed down to the {@link Snapshotter} constructor. This is useful for fine-tuning\\nthe snapshot intervals and history."},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":107,"character":4}],"type":{"type":"reference","id":341,"name":"SnapshotterOptions"}},{"id":254,"name":"systemStatusOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Options to be passed down to the {@link SystemStatus} constructor. This is useful for fine-tuning\\nthe system status reports. If a custom snapshotter is set in the options, it will be used\\nby the pool."},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":114,"character":4}],"type":{"type":"reference","id":451,"name":"SystemStatusOptions"}},{"id":252,"name":"taskTimeoutSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Timeout in which the `runTaskFunction` needs to finish, given in seconds.","tags":[{"tag":"default","text":"0\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":101,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":241,"name":"isFinishedFunction","kind":2048,"kindString":"Method","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":31,"character":4}],"signatures":[{"id":242,"name":"isFinishedFunction","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"A function that is called only when there are no tasks to be processed.\\nIf it resolves to `true` then the pool\'s run finishes. Being called only\\nwhen there are no tasks being processed means that as long as `isTaskReadyFunction()`\\nkeeps resolving to `true`, `isFinishedFunction()` will never be called.\\nTo abort a run, use the {@link AutoscaledPool.abort} method."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":239,"name":"isTaskReadyFunction","kind":2048,"kindString":"Method","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":22,"character":4}],"signatures":[{"id":240,"name":"isTaskReadyFunction","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"A function that indicates whether `runTaskFunction` should be called.\\nThis function is called every time there is free capacity for a new task and it should\\nindicate whether it should start a new task or not by resolving to either `true` or `false`.\\nBesides its obvious use, it is also useful for task throttling to save resources."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":237,"name":"runTaskFunction","kind":2048,"kindString":"Method","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":14,"character":4}],"signatures":[{"id":238,"name":"runTaskFunction","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"A function that performs an asynchronous resource-intensive task.\\nThe function must either be labeled `async` or return a promise."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"groups":[{"title":"Properties","kind":1024,"children":[251,245,246,255,250,244,249,243,248,247,253,254,252]},{"title":"Methods","kind":2048,"children":[241,239,237]}],"sources":[{"fileName":"packages/core/src/autoscaling/autoscaled_pool.ts","line":9,"character":17}],"permalink":"/apify-ts/api/next/core/interface/AutoscaledPoolOptions","previousId":1578,"nextId":458},{"id":458,"name":"ClientInfo","kind":256,"kindString":"Interface","flags":{},"children":[{"id":461,"name":"actualRatio","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":77,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":459,"name":"isOverloaded","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":75,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":460,"name":"limitRatio","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":76,"character":4}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[461,459,460]}],"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":74,"character":17}],"permalink":"/apify-ts/api/next/core/interface/ClientInfo","previousId":236,"nextId":1430},{"id":1430,"name":"ConfigurationOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":1439,"name":"actorEventsWsUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":18,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1441,"name":"actorId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1444,"name":"actorRunId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1445,"name":"actorTaskId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1442,"name":"apiBaseUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":21,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1446,"name":"containerPort","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":25,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":1447,"name":"containerUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":26,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1434,"name":"defaultDatasetId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":13,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1435,"name":"defaultKeyValueStoreId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":14,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1436,"name":"defaultRequestQueueId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1440,"name":"inputKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":19,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1443,"name":"isAtHome","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":22,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1432,"name":"localStorageDir","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1433,"name":"localStorageEnableWalMode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":12,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1437,"name":"metamorphAfterSleepMillis","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":16,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":1438,"name":"persistStateIntervalMillis","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":17,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":1449,"name":"proxyHostname","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":28,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1450,"name":"proxyPassword","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":29,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1452,"name":"proxyPort","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":31,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":1451,"name":"proxyStatusUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":30,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1431,"name":"token","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":10,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1448,"name":"userId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/configuration.ts","line":27,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[1439,1441,1444,1445,1442,1446,1447,1434,1435,1436,1440,1443,1432,1433,1437,1438,1449,1450,1452,1451,1431,1448]}],"sources":[{"fileName":"packages/core/src/configuration.ts","line":9,"character":17}],"permalink":"/apify-ts/api/next/core/interface/ConfigurationOptions","previousId":458,"nextId":504},{"id":504,"name":"CrawlerHandleFailedRequestInput","kind":256,"kindString":"Interface","flags":{},"children":[{"id":505,"name":"error","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The Error thrown by `handleRequestFunction`."},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":24,"character":4}],"type":{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"}},{"id":506,"name":"id","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":6,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":500,"name":"CrawlingContext.id"}},{"id":509,"name":"proxyInfo","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An object with information about currently used proxy by the crawler\\nand configured by the {@link ProxyConfiguration} class."},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":17,"character":4}],"type":{"type":"reference","id":1678,"name":"ProxyInfo"},"inheritedFrom":{"type":"reference","id":503,"name":"CrawlingContext.proxyInfo"}},{"id":507,"name":"request","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The original {@link Request} object."},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":10,"character":4}],"type":{"type":"reference","id":1626,"name":"Request"},"inheritedFrom":{"type":"reference","id":501,"name":"CrawlingContext.request"}},{"id":508,"name":"session","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":11,"character":4}],"type":{"type":"reference","id":701,"name":"Session"},"inheritedFrom":{"type":"reference","id":502,"name":"CrawlingContext.session"}}],"groups":[{"title":"Properties","kind":1024,"children":[505,506,509,507,508]}],"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":20,"character":17}],"extendedTypes":[{"type":"reference","id":499,"name":"CrawlingContext"}],"extendedBy":[{"type":"reference","id":2881,"name":"BasicCrawlerHandleFailedRequestInput"},{"type":"reference","id":3292,"name":"BrowserCrawlerHandleFailedRequestInput"},{"type":"reference","id":3821,"name":"CheerioHandleFailedRequestInput"}],"permalink":"/apify-ts/api/next/core/interface/CrawlerHandleFailedRequestInput","previousId":1430,"nextId":499},{"id":499,"name":"CrawlingContext","kind":256,"kindString":"Interface","flags":{},"children":[{"id":500,"name":"id","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":6,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":503,"name":"proxyInfo","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An object with information about currently used proxy by the crawler\\nand configured by the {@link ProxyConfiguration} class."},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":17,"character":4}],"type":{"type":"reference","id":1678,"name":"ProxyInfo"}},{"id":501,"name":"request","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The original {@link Request} object."},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":10,"character":4}],"type":{"type":"reference","id":1626,"name":"Request"}},{"id":502,"name":"session","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":11,"character":4}],"type":{"type":"reference","id":701,"name":"Session"}}],"groups":[{"title":"Properties","kind":1024,"children":[500,503,501,502]}],"sources":[{"fileName":"packages/core/src/crawlers/crawler_commons.ts","line":5,"character":17}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"PropertyKey","package":"typescript","name":"PropertyKey"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}],"extendedBy":[{"type":"reference","id":504,"name":"CrawlerHandleFailedRequestInput"},{"type":"reference","id":2872,"name":"BasicCrawlerCrawlingContext"},{"type":"reference","id":3277,"name":"BrowserCrawlingContext"},{"type":"reference","id":3901,"name":"CheerioHandlePageInputs"}],"permalink":"/apify-ts/api/next/core/interface/CrawlingContext","previousId":504,"nextId":772},{"id":772,"name":"CreateSession","kind":256,"kindString":"Interface","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":15,"character":17}],"signatures":[{"id":773,"name":"CreateSession","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Factory user-function which creates customized {@link Session} instances."},"parameters":[{"id":774,"name":"sessionPool","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Pool requesting the new session."},"type":{"type":"reference","id":786,"name":"SessionPool"}},{"id":775,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"\\n"},"type":{"type":"reflection","declaration":{"id":776,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":777,"name":"sessionOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":20,"character":43}],"type":{"type":"reference","id":687,"name":"SessionOptions"}}],"groups":[{"title":"Properties","kind":1024,"children":[777]}]}}}],"type":{"type":"union","types":[{"type":"reference","id":701,"name":"Session"},{"type":"reference","typeArguments":[{"type":"reference","id":701,"name":"Session"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}]}}],"permalink":"/apify-ts/api/next/core/interface/CreateSession","previousId":499,"nextId":1034},{"id":1034,"name":"DatasetConsumer","kind":256,"kindString":"Interface","flags":{},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":501,"character":17}],"typeParameter":[{"id":1035,"name":"Data","kind":131072,"kindString":"Type parameter","flags":{}}],"signatures":[{"id":1036,"name":"DatasetConsumer","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"User-function used in the `Dataset.forEach()` API."},"parameters":[{"id":1037,"name":"item","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Current {@link Dataset} entry being processed."},"type":{"type":"reference","id":1035,"name":"Data"}},{"id":1038,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Position of current {Dataset} entry.\\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable"}}],"permalink":"/apify-ts/api/next/core/interface/DatasetConsumer","previousId":772,"nextId":1057},{"id":1057,"name":"DatasetContent","kind":256,"kindString":"Interface","flags":{},"children":[{"id":1059,"name":"count","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Count of dataset entries returned in this set."},"sources":[{"fileName":"node_modules/apify-client/dist/utils.d.ts","line":49,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"PaginatedList.count"}},{"id":1062,"name":"desc","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Should the results be in descending order."},"sources":[{"fileName":"node_modules/apify-client/dist/utils.d.ts","line":55,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"PaginatedList.desc"}},{"id":1063,"name":"items","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Dataset entries based on chosen format parameter."},"sources":[{"fileName":"node_modules/apify-client/dist/utils.d.ts","line":57,"character":4}],"type":{"type":"array","elementType":{"type":"reference","id":1064,"name":"T"}},"inheritedFrom":{"type":"reference","name":"PaginatedList.items"}},{"id":1061,"name":"limit","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Maximum number of dataset entries requested."},"sources":[{"fileName":"node_modules/apify-client/dist/utils.d.ts","line":53,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"PaginatedList.limit"}},{"id":1060,"name":"offset","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Position of the first returned entry in the dataset."},"sources":[{"fileName":"node_modules/apify-client/dist/utils.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"PaginatedList.offset"}},{"id":1058,"name":"total","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Total count of entries in the dataset."},"sources":[{"fileName":"node_modules/apify-client/dist/utils.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"PaginatedList.total"}}],"groups":[{"title":"Properties","kind":1024,"children":[1059,1062,1063,1061,1060,1058]}],"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":546,"character":17}],"typeParameter":[{"id":1064,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","id":1064,"name":"T"}],"qualifiedName":"PaginatedList","package":"apify-client","name":"PaginatedList"}],"permalink":"/apify-ts/api/next/core/interface/DatasetContent","previousId":1034,"nextId":973},{"id":973,"name":"DatasetDataOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":979,"name":"clean","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true` then the function returns only non-empty items and skips hidden fields (i.e. fields starting with `#` character).\\nNote that the `clean` parameter is a shortcut for `skipHidden: true` and `skipEmpty: true` options.","tags":[{"tag":"default","text":"false\\n"}]},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":124,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":976,"name":"desc","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true` then the objects are sorted by `createdAt` in descending order.\\nOtherwise they are sorted in ascending order.","tags":[{"tag":"default","text":"false\\n"}]},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":106,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":977,"name":"fields","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of field names that will be included in the result. If omitted, all fields are included in the results."},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":111,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":975,"name":"limit","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum number of array elements to return.","tags":[{"tag":"default","text":"250000\\n"}]},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":99,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":974,"name":"offset","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Number of array elements that should be skipped at the start.","tags":[{"tag":"default","text":"0\\n"}]},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":93,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":981,"name":"skipEmpty","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true` then the function doesn\'t return empty items.\\nNote that in this case the returned number of items might be lower than limit parameter and pagination must be done using the `limit` value.","tags":[{"tag":"default","text":"false\\n"}]},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":137,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":980,"name":"skipHidden","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true` then the function doesn\'t return hidden fields (fields starting with \\"#\\" character).","tags":[{"tag":"default","text":"false\\n"}]},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":130,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":978,"name":"unwind","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specifies a name of the field in the result objects that will be used to unwind the resulting objects.\\nBy default, the results are returned as they are."},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":117,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[979,976,977,975,974,981,980,978]}],"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":88,"character":17}],"permalink":"/apify-ts/api/next/core/interface/DatasetDataOptions","previousId":1057,"nextId":982},{"id":982,"name":"DatasetIteratorOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":989,"name":"desc","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true` then the objects are sorted by `createdAt` in descending order.\\nOtherwise they are sorted in ascending order.","tags":[{"tag":"default","text":"false\\n"}]},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":106,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"Omit.desc"}},{"id":990,"name":"fields","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of field names that will be included in the result. If omitted, all fields are included in the results."},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":111,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"Omit.fields"}},{"id":991,"name":"unwind","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specifies a name of the field in the result objects that will be used to unwind the resulting objects.\\nBy default, the results are returned as they are."},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":117,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Omit.unwind"}}],"groups":[{"title":"Properties","kind":1024,"children":[989,990,991]}],"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":140,"character":17}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","id":973,"name":"DatasetDataOptions"},{"type":"union","types":[{"type":"literal","value":"offset"},{"type":"literal","value":"limit"},{"type":"literal","value":"clean"},{"type":"literal","value":"skipHidden"},{"type":"literal","value":"skipEmpty"}]}],"qualifiedName":"Omit","package":"typescript","name":"Omit"}],"permalink":"/apify-ts/api/next/core/interface/DatasetIteratorOptions","previousId":973,"nextId":1039},{"id":1039,"name":"DatasetMapper","kind":256,"kindString":"Interface","flags":{},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":514,"character":17}],"typeParameter":[{"id":1040,"name":"Data","kind":131072,"kindString":"Type parameter","flags":{}},{"id":1041,"name":"R","kind":131072,"kindString":"Type parameter","flags":{}}],"signatures":[{"id":1042,"name":"DatasetMapper","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"User-function used in the `Dataset.map()` API."},"parameters":[{"id":1043,"name":"item","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Current {@link Dataset} entry being processed."},"type":{"type":"reference","id":1040,"name":"Data"}},{"id":1044,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Position of current {Dataset} entry.\\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1041,"name":"R"}],"name":"Awaitable"}}],"permalink":"/apify-ts/api/next/core/interface/DatasetMapper","previousId":982,"nextId":1052},{"id":1052,"name":"DatasetOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":1055,"name":"client","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":542,"character":4}],"type":{"type":"union","types":[{"type":"reference","qualifiedName":"ApifyClient","package":"apify-client","name":"ApifyClient"},{"type":"reference","qualifiedName":"ApifyStorageLocal","package":"@apify/storage-local","name":"ApifyStorageLocal"}]}},{"id":1053,"name":"id","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":540,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1056,"name":"isLocal","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":543,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1054,"name":"name","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":541,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[1055,1053,1056,1054]}],"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":539,"character":17}],"permalink":"/apify-ts/api/next/core/interface/DatasetOptions","previousId":1039,"nextId":1045},{"id":1045,"name":"DatasetReducer","kind":256,"kindString":"Interface","flags":{},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":528,"character":17}],"typeParameter":[{"id":1046,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}},{"id":1047,"name":"Data","kind":131072,"kindString":"Type parameter","flags":{}}],"signatures":[{"id":1048,"name":"DatasetReducer","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"User-function used in the `Dataset.reduce()` API."},"parameters":[{"id":1049,"name":"memo","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Previous state of the reduction."},"type":{"type":"reference","id":1046,"name":"T"}},{"id":1050,"name":"item","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Current {@link Dataset} entry being processed."},"type":{"type":"reference","id":1047,"name":"Data"}},{"id":1051,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Position of current {Dataset} entry.\\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1046,"name":"T"}],"name":"Awaitable"}}],"permalink":"/apify-ts/api/next/core/interface/DatasetReducer","previousId":1052,"nextId":1791},{"id":1791,"name":"DownloadListOfUrlsOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":1793,"name":"encoding","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The encoding of the file.","tags":[{"tag":"default","text":"\'utf8\'\\n"}]},"sources":[{"fileName":"packages/core/src/utils.ts","line":163,"character":4}],"type":{"type":"reference","qualifiedName":"global.BufferEncoding","package":"@types/node","name":"BufferEncoding"}},{"id":1792,"name":"url","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"URL to the file"},"sources":[{"fileName":"packages/core/src/utils.ts","line":157,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1794,"name":"urlRegExp","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Custom regular expression to identify the URLs in the file to extract.\\nThe regular expression should be case-insensitive and have global flag set (i.e. `/something/gi`).","tags":[{"tag":"default","text":"Apify.utils.URL_NO_COMMAS_REGEX\\n"}]},"sources":[{"fileName":"packages/core/src/utils.ts","line":170,"character":4}],"type":{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"}}],"groups":[{"title":"Properties","kind":1024,"children":[1793,1792,1794]}],"sources":[{"fileName":"packages/core/src/utils.ts","line":153,"character":17}],"permalink":"/apify-ts/api/next/core/interface/DownloadListOfUrlsOptions","previousId":1045,"nextId":629},{"id":629,"name":"EnqueueLinksOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":634,"name":"baseUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A base URL that will be used to resolve relative URLs when using Cheerio. Ignored when using Puppeteer,\\nsince the relative URL resolution is done inside the browser automatically."},"sources":[{"fileName":"packages/core/src/enqueue_links/enqueue_links.ts","line":30,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":630,"name":"limit","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Limit the count of actually enqueued URLs to this number. Useful for testing across the entire crawling scope."},"sources":[{"fileName":"packages/core/src/enqueue_links/enqueue_links.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":635,"name":"pseudoUrls","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of {@link PseudoUrl}s matching the URLs to be enqueued,\\nor an array of strings or RegExps or plain Objects from which the {@link PseudoUrl}s can be constructed.","text":"The plain objects must include at least the `purl` property, which holds the pseudo-URL string or RegExp.\\nAll remaining keys will be used as the `requestTemplate` argument of the {@link PseudoUrl} constructor,\\nwhich lets you specify special properties for the enqueued {@link Request} objects.\\n\\nIf `pseudoUrls` is an empty array, `null` or `undefined`, then the function\\nenqueues all links found on the page.\\n"},"sources":[{"fileName":"packages/core/src/enqueue_links/enqueue_links.ts","line":43,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"array","elementType":{"type":"reference","id":652,"name":"PseudoUrlInput"}}]}},{"id":632,"name":"requestQueue","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A request queue to which the URLs will be enqueued."},"sources":[{"fileName":"packages/core/src/enqueue_links/enqueue_links.ts","line":21,"character":4}],"type":{"type":"reference","id":1270,"name":"RequestQueue"}},{"id":633,"name":"selector","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A CSS selector matching links to be enqueued."},"sources":[{"fileName":"packages/core/src/enqueue_links/enqueue_links.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":636,"name":"transformRequestFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Just before a new {@link Request} is constructed and enqueued to the {@link RequestQueue}, this function can be used\\nto remove it or modify its contents such as `userData`, `payload` or, most importantly `uniqueKey`. This is useful\\nwhen you need to enqueue multiple `Requests` to the queue that share the same URL, but differ in methods or payloads,\\nor to dynamically update or create `userData`.","text":"For example: by adding `keepUrlFragment: true` to the `request` object, URL fragments will not be removed\\nwhen `uniqueKey` is computed.\\n\\n**Example:**\\n```javascript\\n{\\n    transformRequestFunction: (request) => {\\n        request.userData.foo = \'bar\';\\n        request.keepUrlFragment = true;\\n        return request;\\n    }\\n}\\n```\\n"},"sources":[{"fileName":"packages/core/src/enqueue_links/enqueue_links.ts","line":65,"character":4}],"type":{"type":"reference","id":653,"name":"RequestTransform"}},{"id":631,"name":"urls","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"An array of URLs to enqueue."},"sources":[{"fileName":"packages/core/src/enqueue_links/enqueue_links.ts","line":18,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"groups":[{"title":"Properties","kind":1024,"children":[634,630,635,632,633,636,631]}],"sources":[{"fileName":"packages/core/src/enqueue_links/enqueue_links.ts","line":13,"character":17}],"permalink":"/apify-ts/api/next/core/interface/EnqueueLinksOptions","previousId":1791,"nextId":1795},{"id":1795,"name":"ExtractUrlsOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":1796,"name":"string","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Arbitrary string"},"sources":[{"fileName":"packages/core/src/utils.ts","line":178,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1797,"name":"urlRegExp","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Custom regular expression","tags":[{"tag":"default","text":"Apify.utils.URL_NO_COMMAS_REGEX\\n"}]},"sources":[{"fileName":"packages/core/src/utils.ts","line":184,"character":4}],"type":{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"}}],"groups":[{"title":"Properties","kind":1024,"children":[1796,1797]}],"sources":[{"fileName":"packages/core/src/utils.ts","line":174,"character":17}],"permalink":"/apify-ts/api/next/core/interface/ExtractUrlsOptions","previousId":629,"nextId":1346},{"id":1346,"name":"IStorage","kind":256,"kindString":"Interface","flags":{},"children":[{"id":1347,"name":"id","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/storage_manager.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1349,"name":"isLocal","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/storages/storage_manager.ts","line":25,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1348,"name":"name","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/storages/storage_manager.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[1347,1349,1348]}],"sources":[{"fileName":"packages/core/src/storages/storage_manager.ts","line":22,"character":17}],"permalink":"/apify-ts/api/next/core/interface/IStorage","previousId":1795,"nextId":1128},{"id":1128,"name":"KeyConsumer","kind":256,"kindString":"Interface","flags":{},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":443,"character":17}],"signatures":[{"id":1129,"name":"KeyConsumer","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"User-function used in the  {@link KeyValueStore.forEachKey} method."},"parameters":[{"id":1130,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Current {KeyValue} key being processed."},"type":{"type":"intrinsic","name":"string"}},{"id":1131,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Position of the current key in {@link KeyValueStore}."},"type":{"type":"intrinsic","name":"number"}},{"id":1132,"name":"info","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Information about the current {@link KeyValueStore} entry."},"type":{"type":"reflection","declaration":{"id":1133,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1134,"name":"size","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Size of the value associated with the current key in bytes.\\n"},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":450,"character":41}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[1134]}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable"}}],"permalink":"/apify-ts/api/next/core/interface/KeyConsumer","previousId":1346,"nextId":1142},{"id":1142,"name":"KeyValueStoreIteratorOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":1143,"name":"exclusiveStartKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"All keys up to this one (including) are skipped from the result."},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":471,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[1143]}],"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":467,"character":17}],"permalink":"/apify-ts/api/next/core/interface/KeyValueStoreIteratorOptions","previousId":1128,"nextId":1135},{"id":1135,"name":"KeyValueStoreOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":1138,"name":"client","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":456,"character":4}],"type":{"type":"union","types":[{"type":"reference","qualifiedName":"ApifyClient","package":"apify-client","name":"ApifyClient"},{"type":"reference","qualifiedName":"ApifyStorageLocal","package":"@apify/storage-local","name":"ApifyStorageLocal"}]}},{"id":1136,"name":"id","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":454,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1139,"name":"isLocal","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":457,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1137,"name":"name","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":455,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[1138,1136,1139,1137]}],"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":453,"character":17}],"permalink":"/apify-ts/api/next/core/interface/KeyValueStoreOptions","previousId":1142,"nextId":2173},{"id":2173,"name":"LoggerOptions","kind":256,"kindString":"Interface","flags":{"isExternal":true},"children":[{"id":2180,"name":"data","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Additional data to be added to each log line."},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":23,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"id":2174,"name":"level","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Sets the log level to the given value, preventing messages from less important log levels\\nfrom being printed to the console. Use in conjunction with the `log.LEVELS` constants."},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":8,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":2179,"name":"logger","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Logger implementation to be used. Default one is log.LoggerText to log messages as easily readable\\nstrings. Optionally you can use `log.LoggerJson` that formats each log line as a JSON."},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":21,"character":4}],"type":{"type":"reference","id":2189,"qualifiedName":"Logger","package":"@apify/log","name":"Logger"}},{"id":2175,"name":"maxDepth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Max depth of data object that will be logged. Anything deeper than the limit will be stripped off."},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":10,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":2176,"name":"maxStringLength","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Max length of the string to be logged. Longer strings will be truncated."},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":12,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":2177,"name":"prefix","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Prefix to be prepended the each logged line."},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":14,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":2178,"name":"suffix","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Suffix that will be appended the each logged line."},"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":16,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[2180,2174,2179,2175,2176,2177,2178]}],"sources":[{"fileName":"node_modules/@apify/log/log.d.ts","line":3,"character":17}],"permalink":"/apify-ts/api/next/core/interface/LoggerOptions","previousId":1135,"nextId":1785},{"id":1785,"name":"MemoryInfo","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"Describes memory usage of an Actor."},"children":[{"id":1790,"name":"childProcessesBytes","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Amount of memory used by child processes of the current Node.js process"},"sources":[{"fileName":"packages/core/src/utils.ts","line":150,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":1787,"name":"freeBytes","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Amount of free memory in the system or container"},"sources":[{"fileName":"packages/core/src/utils.ts","line":141,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":1789,"name":"mainProcessBytes","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Amount of memory used the current Node.js process"},"sources":[{"fileName":"packages/core/src/utils.ts","line":147,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":1786,"name":"totalBytes","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Total memory available in the system or container"},"sources":[{"fileName":"packages/core/src/utils.ts","line":138,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":1788,"name":"usedBytes","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Amount of memory used (= totalBytes - freeBytes)"},"sources":[{"fileName":"packages/core/src/utils.ts","line":144,"character":4}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[1790,1787,1789,1786,1788]}],"sources":[{"fileName":"packages/core/src/utils.ts","line":136,"character":17}],"permalink":"/apify-ts/api/next/core/interface/MemoryInfo","previousId":2173,"nextId":1667},{"id":1667,"name":"ProxyConfigurationFunction","kind":256,"kindString":"Interface","flags":{},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":15,"character":17}],"signatures":[{"id":1668,"name":"ProxyConfigurationFunction","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1669,"name":"sessionId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/apify-ts/api/next/core/interface/ProxyConfigurationFunction","previousId":1785,"nextId":1670},{"id":1670,"name":"ProxyConfigurationOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":1675,"name":"apifyProxyCountry","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Same option as `countryCode` which can be used to\\nconfigurate the proxy by UI input schema. You should use the `countryCode` option in your crawler code."},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":55,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1674,"name":"apifyProxyGroups","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Same option as `groups` which can be used to\\nconfigurate the proxy by UI input schema. You should use the `groups` option in your crawler code."},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":1673,"name":"countryCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set and relevant proxies are available in your Apify account, all proxied requests will\\nuse IP addresses that are geolocated to the specified country. For example `GB` for IPs\\nfrom Great Britain. Note that online services often have their own rules for handling\\ngeolocation and thus the country selection is a best attempt at geolocation, rather than\\na guaranteed hit. This parameter is optional, by default, each proxied request is assigned\\nan IP address from a random country. The country code needs to be a two letter ISO country code. See the\\n[full list of available country codes](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements).\\nThis parameter is optional, by default, the proxy uses all available proxy servers from all countries.\\non the Apify cloud, or when using the [Apify CLI](https://github.com/apify/apify-cli)."},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":43,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1672,"name":"groups","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of proxy groups to be used by the [Apify Proxy](https://docs.apify.com/proxy).\\nIf not provided, the proxy will select the groups automatically."},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":30,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":1677,"name":"newUrlFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Custom function that allows you to generate the new proxy URL dynamically. It gets the `sessionId` as a parameter\\nand should always return stringified proxy URL.\\nThis function is used to generate the URL when {@link ProxyConfiguration.newUrl} or {@link ProxyConfiguration.newProxyInfo} is called."},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":69,"character":4}],"type":{"type":"reference","id":1667,"name":"ProxyConfigurationFunction"}},{"id":1671,"name":"password","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"User\'s password for the proxy. By default, it is taken from the `APIFY_PROXY_PASSWORD`\\nenvironment variable, which is automatically set by the system when running the actors."},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1676,"name":"proxyUrls","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of custom proxy URLs to be rotated.\\nCustom proxies are not compatible with Apify Proxy and an attempt to use both\\nconfiguration options will cause an error to be thrown on initialize."},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":62,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"groups":[{"title":"Properties","kind":1024,"children":[1675,1674,1673,1672,1677,1671,1676]}],"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":19,"character":17}],"permalink":"/apify-ts/api/next/core/interface/ProxyConfigurationOptions","previousId":1667,"nextId":1678},{"id":1678,"name":"ProxyInfo","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"The main purpose of the ProxyInfo object is to provide information\\nabout the current proxy connection used by the crawler for the request.\\nOutside of crawlers, you can get this object by calling {@link ProxyConfiguration.newProxyInfo}.","text":"**Example usage:**\\n\\n```javascript\\n\\nconst proxyConfiguration = await Apify.createProxyConfiguration({\\n  groups: [\'GROUP1\', \'GROUP2\'] // List of Apify Proxy groups\\n  countryCode: \'US\',\\n});\\n\\n// Getting proxyInfo object by calling class method directly\\nconst proxyInfo = proxyConfiguration.newProxyInfo();\\n\\n// In crawler\\nconst crawler = new Apify.CheerioCrawler({\\n  // ...\\n  proxyConfiguration,\\n  handlePageFunction: ({ proxyInfo }) => {\\n     // Getting used proxy URL\\n      const proxyUrl = proxyInfo.url;\\n\\n     // Getting ID of used Session\\n      const sessionIdentifier = proxyInfo.sessionId;\\n  }\\n})\\n\\n```\\n"},"children":[{"id":1682,"name":"countryCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set and relevant proxies are available in your Apify account, all proxied requests will\\nuse IP addresses that are geolocated to the specified country. For example `GB` for IPs\\nfrom Great Britain. Note that online services often have their own rules for handling\\ngeolocation and thus the country selection is a best attempt at geolocation, rather than\\na guaranteed hit. This parameter is optional, by default, each proxied request is assigned\\nan IP address from a random country. The country code needs to be a two letter ISO country code. See the\\n[full list of available country codes](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements).\\nThis parameter is optional, by default, the proxy uses all available proxy servers from all countries."},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":131,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1681,"name":"groups","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"An array of proxy groups to be used by the [Apify Proxy](https://docs.apify.com/proxy).\\nIf not provided, the proxy will select the groups automatically."},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":119,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":1684,"name":"hostname","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Hostname of your proxy."},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":143,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1683,"name":"password","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"User\'s password for the proxy. By default, it is taken from the `APIFY_PROXY_PASSWORD`\\nenvironment variable, which is automatically set by the system when running the actors\\non the Apify cloud, or when using the [Apify CLI](https://github.com/apify/apify-cli)."},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":138,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1685,"name":"port","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Proxy port."},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":148,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}},{"id":1679,"name":"sessionId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The identifier of used {@link Session}, if used."},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":108,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1680,"name":"url","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The URL of the proxy."},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":113,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[1682,1681,1684,1683,1685,1679,1680]}],"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":104,"character":17}],"permalink":"/apify-ts/api/next/core/interface/ProxyInfo","previousId":1670,"nextId":1660},{"id":1660,"name":"PushErrorMessageOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":1661,"name":"omitStack","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Only push the error message without stack trace when true.","tags":[{"tag":"default","text":"false\\n"}]},"sources":[{"fileName":"packages/core/src/request.ts","line":321,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","kind":1024,"children":[1661]}],"sources":[{"fileName":"packages/core/src/request.ts","line":316,"character":17}],"permalink":"/apify-ts/api/next/core/interface/PushErrorMessageOptions","previousId":1678,"nextId":1264},{"id":1264,"name":"QueueOperationInfo","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"A helper class that is used to report results from various\\n{@link RequestQueue} functions as well as {@link utils.enqueueLinks}."},"children":[{"id":1267,"name":"requestId","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The ID of the added request"},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":85,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1266,"name":"wasAlreadyHandled","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Indicates if request was already marked as handled."},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":82,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1265,"name":"wasAlreadyPresent","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Indicates if request was already present in the queue."},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":79,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","kind":1024,"children":[1267,1266,1265]}],"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":76,"character":17}],"permalink":"/apify-ts/api/next/core/interface/QueueOperationInfo","previousId":1660,"nextId":1343},{"id":1343,"name":"QueueOperationInfoOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":1344,"name":"requestId","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":697,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1345,"name":"wasAlreadyHandled","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":698,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","kind":1024,"children":[1344,1345]}],"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":696,"character":17}],"permalink":"/apify-ts/api/next/core/interface/QueueOperationInfoOptions","previousId":1264,"nextId":1140},{"id":1140,"name":"RecordOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":1141,"name":"contentType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specifies a custom MIME content type of the record."},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":464,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[1141]}],"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":460,"character":17}],"permalink":"/apify-ts/api/next/core/interface/RecordOptions","previousId":1343,"nextId":2018},{"id":2018,"name":"RequestAsBrowserOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":2029,"name":"abortFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Function accepts `response` object as a single parameter and should return `true` or `false`.\\nIf function returns true, request gets aborted."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":76,"character":4}],"type":{"type":"reference","id":1899,"name":"AbortFunction"}},{"id":2036,"name":"agent","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"Agents","package":"got-cjs","name":"Agents"}]},"inheritedFrom":{"type":"reference","name":"Omit.agent"}},{"id":2093,"name":"allowGetBody","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.allowGetBody"}},{"id":2040,"name":"body","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"global.Buffer","package":"@types/node","name":"Buffer"},{"type":"reference","qualifiedName":"internal.Readable","package":"@types/node","name":"Readable"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Generator","package":"typescript","name":"Generator"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"AsyncGenerator","package":"typescript","name":"AsyncGenerator"},{"type":"reference","qualifiedName":"FormDataLike","package":"form-data-encoder","name":"FormDataLike"}]},"inheritedFrom":{"type":"reference","name":"Omit.body"}},{"id":2088,"name":"cache","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"boolean"},{"type":"reference","qualifiedName":"CacheableRequest.StorageAdapter","package":"@types/cacheable-request","name":"StorageAdapter"}]},"inheritedFrom":{"type":"reference","name":"Omit.cache"}},{"id":2101,"name":"cacheOptions","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"CacheOptions","package":"got-cjs","name":"CacheOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.cacheOptions"}},{"id":2084,"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}]},"inheritedFrom":{"type":"reference","name":"Omit.context"}},{"id":2042,"name":"cookieJar","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"PromiseCookieJar","package":"got-cjs","name":"PromiseCookieJar"},{"type":"reference","qualifiedName":"ToughCookieJar","package":"got-cjs","name":"ToughCookieJar"}]},"inheritedFrom":{"type":"reference","name":"Omit.cookieJar"}},{"id":2025,"name":"countryCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Two-letter ISO 3166 country code."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":49,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":2100,"name":"createConnection","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"CreateConnectionFunction","package":"got-cjs","name":"CreateConnectionFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.createConnection"}},{"id":2038,"name":"decompress","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.decompress"}},{"id":2083,"name":"dnsCache","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"},{"type":"reference","qualifiedName":"CacheableLookup","package":"cacheable-lookup","name":"default"}]},"inheritedFrom":{"type":"reference","name":"Omit.dnsCache"}},{"id":2045,"name":"dnsLookup","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":2046,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2047,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"tags":[{"tag":"see","text":"https://nodejs.org/api/dns.html#dns_dns_lookup_hostname_options_callback\\n"}]},"parameters":[{"id":2048,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2049,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}},{"id":2050,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":2051,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2052,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2053,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":2054,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2055,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":2056,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2057,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2058,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":2059,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2060,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2061,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":2062,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2063,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":2064,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2065,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2066,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"LookupOptions","package":"cacheable-lookup","name":"LookupOptions"},{"type":"reflection","declaration":{"id":2067,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":2068,"name":"all","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/cacheable-lookup/index.d.ts","line":104,"character":52}],"type":{"type":"literal","value":true}}],"groups":[{"title":"Properties","kind":1024,"children":[2068]}]}}]}},{"id":2069,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":2070,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2071,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2072,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":2073,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","qualifiedName":"EntryObject","package":"cacheable-lookup","name":"EntryObject"}}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":2074,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2075,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2076,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"LookupOptions","package":"cacheable-lookup","name":"LookupOptions"}},{"id":2077,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":2078,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2079,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2080,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":2081,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2082,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}]},"inheritedFrom":{"type":"reference","name":"Omit.dnsLookup"}},{"id":2095,"name":"dnsLookupIpVersion","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"DnsLookupIpVersion","package":"got-cjs","name":"DnsLookupIpVersion"},"inheritedFrom":{"type":"reference","name":"Omit.dnsLookupIpVersion"}},{"id":2103,"name":"encoding","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"global.BufferEncoding","package":"@types/node","name":"BufferEncoding"}]},"inheritedFrom":{"type":"reference","name":"Omit.encoding"}},{"id":2086,"name":"followRedirect","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.followRedirect"}},{"id":2041,"name":"form","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}]},"inheritedFrom":{"type":"reference","name":"Omit.form"}},{"id":2037,"name":"h2session","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ClientHttp2Session","package":"@types/node","name":"ClientHttp2Session"}]},"inheritedFrom":{"type":"reference","name":"Omit.h2session"}},{"id":2023,"name":"headerGeneratorOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Configuration to be used for generating correct browser headers.\\nSee the [`header-generator`](https://github.com/apify/header-generator) library."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":39,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"id":2021,"name":"headers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Additional HTTP headers to add. It\'s only recommended to use this option,\\nwith headers that are typically added by websites, such as cookies. Overriding\\ndefault browser headers will remove the masking this function provides."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"overwrites":{"type":"reference","name":"Omit.headers"}},{"id":2085,"name":"hooks","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/got-cjs/dist/source/core/options.d.ts","line":556,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"Hooks","package":"got-cjs","name":"Hooks"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"inheritedFrom":{"type":"reference","name":"Omit.hooks"}},{"id":2092,"name":"http2","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.http2"}},{"id":2102,"name":"https","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"HttpsOptions","package":"got-cjs","name":"HttpsOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.https"}},{"id":2043,"name":"ignoreInvalidCookies","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.ignoreInvalidCookies"}},{"id":2027,"name":"ignoreSslErrors","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to true, SSL/TLS certificate errors will be ignored."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":59,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2105,"name":"isStream","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.isStream"}},{"id":2033,"name":"json","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The `boolean` type for `json` is deprecated"},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":97,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}]}},{"id":2024,"name":"languageCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Two-letter ISO 639 language code."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":44,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":2099,"name":"localAddress","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.localAddress"}},{"id":2109,"name":"maxHeaderSize","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]},"inheritedFrom":{"type":"reference","name":"Omit.maxHeaderSize"}},{"id":2087,"name":"maxRedirects","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]},"inheritedFrom":{"type":"reference","name":"Omit.maxRedirects"}},{"id":2020,"name":"method","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"HTTP method."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":21,"character":4}],"type":{"type":"reference","qualifiedName":"Method","package":"got-cjs","name":"Method"},"overwrites":{"type":"reference","name":"Omit.method"}},{"id":2094,"name":"methodRewriting","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.methodRewriting"}},{"id":2107,"name":"pagination","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"PaginationOptions","package":"got-cjs","name":"PaginationOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.pagination"}},{"id":2096,"name":"parseJson","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ParseJsonFunction","package":"got-cjs","name":"ParseJsonFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.parseJson"}},{"id":2091,"name":"password","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.password"}},{"id":2039,"name":"prefixUrl","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"URL","package":"@types/node","name":"URL"}]},"inheritedFrom":{"type":"reference","name":"Omit.prefixUrl"}},{"id":2022,"name":"proxyUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An HTTP proxy to be passed down to the HTTP request. Supports proxy authentication with Basic Auth."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":2035,"name":"request","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"RequestFunction","package":"got-cjs","name":"RequestFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.request"}},{"id":2104,"name":"resolveBodyOnly","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.resolveBodyOnly"}},{"id":2106,"name":"responseType","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ResponseType","package":"got-cjs","name":"ResponseType"}]},"inheritedFrom":{"type":"reference","name":"Omit.responseType"}},{"id":2098,"name":"retry","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/got-cjs/dist/source/core/options.d.ts","line":557,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"RetryOptions","package":"got-cjs","name":"RetryOptions"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"inheritedFrom":{"type":"reference","name":"Omit.retry"}},{"id":2044,"name":"searchParams","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"SearchParameters","package":"got-cjs","name":"SearchParameters"},{"type":"reference","qualifiedName":"URLSearchParams","package":"@types/node","name":"URLSearchParams"}]},"inheritedFrom":{"type":"reference","name":"Omit.searchParams"}},{"id":2031,"name":"sessionToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A unique object used to generate browser headers. By default, new headers are generated on every call.\\nSet this option to make these headers persistent."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":90,"character":4}],"type":{"type":"intrinsic","name":"object"}},{"id":2108,"name":"setHost","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.setHost"}},{"id":2032,"name":"stream","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":92,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2097,"name":"stringifyJson","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"StringifyJsonFunction","package":"got-cjs","name":"StringifyJsonFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.stringifyJson"}},{"id":2089,"name":"throwHttpErrors","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.throwHttpErrors"}},{"id":2034,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"Delays","package":"got-cjs","name":"Delays"}]},"inheritedFrom":{"type":"reference","name":"Omit.timeout"}},{"id":2019,"name":"url","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":" URL of the target endpoint. Supports both HTTP and HTTPS schemes."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":16,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"Omit.url"}},{"id":2030,"name":"useHttp2","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to false, it will prevent use of HTTP2 requests. This is strongly discouraged. Websites\\nexpect HTTP2 connections, because browsers use HTTP2 by default. It will automatically downgrade\\nto HTTP/1.1 for websites that do not support HTTP2. For Node 10 this option is always set to `false`\\nbecause Node 10 does not support HTTP2 very well. Upgrade to Node 12 for better performance."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":84,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2028,"name":"useInsecureHttpParser","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Node.js\' HTTP parser is stricter than parsers used by web browsers, which prevents scraping of websites\\nwhose servers do not comply with HTTP specs, either by accident or due to some anti-scraping protections,\\ncausing e.g. the `invalid header value char` error. The `useInsecureHttpParser` option forces\\nthe HTTP parser to ignore certain errors which lets you scrape such websites.\\nHowever, it will also open your application to some security vulnerabilities,\\nalthough the risk should be negligible as these vulnerabilities mainly relate to server applications, not clients.\\nLearn more in this [blog post](https://snyk.io/blog/node-js-release-fixes-a-critical-http-security-vulnerability/)."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":70,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2026,"name":"useMobileVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true`, the function uses User-Agent of a mobile browser."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":54,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2090,"name":"username","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.username"}}],"groups":[{"title":"Properties","kind":1024,"children":[2029,2036,2093,2040,2088,2101,2084,2042,2025,2100,2038,2083,2045,2095,2103,2086,2041,2037,2023,2021,2085,2092,2102,2043,2027,2105,2033,2024,2099,2109,2087,2020,2094,2107,2096,2091,2039,2022,2035,2104,2106,2098,2044,2031,2108,2032,2097,2089,2034,2019,2030,2028,2026,2090]}],"sources":[{"fileName":"packages/core/src/utils_request.ts","line":12,"character":17}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"OptionsInit","package":"got-cjs","name":"GotOptionsInit"},{"type":"literal","value":"json"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"}],"permalink":"/apify-ts/api/next/core/interface/RequestAsBrowserOptions","previousId":1140,"nextId":1151},{"id":1151,"name":"RequestListOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":1157,"name":"keepDuplicateUrls","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"By default, `RequestList` will deduplicate the provided URLs. Default deduplication is based\\non the `uniqueKey` property of passed source {@link Request} objects.","text":"If the property is not present, it is generated by normalizing the URL. If present, it is kept intact.\\nIn any case, only one request per `uniqueKey` is added to the `RequestList` resulting in removal\\nof duplicate URLs / unique keys.\\n\\nSetting `keepDuplicateUrls` to `true` will append an additional identifier to the `uniqueKey`\\nof each request that does not already include a `uniqueKey`. Therefore, duplicate\\nURLs will be kept in the list. It does not protect the user from having duplicates in user set\\n`uniqueKey`s however. It is the user\'s responsibility to ensure uniqueness of their unique keys\\nif they wish to keep more than just a single copy in the `RequestList`.","tags":[{"tag":"default","text":"false\\n"}]},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":156,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1155,"name":"persistRequestsKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Identifies the key in the default key-value store under which the `RequestList` persists its\\nRequests during the {@link RequestList.initialize} call.\\nThis is necessary if `persistStateKey` is set and the source URLs might potentially change,\\nto ensure consistency of the source URLs and state object. However, it comes with some\\nstorage and performance overheads.","text":"If `persistRequestsKey` is not set, {@link RequestList.initialize} will always fetch the sources\\nfrom their origin, check that they are consistent with the restored state (if any)\\nand throw an error if they are not.\\n"},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":119,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1154,"name":"persistStateKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Identifies the key in the default key-value store under which `RequestList` periodically stores its\\nstate (i.e. which URLs were crawled and which not).\\nIf the actor is restarted, `RequestList` will read the state\\nand continue where it left off.","text":"If `persistStateKey` is not set, `RequestList` will always start from the beginning,\\nand all the source URLs will be crawled again.\\n"},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":106,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1152,"name":"sources","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of sources of URLs for the {@link RequestList}. It can be either an array of strings,\\nplain objects that define at least the `url` property, or an array of {@link Request} instances.","text":"**IMPORTANT:** The `sources` array will be consumed (left empty) after `RequestList` initializes.\\nThis is a measure to prevent memory leaks in situations when millions of sources are\\nadded.\\n\\nAdditionally, the `requestsFromUrl` property may be used instead of `url`,\\nwhich will instruct `RequestList` to download the source URLs from a given remote location.\\nThe URLs will be parsed from the received response.\\n\\n```\\n[\\n    // A single URL\\n    \'http://example.com/a/b\',\\n\\n    // Modify Request options\\n    { method: PUT, \'https://example.com/put, payload: { foo: \'bar\' }}\\n\\n    // Batch import of URLs from a file hosted on the web,\\n    // where the URLs should be requested using the HTTP POST request\\n    { method: \'POST\', requestsFromUrl: \'http://example.com/urls.txt\' },\\n\\n    // Batch import from remote file, using a specific regular expression to extract the URLs.\\n    { requestsFromUrl: \'http://example.com/urls.txt\', regex: /https:\\\\/\\\\/example.com\\\\/.+/ },\\n\\n    // Get list of URLs from a Google Sheets document. Just add \\"/gviz/tq?tqx=out:csv\\" to the Google Sheet URL.\\n    // For details, see https://help.apify.com/en/articles/2906022-scraping-a-list-of-urls-from-a-google-sheets-document\\n    { requestsFromUrl: \'https://docs.google.com/spreadsheets/d/1GA5sSQhQjB_REes8I5IKg31S-TuRcznWOPjcpNqtxmU/gviz/tq?tqx=out:csv\' }\\n]\\n```\\n"},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":53,"character":4}],"type":{"type":"array","elementType":{"type":"reference","id":1245,"name":"Source"}}},{"id":1153,"name":"sourcesFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A function that will be called to get the sources for the `RequestList`, but only if `RequestList`\\nwas not able to fetch their persisted version (see {@link RequestListOptions.persistRequestsKey}).\\nIt must return an `Array` of {@link Request} or {@link RequestOptions}.","text":"This is very useful in a scenario when getting the sources is a resource intensive or time consuming\\ntask, such as fetching URLs from multiple sitemaps or parsing URLs from large datasets. Using the\\n`sourcesFunction` in combination with `persistStateKey` and `persistRequestsKey` will allow you to\\nfetch and parse those URLs only once, saving valuable time when your actor migrates or restarts.\\n\\nIf both {@link RequestListOptions.sources} and {@link RequestListOptions.sourcesFunction} are provided,\\nthe sources returned by the function will be added after the `sources`.\\n\\n**Example:**\\n```javascript\\n// Let\'s say we want to scrape URLs extracted from sitemaps.\\n\\nconst sourcesFunction = async () => {\\n    // With super large sitemaps, this operation could take very long\\n    // and big websites typically have multiple sitemaps.\\n    const sitemaps = await downloadHugeSitemaps();\\n    return parseUrlsFromSitemaps(sitemaps);\\n}\\n\\n// Sitemaps can change in real-time, so it\'s important to persist\\n// the URLs we collected. Otherwise we might lose our scraping\\n// state in case of an actor migration / failure / time-out.\\nconst requestList = new RequestList({\\n    sourcesFunction,\\n    persistStateKey: \'state-key\',\\n    persistRequestsKey: \'requests-key\',\\n})\\n\\n// The sourcesFunction is called now and the Requests are persisted.\\n// If something goes wrong and we need to start again, RequestList\\n// will load the persisted Requests from storage and will NOT\\n// call the sourcesFunction again, saving time and resources.\\nawait requestList.initialize();\\n```\\n"},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":95,"character":4}],"type":{"type":"reference","id":1249,"name":"RequestListSourcesFunction"}},{"id":1156,"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The state object that the `RequestList` will be initialized from.\\nIt is in the form as returned by `RequestList.getState()`, such as follows:","text":"```\\n{\\n    nextIndex: 5,\\n    nextUniqueKey: \'unique-key-5\'\\n    inProgress: {\\n      \'unique-key-1\': true,\\n      \'unique-key-4\': true,\\n    },\\n}\\n```\\n\\nNote that the preferred (and simpler) way to persist the state of crawling of the `RequestList`\\nis to use the `stateKeyPrefix` parameter instead.\\n"},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":139,"character":4}],"type":{"type":"reference","id":1241,"name":"RequestListState"}}],"groups":[{"title":"Properties","kind":1024,"children":[1157,1155,1154,1152,1153,1156]}],"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":19,"character":17}],"permalink":"/apify-ts/api/next/core/interface/RequestListOptions","previousId":2018,"nextId":1241},{"id":1241,"name":"RequestListState","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"Represents state of a {@link RequestList}. It can be used to resume a {@link RequestList} which has been previously processed.\\nYou can obtain the state by calling {@link RequestList.getState} and receive an object with\\nthe following structure:","text":"```\\n{\\n    nextIndex: 5,\\n    nextUniqueKey: \'unique-key-5\'\\n    inProgress: {\\n        \'unique-key-1\': true,\\n        \'unique-key-4\': true\\n    },\\n}\\n```\\n"},"children":[{"id":1244,"name":"inProgress","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Array of request keys representing those that being processed at the moment."},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":904,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":1242,"name":"nextIndex","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Position of the next request to be processed."},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":898,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":1243,"name":"nextUniqueKey","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Key of the next request to be processed."},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":901,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[1244,1242,1243]}],"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":895,"character":17}],"permalink":"/apify-ts/api/next/core/interface/RequestListState","previousId":1151,"nextId":1649},{"id":1649,"name":"RequestOptions","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"Specifies required and optional fields for constructing a {@link Request}."},"children":[{"id":1654,"name":"headers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"HTTP headers in the following format:\\n```\\n{\\n    Accept: \'text/html\',\\n    \'Content-Type\': \'application/json\'\\n}\\n```"},"sources":[{"fileName":"packages/core/src/request.ts","line":280,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"id":1656,"name":"keepUrlFragment","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `false` then the hash part of a URL is removed when computing the `uniqueKey` property.\\nFor example, this causes the `http://www.example.com#foo` and `http://www.example.com#bar` URLs\\nto have the same `uniqueKey` of `http://www.example.com` and thus the URLs are considered equal.\\nNote that this option only has an effect if `uniqueKey` is not set.","tags":[{"tag":"default","text":"false\\n"}]},"sources":[{"fileName":"packages/core/src/request.ts","line":295,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1652,"name":"method","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"default","text":"\'GET\'"}]},"sources":[{"fileName":"packages/core/src/request.ts","line":266,"character":4}],"type":{"type":"union","types":[{"type":"reference","qualifiedName":"AllowedHttpMethods","package":"apify-client","name":"AllowedHttpMethods"},{"type":"literal","value":"get"},{"type":"literal","value":"head"},{"type":"literal","value":"post"},{"type":"literal","value":"put"},{"type":"literal","value":"delete"},{"type":"literal","value":"trace"},{"type":"literal","value":"options"},{"type":"literal","value":"connect"},{"type":"literal","value":"patch"}]}},{"id":1658,"name":"noRetry","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The `true` value indicates that the request will not be automatically retried on error.","tags":[{"tag":"default","text":"false\\n"}]},"sources":[{"fileName":"packages/core/src/request.ts","line":309,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1653,"name":"payload","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"HTTP request payload, e.g. for POST requests."},"sources":[{"fileName":"packages/core/src/request.ts","line":269,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1651,"name":"uniqueKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A unique key identifying the request.\\nTwo requests with the same `uniqueKey` are considered as pointing to the same URL.","text":"If `uniqueKey` is not provided, then it is automatically generated by normalizing the URL.\\nFor example, the URL of `HTTP://www.EXAMPLE.com/something/` will produce the `uniqueKey`\\nof `http://www.example.com/something`.\\n\\nThe `keepUrlFragment` option determines whether URL hash fragment is included in the `uniqueKey` or not.\\n\\nThe `useExtendedUniqueKey` options determines whether method and payload are included in the `uniqueKey`,\\nproducing a `uniqueKey` in the following format: `METHOD(payloadHash):normalizedUrl`. This is useful\\nwhen requests point to the same URL, but with different methods and payloads. For example: form submits.\\n\\nPass an arbitrary non-empty text value to the `uniqueKey` property\\nto override the default behavior and specify which URLs shall be considered equal.\\n"},"sources":[{"fileName":"packages/core/src/request.ts","line":263,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1650,"name":"url","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"URL of the web page to crawl. It must be a non-empty string."},"sources":[{"fileName":"packages/core/src/request.ts","line":244,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1657,"name":"useExtendedUniqueKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true` then the `uniqueKey` is computed not only from the URL, but also from the method and payload\\nproperties. This is useful when making requests to the same URL that are differentiated by method\\nor payload, such as form submit navigations in browsers.","tags":[{"tag":"default","text":"false\\n"}]},"sources":[{"fileName":"packages/core/src/request.ts","line":303,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1655,"name":"userData","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Custom user data assigned to the request. Use this to save any request related data to the\\nrequest\'s scope, keeping them accessible on retries, failures etc."},"sources":[{"fileName":"packages/core/src/request.ts","line":286,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}}],"groups":[{"title":"Properties","kind":1024,"children":[1654,1656,1652,1658,1653,1651,1650,1657,1655]}],"sources":[{"fileName":"packages/core/src/request.ts","line":241,"character":17}],"permalink":"/apify-ts/api/next/core/interface/RequestOptions","previousId":1241,"nextId":1268},{"id":1268,"name":"RequestQueueOperationOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":1269,"name":"forefront","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to `true`:\\n  - while adding the request to the queue: the request will be added to the foremost position in the queue.\\n  - while reclaiming the request: the request will be placed to the beginning of the queue, so that it\'s returned\\n  in the next call to {@link RequestQueue.fetchNextRequest}.\\nBy default, it\'s put to the end of the queue.","tags":[{"tag":"default","text":"false\\n"}]},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":98,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","kind":1024,"children":[1269]}],"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":89,"character":17}],"permalink":"/apify-ts/api/next/core/interface/RequestQueueOperationOptions","previousId":1649,"nextId":1338},{"id":1338,"name":"RequestQueueOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":1342,"name":"client","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":693,"character":4}],"type":{"type":"union","types":[{"type":"reference","qualifiedName":"ApifyClient","package":"apify-client","name":"ApifyClient"},{"type":"reference","qualifiedName":"ApifyStorageLocal","package":"@apify/storage-local","name":"ApifyStorageLocal"}]}},{"id":1339,"name":"id","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":690,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1341,"name":"isLocal","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":692,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1340,"name":"name","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":691,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[1342,1339,1341,1340]}],"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":689,"character":17}],"permalink":"/apify-ts/api/next/core/interface/RequestQueueOptions","previousId":1268,"nextId":653},{"id":653,"name":"RequestTransform","kind":256,"kindString":"Interface","flags":{},"sources":[{"fileName":"packages/core/src/enqueue_links/shared.ts","line":101,"character":17}],"signatures":[{"id":654,"name":"RequestTransform","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Takes an Apify {@link RequestOptions} object and changes it\'s attributes in a desired way. This user-function is used\\n{@link utils.enqueueLinks} to modify requests before enqueuing them.","returns":"The modified request options to enqueue.\\n"},"parameters":[{"id":655,"name":"original","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Request options to be modified."},"type":{"type":"reference","id":1649,"name":"RequestOptions"}}],"type":{"type":"reference","id":1649,"name":"RequestOptions"}}],"permalink":"/apify-ts/api/next/core/interface/RequestTransform","previousId":1338,"nextId":687},{"id":687,"name":"SessionOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":700,"name":"cookieJar","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":91,"character":4}],"type":{"type":"reference","qualifiedName":"CookieJar","package":"@types/tough-cookie","name":"CookieJar"}},{"id":693,"name":"createdAt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date of creation."},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":68,"character":4}],"type":{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}},{"id":699,"name":"errorScore","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":90,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":692,"name":"errorScoreDecrement","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"It is used for healing the session.\\nFor example: if your session is marked bad two times, but it is successful on the third attempt it\'s errorScore\\nis decremented by this number.","tags":[{"tag":"default","text":"0.5\\n"}]},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":65,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":694,"name":"expiresAt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date of expiration."},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":71,"character":4}],"type":{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}},{"id":688,"name":"id","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Id of session used for generating fingerprints. It is used as proxy session name."},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":39,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":698,"name":"log","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":89,"character":4}],"type":{"type":"reference","id":2114,"qualifiedName":"Log","package":"@apify/log","name":"Log"}},{"id":689,"name":"maxAgeSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Number of seconds after which the session is considered as expired.","tags":[{"tag":"default","text":"3000\\n"}]},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":45,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":691,"name":"maxErrorScore","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum number of marking session as blocked usage.\\nIf the `errorScore` reaches the `maxErrorScore` session is marked as block and it is thrown away.\\nIt starts at 0. Calling the `markBad` function increases the `errorScore` by 1.\\nCalling the `markGood` will decrease the `errorScore` by `errorScoreDecrement`","tags":[{"tag":"default","text":"3\\n"}]},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":57,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":696,"name":"maxUsageCount","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Session should be used only a limited amount of times.\\nThis number indicates how many times the session is going to be used, before it is thrown away.","tags":[{"tag":"default","text":"50\\n"}]},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":84,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":697,"name":"sessionPool","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"SessionPool instance. Session will emit the `sessionRetired` event on this instance."},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":87,"character":4}],"type":{"type":"reference","id":786,"name":"SessionPool"}},{"id":695,"name":"usageCount","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates how many times the session has been used.","tags":[{"tag":"default","text":"0\\n"}]},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":77,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":690,"name":"userData","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Object where custom user data can be stored. For example custom headers."},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":48,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}}],"groups":[{"title":"Properties","kind":1024,"children":[700,693,699,692,694,688,698,689,691,696,697,695,690]}],"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":36,"character":17}],"permalink":"/apify-ts/api/next/core/interface/SessionOptions","previousId":653,"nextId":778},{"id":778,"name":"SessionPoolOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":783,"name":"createSessionFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Custom function that should return `Session` instance.\\nAny error thrown from this function will terminate the process.\\nFunction receives `SessionPool` instance as a parameter"},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":47,"character":4}],"type":{"type":"reference","id":772,"name":"CreateSession"}},{"id":784,"name":"forceCloud","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to `true` then the function uses cloud storage usage even if the `APIFY_LOCAL_STORAGE_DIR`\\nenvironment variable is set. This way it is possible to combine local and cloud storage.","text":"**Note:** If you use `forceCloud`, it is recommended to also set the `persistStateKeyValueStoreId` option, as otherwise the\\n`KeyValueStore` will be unnamed!","tags":[{"tag":"default","text":"false\\n"}]},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":57,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":785,"name":"log","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":58,"character":4}],"type":{"type":"reference","id":2114,"qualifiedName":"Log","package":"@apify/log","name":"Log"}},{"id":779,"name":"maxPoolSize","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum size of the pool. Indicates how many sessions are rotated.","tags":[{"tag":"default","text":"1000\\n"}]},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":28,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":782,"name":"persistStateKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Session pool persists it\'s state under this key in Key value store.","tags":[{"tag":"default","text":"SESSION_POOL_STATE\\n"}]},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":40,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":781,"name":"persistStateKeyValueStoreId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Name or Id of `KeyValueStore` where is the `SessionPool` state stored."},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":34,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":780,"name":"sessionOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The configuration options for {@link Session} instances."},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":31,"character":4}],"type":{"type":"reference","id":687,"name":"SessionOptions"}}],"groups":[{"title":"Properties","kind":1024,"children":[783,784,785,779,782,781,780]}],"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":23,"character":17}],"permalink":"/apify-ts/api/next/core/interface/SessionPoolOptions","previousId":687,"nextId":676},{"id":676,"name":"SessionState","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"Persistable {@link Session} state."},"children":[{"id":678,"name":"cookieJar","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":25,"character":4}],"type":{"type":"reference","qualifiedName":"CookieJar.Serialized","package":"@types/tough-cookie","name":"Serialized"}},{"id":686,"name":"createdAt","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":680,"name":"errorScore","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":27,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":682,"name":"errorScoreDecrement","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":29,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":685,"name":"expiresAt","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":32,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":677,"name":"id","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":681,"name":"maxErrorScore","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":28,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":684,"name":"maxUsageCount","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":31,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":683,"name":"usageCount","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":30,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":679,"name":"userData","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":26,"character":4}],"type":{"type":"intrinsic","name":"object"}}],"groups":[{"title":"Properties","kind":1024,"children":[678,686,680,682,685,677,681,684,683,679]}],"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":23,"character":17}],"permalink":"/apify-ts/api/next/core/interface/SessionState","previousId":778,"nextId":341},{"id":341,"name":"SnapshotterOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":343,"name":"clientSnapshotIntervalSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Defines the interval of checking the current state\\nof the remote API client.","tags":[{"tag":"default","text":"1\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":28,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":345,"name":"cpuSnapshotIntervalSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Defines the interval of measuring CPU usage.\\nThis is only used when running locally. On the Apify platform,\\nthe statistics are provided externally at a fixed interval.","tags":[{"tag":"default","text":"1\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":43,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":342,"name":"eventLoopSnapshotIntervalSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Defines the interval of measuring the event loop response time.","tags":[{"tag":"default","text":"0.5\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":21,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":351,"name":"log","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":83,"character":4}],"type":{"type":"reference","id":2114,"qualifiedName":"Log","package":"@apify/log","name":"Log"}},{"id":344,"name":"maxBlockedMillis","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum allowed delay of the event loop in milliseconds.\\nExceeding this limit overloads the event loop.","tags":[{"tag":"default","text":"50\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":35,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":349,"name":"maxClientErrors","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Defines the maximum number of new rate limit errors within\\nthe given interval.","tags":[{"tag":"default","text":"1\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":74,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":346,"name":"maxUsedCpuRatio","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Defines the maximum usage of CPU.\\nExceeding this limit overloads the CPU.","tags":[{"tag":"default","text":"0.95\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":50,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":348,"name":"maxUsedMemoryRatio","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Defines the maximum ratio of total memory that can be used.\\nExceeding this limit overloads the memory.","tags":[{"tag":"default","text":"0.7\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":67,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":347,"name":"memorySnapshotIntervalSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Defines the interval of measuring memory consumption.\\nThis is only used when running locally. On the Apify platform,\\nthe statistics are provided externally at a fixed interval.\\nThe measurement itself is resource intensive (25 - 50ms async).\\nTherefore, setting this interval below 1 second is not recommended.","tags":[{"tag":"default","text":"1\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":350,"name":"snapshotHistorySecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets the interval in seconds for which a history of resource snapshots\\nwill be kept. Increasing this to very high numbers will affect performance.","tags":[{"tag":"default","text":"60\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":81,"character":4}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[343,345,342,351,344,349,346,348,347,350]}],"sources":[{"fileName":"packages/core/src/autoscaling/snapshotter.ts","line":16,"character":17}],"permalink":"/apify-ts/api/next/core/interface/SnapshotterOptions","previousId":676,"nextId":591},{"id":591,"name":"StatisticPersistedState","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"Format of the persisted stats"},"children":[{"id":611,"name":"crawlerFinishedAt","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":348,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}]},"inheritedFrom":{"type":"reference","name":"Omit.crawlerFinishedAt"}},{"id":601,"name":"crawlerLastStartTimestamp","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":330,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":600,"name":"crawlerRuntimeMillis","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":329,"character":4}],"type":{"type":"intrinsic","name":"number"},"overwrites":{"type":"reference","name":"Omit.crawlerRuntimeMillis"}},{"id":610,"name":"crawlerStartedAt","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":347,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}]},"inheritedFrom":{"type":"reference","name":"Omit.crawlerStartedAt"}},{"id":594,"name":"requestAvgFailedDurationMillis","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":323,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":595,"name":"requestAvgFinishedDurationMillis","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":324,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":609,"name":"requestMaxDurationMillis","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":344,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Omit.requestMaxDurationMillis"}},{"id":608,"name":"requestMinDurationMillis","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":343,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Omit.requestMinDurationMillis"}},{"id":592,"name":"requestRetryHistogram","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":321,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":598,"name":"requestTotalDurationMillis","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":327,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":603,"name":"requestTotalFailedDurationMillis","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":345,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Omit.requestTotalFailedDurationMillis"}},{"id":605,"name":"requestTotalFinishedDurationMillis","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":346,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Omit.requestTotalFinishedDurationMillis"}},{"id":604,"name":"requestsFailed","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":339,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Omit.requestsFailed"}},{"id":597,"name":"requestsFailedPerMinute","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":326,"character":4}],"type":{"type":"intrinsic","name":"number"},"overwrites":{"type":"reference","name":"Omit.requestsFailedPerMinute"}},{"id":606,"name":"requestsFinished","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":338,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Omit.requestsFinished"}},{"id":596,"name":"requestsFinishedPerMinute","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":325,"character":4}],"type":{"type":"intrinsic","name":"number"},"overwrites":{"type":"reference","name":"Omit.requestsFinishedPerMinute"}},{"id":607,"name":"requestsRetries","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":340,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Omit.requestsRetries"}},{"id":599,"name":"requestsTotal","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":328,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":593,"name":"statsId","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":322,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":602,"name":"statsPersistedAt","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":331,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[611,601,600,610,594,595,609,608,592,598,603,605,604,597,606,596,607,599,593,602]}],"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":320,"character":17}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","id":612,"name":"StatisticState"},{"type":"literal","value":"statsPersistedAt"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"}],"permalink":"/apify-ts/api/next/core/interface/StatisticPersistedState","previousId":341,"nextId":612},{"id":612,"name":"StatisticState","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"Contains the statistics state"},"children":[{"id":623,"name":"crawlerFinishedAt","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":348,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}]}},{"id":624,"name":"crawlerRuntimeMillis","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":349,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":622,"name":"crawlerStartedAt","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":347,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}]}},{"id":619,"name":"requestMaxDurationMillis","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":344,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":618,"name":"requestMinDurationMillis","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":343,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":620,"name":"requestTotalFailedDurationMillis","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":345,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":621,"name":"requestTotalFinishedDurationMillis","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":346,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":614,"name":"requestsFailed","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":339,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":616,"name":"requestsFailedPerMinute","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":341,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":613,"name":"requestsFinished","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":338,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":617,"name":"requestsFinishedPerMinute","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":342,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":615,"name":"requestsRetries","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":340,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":625,"name":"statsPersistedAt","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":350,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[623,624,622,619,618,620,621,614,616,613,617,615,625]}],"sources":[{"fileName":"packages/core/src/crawlers/statistics.ts","line":337,"character":17}],"permalink":"/apify-ts/api/next/core/interface/StatisticState","previousId":591,"nextId":1427},{"id":1427,"name":"StorageManagerOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":1429,"name":"config","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"SDK configuration instance, defaults to the static register."},"sources":[{"fileName":"packages/core/src/storages/storage_manager.ts","line":144,"character":4}],"type":{"type":"reference","id":1453,"name":"Configuration"}},{"id":1428,"name":"forceCloud","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to `true` then the cloud storage is used even if the `APIFY_LOCAL_STORAGE_DIR`\\nenvironment variable is set. This way it is possible to combine local and cloud storage.","tags":[{"tag":"default","text":"false\\n"}]},"sources":[{"fileName":"packages/core/src/storages/storage_manager.ts","line":139,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","kind":1024,"children":[1429,1428]}],"sources":[{"fileName":"packages/core/src/storages/storage_manager.ts","line":133,"character":17}],"permalink":"/apify-ts/api/next/core/interface/StorageManagerOptions","previousId":612,"nextId":441},{"id":441,"name":"SystemInfo","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"Represents the current status of the system."},"children":[{"id":446,"name":"clientInfo","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":14,"character":4}],"type":{"type":"reference","id":458,"name":"ClientInfo"}},{"id":445,"name":"cpuInfo","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":13,"character":4}],"type":{"type":"reference","id":458,"name":"ClientInfo"}},{"id":444,"name":"eventLoopInfo","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":12,"character":4}],"type":{"type":"reference","id":458,"name":"ClientInfo"}},{"id":442,"name":"isSystemIdle","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"If true, system is being overloaded."},"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":10,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":447,"name":"memCurrentBytes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":443,"name":"memInfo","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":11,"character":4}],"type":{"type":"reference","id":458,"name":"ClientInfo"}}],"groups":[{"title":"Properties","kind":1024,"children":[446,445,444,442,447,443]}],"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":8,"character":17}],"permalink":"/apify-ts/api/next/core/interface/SystemInfo","previousId":1427,"nextId":451},{"id":451,"name":"SystemStatusOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":452,"name":"currentHistorySecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Defines max age of snapshots used in the {@link SystemStatus.getCurrentStatus} measurement.","tags":[{"tag":"default","text":"5\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":38,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":456,"name":"maxClientOverloadedRatio","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets the maximum ratio of overloaded snapshots in a Client sample.\\nIf the sample exceeds this ratio, the system will be overloaded.","tags":[{"tag":"default","text":"0.3\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":455,"name":"maxCpuOverloadedRatio","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets the maximum ratio of overloaded snapshots in a CPU sample.\\nIf the sample exceeds this ratio, the system will be overloaded.","tags":[{"tag":"default","text":"0.4\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":59,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":454,"name":"maxEventLoopOverloadedRatio","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets the maximum ratio of overloaded snapshots in an event loop sample.\\nIf the sample exceeds this ratio, the system will be overloaded.","tags":[{"tag":"default","text":"0.6\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":453,"name":"maxMemoryOverloadedRatio","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets the maximum ratio of overloaded snapshots in a memory sample.\\nIf the sample exceeds this ratio, the system will be overloaded.","tags":[{"tag":"default","text":"0.2\\n"}]},"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":45,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":457,"name":"snapshotter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The `Snapshotter` instance to be queried for `SystemStatus`."},"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":71,"character":4}],"type":{"type":"reference","id":352,"name":"Snapshotter"}}],"groups":[{"title":"Properties","kind":1024,"children":[452,456,455,454,453,457]}],"sources":[{"fileName":"packages/core/src/autoscaling/system_status.ts","line":33,"character":17}],"permalink":"/apify-ts/api/next/core/interface/SystemStatusOptions","previousId":441,"nextId":1798},{"id":2110,"name":"AbortFunction","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":100,"character":12}],"type":{"type":"reflection","declaration":{"id":2111,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":100,"character":28}],"signatures":[{"id":2112,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2113,"name":"response","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IncomingMessage","package":"@types/node","name":"IncomingMessage"}}],"type":{"type":"intrinsic","name":"boolean"}}]}},"permalink":"/apify-ts/api/next/core#AbortFunction","previousId":1903,"nextId":1780},{"id":1780,"name":"CheerioRoot","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/utils.ts","line":46,"character":12}],"type":{"type":"reference","typeArguments":[{"type":"query","queryType":{"type":"reference","qualifiedName":"load","package":"cheerio","name":"load"}}],"qualifiedName":"ReturnType","package":"typescript","name":"ReturnType"},"permalink":"/apify-ts/api/next/core#CheerioRoot","previousId":2110,"nextId":1082},{"id":1082,"name":"KeyValueStoreValueTypes","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":11,"character":12}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"},{"type":"literal","value":null},{"type":"reference","qualifiedName":"global.Buffer","package":"@types/node","name":"Buffer"},{"type":"intrinsic","name":"string"}]},"permalink":"/apify-ts/api/next/core#KeyValueStoreValueTypes","previousId":1780,"nextId":652},{"id":652,"name":"PseudoUrlInput","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/enqueue_links/shared.ts","line":16,"character":12}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"},{"type":"reference","id":1596,"name":"PseudoUrl"},{"type":"reference","id":1609,"name":"PseudoUrlObject"}]},"permalink":"/apify-ts/api/next/core#PseudoUrlInput","previousId":1082,"nextId":1609},{"id":1609,"name":"PseudoUrlObject","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/pseudo_url.ts","line":151,"character":12}],"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","id":1649,"name":"RequestOptions"},{"type":"union","types":[{"type":"literal","value":"headers"},{"type":"literal","value":"method"},{"type":"literal","value":"payload"},{"type":"literal","value":"userData"}]}],"qualifiedName":"Pick","package":"typescript","name":"Pick"},{"type":"reflection","declaration":{"id":1610,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1611,"name":"purl","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/pseudo_url.ts","line":152,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[1611]}],"sources":[{"fileName":"packages/core/src/pseudo_url.ts","line":151,"character":100}]}}]},"permalink":"/apify-ts/api/next/core#PseudoUrlObject","previousId":652,"nextId":675},{"id":675,"name":"PuppeteerCookie","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session.ts","line":15,"character":12}],"type":{"type":"union","types":[{"type":"reference","qualifiedName":"Protocol.Network.Cookie","package":"devtools-protocol","name":"Protocol.Network.Cookie"},{"type":"reference","qualifiedName":"Cookie","package":"browser-pool","name":"BrowserPoolCookie"}]},"permalink":"/apify-ts/api/next/core#PuppeteerCookie","previousId":1609,"nextId":2014},{"id":2014,"name":"RequestAsBrowserResult","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":12}],"typeParameter":[{"id":2017,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"string"}}],"type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"IncomingMessage","package":"@types/node","name":"IncomingMessage"},{"type":"reflection","declaration":{"id":2015,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":2016,"name":"body","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":69}],"type":{"type":"reference","id":1806,"name":"T"}}],"groups":[{"title":"Properties","kind":1024,"children":[2016]}],"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":67}]}}]},"permalink":"/apify-ts/api/next/core#RequestAsBrowserResult","previousId":675,"nextId":1249},{"id":1249,"name":"RequestListSourcesFunction","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":910,"character":12}],"type":{"type":"reflection","declaration":{"id":1250,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":910,"character":41}],"signatures":[{"id":1251,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1245,"name":"Source"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}},"permalink":"/apify-ts/api/next/core#RequestListSourcesFunction","previousId":2014,"nextId":1245},{"id":1245,"name":"Source","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":908,"character":12}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","id":1649,"name":"RequestOptions"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},{"type":"reflection","declaration":{"id":1246,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1248,"name":"regex","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":908,"character":85}],"type":{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"}},{"id":1247,"name":"requestsFromUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":908,"character":59}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[1248,1247]}],"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":908,"character":57}]}}]},{"type":"reference","id":1626,"name":"Request"}]},"permalink":"/apify-ts/api/next/core#Source","previousId":1249,"nextId":1549},{"id":1549,"name":"ACTOR_EVENT_NAMES_EX","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"These events are just internal for Apify package, so we don\'t need them in apify-shared package."},"sources":[{"fileName":"packages/core/src/constants.ts","line":24,"character":13}],"type":{"type":"reflection","declaration":{"id":1550,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1555,"name":"ABORTING","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"node_modules/@apify/consts/consts.d.ts","line":18,"character":13}],"type":{"type":"literal","value":"aborting"}},{"id":1552,"name":"CPU_INFO","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"node_modules/@apify/consts/consts.d.ts","line":14,"character":13}],"type":{"type":"literal","value":"cpuInfo"}},{"id":1554,"name":"MIGRATING","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"node_modules/@apify/consts/consts.d.ts","line":16,"character":13}],"type":{"type":"literal","value":"migrating"}},{"id":1551,"name":"PERSIST_STATE","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'persistState\'"},{"id":1553,"name":"SYSTEM_INFO","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"node_modules/@apify/consts/consts.d.ts","line":15,"character":13}],"type":{"type":"literal","value":"systemInfo"}}],"groups":[{"title":"Properties","kind":1024,"children":[1555,1552,1554,1551,1553]}]}},"defaultValue":"...","permalink":"/apify-ts/api/next/core#ACTOR_EVENT_NAMES_EX","previousId":1245,"nextId":1556},{"id":1556,"name":"APIFY_API_BASE_URL","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"Base URL of Apify\'s API endpoints."},"sources":[{"fileName":"packages/core/src/constants.ts","line":29,"character":13}],"type":{"type":"literal","value":"https://api.apify.com/v2"},"defaultValue":"\'https://api.apify.com/v2\'","permalink":"/apify-ts/api/next/core#APIFY_API_BASE_URL","previousId":1549,"nextId":1557},{"id":1557,"name":"COUNTRY_CODE_REGEX","kind":32,"kindString":"Variable","flags":{},"sources":[{"fileName":"packages/core/src/constants.ts","line":31,"character":13}],"type":{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"},"defaultValue":"...","permalink":"/apify-ts/api/next/core#COUNTRY_CODE_REGEX","previousId":1556,"nextId":1543},{"id":1543,"name":"DEFAULT_USER_AGENT","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"The default user agent used by `Apify.launchPuppeteer`.\\nLast updated on 2020-05-22."},"sources":[{"fileName":"packages/core/src/constants.ts","line":8,"character":13}],"type":{"type":"literal","value":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.67 Safari/537.36"},"defaultValue":"\'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.67 Safari/537.36\'","permalink":"/apify-ts/api/next/core#DEFAULT_USER_AGENT","previousId":1557,"nextId":674},{"id":674,"name":"EVENT_SESSION_RETIRED","kind":32,"kindString":"Variable","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/events.ts","line":1,"character":13}],"type":{"type":"literal","value":"sessionRetired"},"defaultValue":"\'sessionRetired\'","permalink":"/apify-ts/api/next/core#EVENT_SESSION_RETIRED","previousId":1543,"nextId":1544},{"id":1544,"name":"EXIT_CODES","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"Exit codes for the actor process.\\nThe error codes must be in the range 1-128, to avoid collision with signal exits\\nand to ensure Docker will handle them correctly!"},"sources":[{"fileName":"packages/core/src/constants.ts","line":15,"character":13}],"type":{"type":"reflection","declaration":{"id":1545,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1548,"name":"ERROR_UNKNOWN","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"},"defaultValue":"92"},{"id":1547,"name":"ERROR_USER_FUNCTION_THREW","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"},"defaultValue":"91"},{"id":1546,"name":"SUCCESS","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"},"defaultValue":"0"}],"groups":[{"title":"Properties","kind":1024,"children":[1548,1547,1546]}]}},"defaultValue":"...","permalink":"/apify-ts/api/next/core#EXIT_CODES","previousId":674,"nextId":1558},{"id":1558,"name":"STATUS_CODES_BLOCKED","kind":32,"kindString":"Variable","flags":{},"sources":[{"fileName":"packages/core/src/constants.ts","line":33,"character":13}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}},"defaultValue":"...","permalink":"/apify-ts/api/next/core#STATUS_CODES_BLOCKED","previousId":1544,"nextId":1781},{"id":1781,"name":"URL_NO_COMMAS_REGEX","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"Default regular expression to match URLs in a string that may be plain text, JSON, CSV or other. It supports common URL characters\\nand does not support URLs containing commas or spaces. The URLs also may contain Unicode letters (not symbols)."},"sources":[{"fileName":"packages/core/src/utils.ts","line":52,"character":13}],"type":{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"},"defaultValue":"...","permalink":"/apify-ts/api/next/core#URL_NO_COMMAS_REGEX","previousId":1558,"nextId":1782},{"id":1782,"name":"URL_WITH_COMMAS_REGEX","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"Regular expression that, in addition to the default regular expression `URL_NO_COMMAS_REGEX`, supports matching commas in URL path and query.\\nNote, however, that this may prevent parsing URLs from comma delimited lists, or the URLs may become malformed."},"sources":[{"fileName":"packages/core/src/utils.ts","line":58,"character":13}],"type":{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"},"defaultValue":"...","permalink":"/apify-ts/api/next/core#URL_WITH_COMMAS_REGEX","previousId":1781,"nextId":235},{"id":235,"name":"events","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"Gets an instance of a Node.js\'\\n[EventEmitter](https://nodejs.org/api/events.html#events_class_eventemitter)\\nclass that emits various events from the SDK or the Apify platform.\\nThe event emitter is initialized by calling the {@link Apify.main} function.","text":"**Example usage:**\\n\\n```javascript\\nApify.events.on(\'cpuInfo\', (data) => {\\n  if (data.isCpuOverloaded) console.log(\'Oh no, the CPU is overloaded!\');\\n});\\n```\\n\\nThe following events are emitted:\\n\\n- `cpuInfo`: `{ \\"isCpuOverloaded\\": Boolean }`\\n  The event is emitted approximately every second\\n  and it indicates whether the actor is using the maximum of available CPU resources.\\n  If that\'s the case, the actor should not add more workload.\\n  For example, this event is used by the {@link AutoscaledPool} class.\\n- `migrating`: `void`\\n  Emitted when the actor running on the Apify platform is going to be migrated to another worker server soon.\\n  You can use it to persist the state of the actor and abort the run, to speed up migration.\\n  For example, this is used by the {@link RequestList} class.\\n- `aborting`: `void`\\n  When a user aborts an actor run on the Apify platform, they can choose to abort gracefully to allow\\n  the actor some time before getting killed. This graceful abort emits the `aborting` event which the SDK\\n  uses to gracefully stop running crawls and you can use it to do your own cleanup as well.\\n- `persistState`: `{ \\"isMigrating\\": Boolean }`\\n  Emitted in regular intervals (by default 60 seconds) to notify all components of Apify SDK that it is time to persist\\n  their state, in order to avoid repeating all work when the actor restarts.\\n  This event is automatically emitted together with the `migrating` event,\\n  in which case the `isMigrating` flag is set to `true`. Otherwise the flag is `false`.\\n  Note that the `persistState` event is provided merely for user convenience,\\n  you can achieve the same effect using `setInterval()` and listening for the `migrating` event.\\n"},"sources":[{"fileName":"packages/core/src/events.ts","line":45,"character":13}],"type":{"type":"reference","qualifiedName":"EventEmitter","package":"@types/node","name":"EventEmitter"},"defaultValue":"...","permalink":"/apify-ts/api/next/core#events","previousId":1782,"nextId":2566},{"id":2566,"name":"log","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@apify/log/index.d.ts","line":8,"character":14}],"type":{"type":"reference","id":2114,"qualifiedName":"Log","package":"@apify/log","name":"Log"},"permalink":"/apify-ts/api/next/core#log","previousId":235,"nextId":2567},{"id":2567,"name":"validators","kind":32,"kindString":"Variable","flags":{},"sources":[{"fileName":"packages/core/src/validators.ts","line":4,"character":13}],"type":{"type":"reflection","declaration":{"id":2568,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":2569,"name":"browserPage","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reflection","declaration":{"id":2570,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2571,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2572,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Dictionary"}}],"type":{"type":"reflection","declaration":{"id":2573,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":2575,"name":"message","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reflection","declaration":{"id":2576,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2577,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2578,"name":"label","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]}},"defaultValue":"..."},{"id":2574,"name":"validator","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"..."}],"groups":[{"title":"Properties","kind":1024,"children":[2575,2574]}]}}}]}},"defaultValue":"..."},{"id":2579,"name":"proxyConfiguration","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reflection","declaration":{"id":2580,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2581,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2582,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Dictionary"}}],"type":{"type":"reflection","declaration":{"id":2583,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":2585,"name":"message","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reflection","declaration":{"id":2586,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2587,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2588,"name":"label","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]}},"defaultValue":"..."},{"id":2584,"name":"validator","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"..."}],"groups":[{"title":"Properties","kind":1024,"children":[2585,2584]}]}}}]}},"defaultValue":"..."},{"id":2609,"name":"pseudoUrl","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reflection","declaration":{"id":2610,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2611,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2612,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Dictionary"}}],"type":{"type":"reflection","declaration":{"id":2613,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":2615,"name":"message","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reflection","declaration":{"id":2616,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2617,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2618,"name":"label","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]}},"defaultValue":"..."},{"id":2614,"name":"validator","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"..."}],"groups":[{"title":"Properties","kind":1024,"children":[2615,2614]}]}}}]}},"defaultValue":"..."},{"id":2589,"name":"requestList","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reflection","declaration":{"id":2590,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2591,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2592,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Dictionary"}}],"type":{"type":"reflection","declaration":{"id":2593,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":2595,"name":"message","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reflection","declaration":{"id":2596,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2597,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2598,"name":"label","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]}},"defaultValue":"..."},{"id":2594,"name":"validator","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"..."}],"groups":[{"title":"Properties","kind":1024,"children":[2595,2594]}]}}}]}},"defaultValue":"..."},{"id":2599,"name":"requestQueue","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reflection","declaration":{"id":2600,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2601,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2602,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Dictionary"}}],"type":{"type":"reflection","declaration":{"id":2603,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":2605,"name":"message","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reflection","declaration":{"id":2606,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2607,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2608,"name":"label","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]}},"defaultValue":"..."},{"id":2604,"name":"validator","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"..."}],"groups":[{"title":"Properties","kind":1024,"children":[2605,2604]}]}}}]}},"defaultValue":"..."}],"groups":[{"title":"Properties","kind":1024,"children":[2569,2579,2609,2589,2599]}]}},"defaultValue":"...","permalink":"/apify-ts/api/next/core#validators","previousId":2566},{"id":1662,"name":"createProxyConfiguration","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":525,"character":22}],"signatures":[{"id":1663,"name":"createProxyConfiguration","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a proxy configuration and returns a promise resolving to an instance\\nof the {@link ProxyConfiguration} class that is already initialized.","text":"Configures connection to a proxy server with the provided options. Proxy servers are used to prevent target websites from blocking\\nyour crawlers based on IP address rate limits or blacklists. Setting proxy configuration in your crawlers automatically configures\\nthem to use the selected proxies for all connections.\\n\\nFor more details and code examples, see the {@link ProxyConfiguration} class.\\n\\n```javascript\\n\\n// Returns initialized proxy configuration class\\nconst proxyConfiguration = await Apify.createProxyConfiguration({\\n    groups: [\'GROUP1\', \'GROUP2\'] // List of Apify proxy groups\\n    countryCode: \'US\'\\n});\\n\\nconst crawler = new Apify.CheerioCrawler({\\n  // ...\\n  proxyConfiguration,\\n  handlePageFunction: ({ proxyInfo }) => {\\n      const usedProxyUrl = proxyInfo.url; // Getting the proxy URL\\n  }\\n})\\n\\n```\\n\\nFor compatibility with existing Actor Input UI (Input Schema), this function\\nreturns `undefined` when the following object is passed as `proxyConfigurationOptions`.\\n\\n```\\n{ useApifyProxy: false }\\n```\\n"},"parameters":[{"id":1664,"name":"proxyConfigurationOptions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","id":1670,"name":"ProxyConfigurationOptions"},{"type":"reflection","declaration":{"id":1665,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1666,"name":"useApifyProxy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/proxy_configuration.ts","line":526,"character":61}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","kind":1024,"children":[1666]}]}}]},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","id":1686,"name":"ProxyConfiguration"},{"type":"intrinsic","name":"undefined"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/core/function/createProxyConfiguration","previousId":2181,"nextId":1761},{"id":1761,"name":"createRequestDebugInfo","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/utils.ts","line":470,"character":16}],"signatures":[{"id":1762,"name":"createRequestDebugInfo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a standardized debug info from request and response. This info is usually added to dataset under the hidden `#debug` field."},"parameters":[{"id":1763,"name":"request","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"(https://sdk.apify.com/docs/api/request) object."},"type":{"type":"reference","id":1626,"name":"Request"}},{"id":1764,"name":"response","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","qualifiedName":"IncomingMessage","package":"@types/node","name":"IncomingMessage"},{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"HTTPResponse","package":"puppeteer","name":"HTTPResponse"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"}]},"defaultValue":"{}"},{"id":1765,"name":"additionalFields","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"},"defaultValue":"{}"}],"type":{"type":"reference","name":"Dictionary"}}],"permalink":"/apify-ts/api/next/core/function/createRequestDebugInfo","previousId":1662,"nextId":1755},{"id":1755,"name":"downloadListOfUrls","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/utils.ts","line":346,"character":22}],"signatures":[{"id":1756,"name":"downloadListOfUrls","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a promise that resolves to an array of urls parsed from the resource available at the provided url.\\nOptionally, custom regular expression and encoding may be provided."},"parameters":[{"id":1757,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1791,"name":"DownloadListOfUrlsOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/core/function/downloadListOfUrls","previousId":1761,"nextId":626},{"id":626,"name":"enqueueLinks","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/enqueue_links/enqueue_links.ts","line":98,"character":22}],"signatures":[{"id":627,"name":"enqueueLinks","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"The function finds elements matching a specific CSS selector (HTML anchor (`<a>`) by default)\\neither in a Puppeteer page, or in a Cheerio object (parsed HTML),\\nand enqueues the URLs in their `href` attributes to the provided {@link RequestQueue}.\\nIf you\'re looking to find URLs in JavaScript heavy pages where links are not available\\nin `href` elements, but rather navigations are triggered in click handlers\\nsee {@link utils.puppeteer.enqueueLinksByClickingElements}.","text":"Optionally, the function allows you to filter the target links\' URLs using an array of {@link PseudoUrl} objects\\nand override settings of the enqueued {@link Request} objects.\\n\\n**Example usage**\\n\\n```javascript\\nawait Apify.utils.enqueueLinks({\\n  page,\\n  requestQueue,\\n  selector: \'a.product-detail\',\\n  pseudoUrls: [\\n      \'https://www.example.com/handbags/[.*]\',\\n      \'https://www.example.com/purses/[.*]\'\\n  ],\\n});\\n```\\n","returns":"\\n  Promise that resolves to an array of {@link QueueOperationInfo} objects.\\n"},"parameters":[{"id":628,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  All `enqueueLinks()` parameters are passed via an options object."},"type":{"type":"reference","id":629,"name":"EnqueueLinksOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1264,"name":"QueueOperationInfo"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/core/function/enqueueLinks","previousId":1755,"nextId":949},{"id":949,"name":"getCookiesFromResponse","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_utils.ts","line":7,"character":16}],"signatures":[{"id":950,"name":"getCookiesFromResponse","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":951,"name":"response","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","qualifiedName":"IncomingMessage","package":"@types/node","name":"IncomingMessage"},{"type":"reference","qualifiedName":"HTTPResponse","package":"puppeteer","name":"HTTPResponse"},{"type":"reflection","declaration":{"id":952,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":953,"name":"headers","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_utils.ts","line":7,"character":84}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}],"name":"Dictionary"}}],"groups":[{"title":"Properties","kind":1024,"children":[953]}]}}]}}],"type":{"type":"array","elementType":{"type":"reference","qualifiedName":"Cookie","package":"@types/tough-cookie","name":"Cookie"}}}],"permalink":"/apify-ts/api/next/core/function/getCookiesFromResponse","previousId":626,"nextId":1079},{"id":1079,"name":"getInput","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":436,"character":22}],"signatures":[{"id":1080,"name":"getInput","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the actor input value from the default {@link KeyValueStore} associated with the current actor run.","text":"This is just a convenient shortcut for {@link getValue | `keyValueStore.getValue(\'INPUT\')` }.\\nFor example, calling the following code:\\n```javascript\\nconst input = await Apify.getInput();\\n```\\n\\nis equivalent to:\\n```javascript\\nconst store = await Apify.openKeyValueStore();\\nawait store.getValue(\'INPUT\');\\n```\\n\\nNote that the `getInput()` function does not cache the value read from the key-value store.\\nIf you need to use the input multiple times in your actor,\\nit is far more efficient to read it once and store it locally.\\n\\nFor more information, see  {@link Apify.openKeyValueStore}\\nand {@link KeyValueStore.getValue}.\\n","returns":"\\n  Returns a promise that resolves to an object, string\\n  or [`Buffer`](https://nodejs.org/api/buffer.html), depending\\n  on the MIME content type of the record, or `null`\\n  if the record is missing.\\n"},"typeParameter":[{"id":1081,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"},{"type":"reference","qualifiedName":"global.Buffer","package":"@types/node","name":"Buffer"}]}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","id":1081,"name":"T"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/core/function/getInput","previousId":949,"nextId":1748},{"id":1748,"name":"getMemoryInfo","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/utils.ts","line":196,"character":22}],"signatures":[{"id":1749,"name":"getMemoryInfo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns memory statistics of the process and the system, see {@link MemoryInfo}.","text":"If the process runs inside of Docker, the `getMemoryInfo` gets container memory limits,\\notherwise it gets system memory limits.\\n\\nBeware that the function is quite inefficient because it spawns a new process.\\nTherefore you shouldn\'t call it too often, like more than once per second.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","id":1785,"name":"MemoryInfo"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/core/function/getMemoryInfo","previousId":1079,"nextId":1069},{"id":1069,"name":"getValue","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":366,"character":22}],"signatures":[{"id":1070,"name":"getValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets a value from the default {@link KeyValueStore} associated with the current actor run.","text":"This is just a convenient shortcut for {@link KeyValueStore.getValue}.\\nFor example, calling the following code:\\n```javascript\\nconst value = await Apify.getValue(\'my-key\');\\n```\\n\\nis equivalent to:\\n```javascript\\nconst store = await Apify.openKeyValueStore();\\nconst value = await store.getValue(\'my-key\');\\n```\\n\\nTo store the value to the default key-value store, you can use the {@link Apify.setValue} function.\\n\\nFor more information, see  {@link Apify.openKeyValueStore}\\nand  {@link KeyValueStore.getValue}.\\n","returns":"\\n  Returns a promise that resolves to an object, string\\n  or [`Buffer`](https://nodejs.org/api/buffer.html), depending\\n  on the MIME content type of the record, or `null`\\n  if the record is missing.\\n"},"typeParameter":[{"id":1071,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1072,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  Unique record key."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","id":1071,"name":"T"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/core/function/getValue","previousId":1748,"nextId":1623},{"id":1623,"name":"hashPayload","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/request.ts","line":12,"character":16}],"signatures":[{"id":1624,"name":"hashPayload","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1625,"name":"payload","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"BinaryLike","package":"@types/node","name":"BinaryLike"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/apify-ts/api/next/core/function/hashPayload","previousId":1069,"nextId":1758},{"id":1758,"name":"htmlToText","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/utils.ts","line":410,"character":16}],"signatures":[{"id":1759,"name":"htmlToText","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"The function converts a HTML document to a plain text.","text":"The plain text generated by the function is similar to a text captured\\nby pressing Ctrl+A and Ctrl+C on a page when loaded in a web browser.\\nThe function doesn\'t aspire to preserve the formatting or to be perfectly correct with respect to HTML specifications.\\nHowever, it attempts to generate newlines and whitespaces in and around HTML elements\\nto avoid merging distinct parts of text and thus enable extraction of data from the text (e.g. phone numbers).\\n\\n**Example usage**\\n```javascript\\nconst text = htmlToText(\'<html><body>Some text</body></html>\');\\nconsole.log(text);\\n```\\n\\nNote that the function uses [cheerio](https://www.npmjs.com/package/cheerio) to parse the HTML.\\nOptionally, to avoid duplicate parsing of HTML and thus improve performance, you can pass\\nan existing Cheerio object to the function instead of the HTML text. The HTML should be parsed\\nwith the `decodeEntities` option set to `true`. For example:\\n\\n```javascript\\nconst cheerio = require(\'cheerio\');\\nconst html = \'<html><body>Some text</body></html>\';\\nconst text = htmlToText(cheerio.load(html, { decodeEntities: true }));\\n```","returns":"Plain text\\n"},"parameters":[{"id":1760,"name":"html","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"HTML text or parsed HTML represented using a [cheerio](https://www.npmjs.com/package/cheerio) function."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"CheerioAPI","package":"cheerio","name":"CheerioAPI"}]}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/apify-ts/api/next/core/function/htmlToText","previousId":1623,"nextId":1750},{"id":1750,"name":"isAtHome","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/utils.ts","line":318,"character":16}],"signatures":[{"id":1751,"name":"isAtHome","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns `true` when code is running on Apify platform and `false` otherwise (for example locally)."},"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/apify-ts/api/next/core/function/isAtHome","previousId":1758,"nextId":1741},{"id":1741,"name":"isDocker","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/utils.ts","line":111,"character":16}],"signatures":[{"id":1742,"name":"isDocker","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a `Promise` that resolves to true if the code is running in a Docker container."},"parameters":[{"id":1743,"name":"forceReset","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/core/function/isDocker","previousId":1750,"nextId":964},{"id":964,"name":"openDataset","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":463,"character":16}],"signatures":[{"id":965,"name":"openDataset","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens a dataset and returns a promise resolving to an instance of the {@link Dataset} class.","text":"Datasets are used to store structured data where each object stored has the same attributes,\\nsuch as online store products or real estate offers.\\nThe actual data is stored either on the local filesystem or in the cloud.\\n\\nFor more details and code examples, see the {@link Dataset} class.\\n","tags":[{"tag":"deprecated","text":"use `Dataset.open()` instead\\n"}]},"typeParameter":[{"id":966,"name":"Data","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"},"default":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}}],"parameters":[{"id":967,"name":"datasetIdOrName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":968,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1427,"name":"StorageManagerOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":992,"typeArguments":[{"type":"reference","id":966,"name":"Data"}],"name":"Dataset"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/core/function/openDataset","previousId":1741,"nextId":1065},{"id":1065,"name":"openKeyValueStore","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":334,"character":22}],"signatures":[{"id":1066,"name":"openKeyValueStore","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens a key-value store and returns a promise resolving to an instance of the {@link KeyValueStore} class.","text":"Key-value stores are used to store records or files, along with their MIME content type.\\nThe records are stored and retrieved using a unique key.\\nThe actual data is stored either on a local filesystem or in the Apify cloud.\\n\\nFor more details and code examples, see the {@link KeyValueStore} class.\\n","tags":[{"tag":"deprecated","text":"use `KeyValueStore.open()` instead\\n"}]},"parameters":[{"id":1067,"name":"storeIdOrName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":1068,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1427,"name":"StorageManagerOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1090,"name":"KeyValueStore"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/core/function/openKeyValueStore","previousId":964,"nextId":1144},{"id":1144,"name":"openRequestList","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_list.ts","line":875,"character":22}],"signatures":[{"id":1145,"name":"openRequestList","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens a request list and returns a promise resolving to an instance\\nof the {@link RequestList} class that is already initialized.","text":"{@link RequestList} represents a list of URLs to crawl, which is always stored in memory.\\nTo enable picking up where left off after a process restart, the request list sources\\nare persisted to the key-value store at initialization of the list. Then, while crawling,\\na small state object is regularly persisted to keep track of the crawling status.\\n\\nFor more details and code examples, see the {@link RequestList} class.\\n\\n**Example usage:**\\n\\n```javascript\\nconst sources = [\\n    \'https://www.example.com\',\\n    \'https://www.google.com\',\\n    \'https://www.bing.com\'\\n];\\n\\nconst requestList = await Apify.openRequestList(\'my-name\', sources);\\n```\\n","tags":[{"tag":"deprecated","text":"use `RequestList.open()` instead\\n"}]},"parameters":[{"id":1146,"name":"listName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  Name of the request list to be opened. Setting a name enables the `RequestList`\'s state to be persisted\\n  in the key-value store. This is useful in case of a restart or migration. Since `RequestList` is only\\n  stored in memory, a restart or migration wipes it clean. Setting a name will enable the `RequestList`\'s\\n  state to survive those situations and continue where it left off.\\n\\n  The name will be used as a prefix in key-value store, producing keys such as `NAME-REQUEST_LIST_STATE`\\n  and `NAME-REQUEST_LIST_SOURCES`.\\n\\n  If `null`, the list will not be persisted and will only be stored in memory. Process restart\\n  will then cause the list to be crawled again from the beginning. We suggest always using a name."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":1147,"name":"sources","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n An array of sources of URLs for the {@link RequestList}. It can be either an array of strings,\\n plain objects that define at least the `url` property, or an array of {@link Request} instances.\\n\\n **IMPORTANT:** The `sources` array will be consumed (left empty) after {@link RequestList} initializes.\\n This is a measure to prevent memory leaks in situations when millions of sources are\\n added.\\n\\n Additionally, the `requestsFromUrl` property may be used instead of `url`,\\n which will instruct {@link RequestList} to download the source URLs from a given remote location.\\n The URLs will be parsed from the received response. In this case you can limit the URLs\\n using `regex` parameter containing regular expression pattern for URLs to be included.\\n\\n For details, see the {@link RequestListOptions.sources}"},"type":{"type":"array","elementType":{"type":"reference","id":1245,"name":"Source"}}},{"id":1148,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1151,"name":"RequestListOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1158,"name":"RequestList"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/core/function/openRequestList","previousId":1065,"nextId":1255},{"id":1255,"name":"openRequestQueue","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/storages/request_queue.ts","line":685,"character":22}],"signatures":[{"id":1256,"name":"openRequestQueue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens a request queue and returns a promise resolving to an instance\\nof the {@link RequestQueue} class.","text":"{@link RequestQueue} represents a queue of URLs to crawl, which is stored either on local filesystem or in the cloud.\\nThe queue is used for deep crawling of websites, where you start with several URLs and then\\nrecursively follow links to other pages. The data structure supports both breadth-first\\nand depth-first crawling orders.\\n\\nFor more details and code examples, see the {@link RequestQueue} class.\\n","tags":[{"tag":"deprecated","text":"use `RequestQueue.open()` instead\\n"}]},"parameters":[{"id":1257,"name":"queueIdOrName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":1258,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":1427,"name":"StorageManagerOptions"},{"type":"literal","value":"config"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1270,"name":"RequestQueue"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/core/function/openRequestQueue","previousId":1144,"nextId":769},{"id":769,"name":"openSessionPool","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/session_pool/session_pool.ts","line":438,"character":22}],"signatures":[{"id":770,"name":"openSessionPool","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens a SessionPool and returns a promise resolving to an instance\\nof the {@link SessionPool} class that is already initialized.","text":"For more details and code examples, see the {@link SessionPool} class.\\n"},"parameters":[{"id":771,"name":"sessionPoolOptions","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":778,"name":"SessionPoolOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":786,"name":"SessionPool"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/core/function/openSessionPool","previousId":1255,"nextId":1777},{"id":1777,"name":"purgeLocalStorage","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/utils.ts","line":565,"character":22}],"signatures":[{"id":1778,"name":"purgeLocalStorage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Cleans up the local storage folder created when testing locally.\\nThis is useful in the event you are debugging your code locally.","text":"Be careful as this will remove the folder you provide and everything in it!\\n"},"parameters":[{"id":1779,"name":"folder","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/core/function/purgeLocalStorage","previousId":769,"nextId":969},{"id":969,"name":"pushData","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/storages/dataset.ts","line":493,"character":22}],"signatures":[{"id":970,"name":"pushData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Stores an object or an array of objects to the default {@link Dataset} of the current actor run.","text":"This is just a convenient shortcut for {@link Dataset.pushData}.\\nFor example, calling the following code:\\n```javascript\\nawait Apify.pushData({ myValue: 123 });\\n```\\n\\nis equivalent to:\\n```javascript\\nconst dataset = await Apify.openDataset();\\nawait dataset.pushData({ myValue: 123 });\\n```\\n\\nFor more information, see {@link Dataset.open} and {@link Dataset.pushData}\\n\\n**IMPORTANT**: Make sure to use the `await` keyword when calling `pushData()`,\\notherwise the actor process might finish before the data are stored!\\n"},"parameters":[{"id":971,"name":"item","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Object or array of objects containing data to be stored in the default dataset.\\nThe objects must be serializable to JSON and the JSON representation of each object must be smaller than 9MB.\\n"},"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"},{"type":"array","elementType":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/core/function/pushData","previousId":1777,"nextId":2010},{"id":2010,"name":"requestAsBrowser","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":144,"character":22}],"signatures":[{"id":2011,"name":"requestAsBrowser","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"**IMPORTANT:** This function uses an insecure version of HTTP parser by default\\nand also ignores SSL/TLS errors. This is very useful in scraping, because it allows bypassing\\ncertain anti-scraping walls, but it also exposes some vulnerability. For other than scraping\\nscenarios, please set `useInsecureHttpParser: false` and `ignoreSslErrors: false`.","text":"Sends a HTTP request that looks like a request sent by a web browser,\\nfully emulating browser\'s HTTP headers. It uses HTTP2 by default for Node 12+.\\n\\nThis function is useful for web scraping of websites that send the full HTML in the first response.\\nThanks to this function, the target web server has no simple way to find out the request\\nhasn\'t been sent by a human\'s web browser. Using a headless browser for such requests\\nis an order of magnitude more resource-intensive than this function.\\n\\nThe function emulates the Chrome and Firefox web browsers. If you want more control\\nover the browsers and their versions, use the `headerGeneratorOptions` property.\\nYou can find more info in the readme of the [`header-generator`](https://github.com/apify/header-generator) library.\\n\\nInternally, the function uses the [`got-scraping`](https://github.com/apify/got-scraping) library to perform the request.\\nAll `options` not recognized by this function are passed to it so see it for more details.\\n\\n**Example usage:**\\n```js\\nconst Apify = require(\'apify\');\\n\\nconst { utils: { requestAsBrowser } } = Apify;\\n\\n...\\n\\nconst response = await requestAsBrowser({ url: \'https://www.example.com/\' });\\n\\nconst html = response.body;\\nconst status = response.statusCode;\\nconst contentType = response.headers[\'content-type\'];\\n```\\n","returns":"The result can be various objects, but it will always be like a\\n[Node.js HTTP response stream](https://nodejs.org/api/http.html#http_class_http_incomingmessage)\\nwith a \'body\' property for the parsed response body, unless the \'stream\' option is used.\\n"},"typeParameter":[{"id":2012,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":2013,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"All `requestAsBrowser` configuration options.\\n"},"type":{"type":"reference","id":1807,"name":"RequestAsBrowserOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1803,"typeArguments":[{"type":"reference","id":1801,"name":"T"}],"name":"RequestAsBrowserResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/core/function/requestAsBrowser","previousId":969,"nextId":1073},{"id":1073,"name":"setValue","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/storages/key_value_store.ts","line":402,"character":22}],"signatures":[{"id":1074,"name":"setValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Stores or deletes a value in the default {@link KeyValueStore} associated with the current actor run.","text":"This is just a convenient shortcut for  {@link KeyValueStore.setValue}.\\nFor example, calling the following code:\\n```javascript\\nawait Apify.setValue(\'OUTPUT\', { foo: \\"bar\\" });\\n```\\n\\nis equivalent to:\\n```javascript\\nconst store = await Apify.openKeyValueStore();\\nawait store.setValue(\'OUTPUT\', { foo: \\"bar\\" });\\n```\\n\\nTo get a value from the default key-value store, you can use the  {@link Apify.getValue} function.\\n\\nFor more information, see  {@link Apify.openKeyValueStore}\\nand  {@link KeyValueStore.getValue}.\\n"},"typeParameter":[{"id":1075,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1076,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  Unique record key."},"type":{"type":"intrinsic","name":"string"}},{"id":1077,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  Record data, which can be one of the following values:\\n   - If `null`, the record in the key-value store is deleted.\\n   - If no `options.contentType` is specified, `value` can be any JavaScript object and it will be stringified to JSON.\\n   - If `options.contentType` is set, `value` is taken as is and it must be a `String` or [`Buffer`](https://nodejs.org/api/buffer.html).\\n  For any other value an error will be thrown."},"type":{"type":"reference","id":1075,"name":"T"}},{"id":1078,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1140,"name":"RecordOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/core/function/setValue","previousId":2010,"nextId":1752},{"id":1752,"name":"sleep","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/utils.ts","line":338,"character":16}],"signatures":[{"id":1753,"name":"sleep","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a `Promise` that resolves after a specific period of time. This is useful to implement waiting\\nin your code, e.g. to prevent overloading of target website or to avoid bot detection.","text":"**Example usage:**\\n\\n```\\nconst Apify = require(\'apify\');\\n\\n...\\n\\n// Sleep 1.5 seconds\\nawait Apify.utils.sleep(1500);\\n```"},"parameters":[{"id":1754,"name":"millis","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Period of time to sleep, in milliseconds. If not a positive number, the returned promise resolves immediately.\\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/core/function/sleep","previousId":1073,"nextId":1578}],"groups":[{"title":"Classes","kind":128,"children":[256,1453,992,1090,2114,2189,2313,2438,1686,1596,1626,1158,1270,701,786,352,536,462],"categories":[{"title":"CATEGORY","children":[1453,2114,2189,2313,2438]},{"title":"Crawlers","children":[536]},{"title":"Result Stores","children":[992,1090]},{"title":"Scaling","children":[256,1686,701,786,352,462]},{"title":"Sources","children":[1596,1626,1158,1270]}]},{"title":"Enumerations","kind":8,"children":[2181]},{"title":"Functions","kind":64,"children":[1662,1761,1755,626,949,1079,1748,1069,1623,1758,1750,1741,964,1065,1144,1255,769,1777,969,2010,1073,1752]},{"title":"Interfaces","kind":256,"children":[1578,236,458,1430,504,499,772,1034,1057,973,982,1039,1052,1045,1791,629,1795,1346,1128,1142,1135,2173,1785,1667,1670,1678,1660,1264,1343,1140,2018,1151,1241,1649,1268,1338,653,687,778,676,341,591,612,1427,441,451]},{"title":"Namespaces","kind":4,"children":[1798,1903]},{"title":"Type aliases","kind":4194304,"children":[2110,1780,1082,652,1609,675,2014,1249,1245]},{"title":"Variables","kind":32,"children":[1549,1556,1557,1543,674,1544,1558,1781,1782,235,2566,2567]}],"sources":[{"fileName":"packages/core/src/index.ts","line":1,"character":0}],"permalink":"/apify-ts/api/next/core"},"urlSlug":"core"}],"packageName":"@crawlers/core","packageVersion":"1.0.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":7,"name":"@crawlers/playwright","kind":2,"kindString":"Module","flags":{},"children":[{"id":4952,"name":"ACTOR_EVENT_NAMES_EX","kind":16777216,"kindString":"Reference","flags":{},"target":1549,"permalink":"/apify-ts/api/next/playwright-crawler#ACTOR_EVENT_NAMES_EX","previousId":4850,"nextId":4953},{"id":4953,"name":"APIFY_API_BASE_URL","kind":16777216,"kindString":"Reference","flags":{},"target":1556,"permalink":"/apify-ts/api/next/playwright-crawler#APIFY_API_BASE_URL","previousId":4952,"nextId":4961},{"id":4961,"name":"ActorRunWithOutput","kind":16777216,"kindString":"Reference","flags":{},"target":1578,"permalink":"/apify-ts/api/next/playwright-crawler#ActorRunWithOutput","previousId":4953,"nextId":4865},{"id":4865,"name":"AutoscaledPool","kind":16777216,"kindString":"Reference","flags":{},"target":256,"permalink":"/apify-ts/api/next/playwright-crawler#AutoscaledPool","previousId":4961,"nextId":4864},{"id":4864,"name":"AutoscaledPoolOptions","kind":16777216,"kindString":"Reference","flags":{},"target":236,"permalink":"/apify-ts/api/next/playwright-crawler#AutoscaledPoolOptions","previousId":4865,"nextId":5119},{"id":5119,"name":"BASIC_CRAWLER_TIMEOUT_BUFFER_SECS","kind":16777216,"kindString":"Reference","flags":{},"target":3012,"permalink":"/apify-ts/api/next/playwright-crawler#BASIC_CRAWLER_TIMEOUT_BUFFER_SECS","previousId":4864,"nextId":5117},{"id":5117,"name":"BasicCrawler","kind":16777216,"kindString":"Reference","flags":{},"target":2915,"permalink":"/apify-ts/api/next/playwright-crawler#BasicCrawler","previousId":5119,"nextId":5111},{"id":5111,"name":"BasicCrawlerCrawlingContext","kind":16777216,"kindString":"Reference","flags":{},"target":2872,"permalink":"/apify-ts/api/next/playwright-crawler#BasicCrawlerCrawlingContext","previousId":5117,"nextId":5113},{"id":5113,"name":"BasicCrawlerEnqueueLinksOptions","kind":16777216,"kindString":"Reference","flags":{},"target":2888,"permalink":"/apify-ts/api/next/playwright-crawler#BasicCrawlerEnqueueLinksOptions","previousId":5111,"nextId":5112},{"id":5112,"name":"BasicCrawlerHandleFailedRequestInput","kind":16777216,"kindString":"Reference","flags":{},"target":2881,"permalink":"/apify-ts/api/next/playwright-crawler#BasicCrawlerHandleFailedRequestInput","previousId":5113,"nextId":5116},{"id":5116,"name":"BasicCrawlerOptions","kind":16777216,"kindString":"Reference","flags":{},"target":2899,"permalink":"/apify-ts/api/next/playwright-crawler#BasicCrawlerOptions","previousId":5112,"nextId":5129},{"id":5129,"name":"BrowserCrawler","kind":16777216,"kindString":"Reference","flags":{},"target":3352,"permalink":"/apify-ts/api/next/playwright-crawler#BrowserCrawler","previousId":5116,"nextId":5125},{"id":5125,"name":"BrowserCrawlerEnqueueLinksOptions","kind":16777216,"kindString":"Reference","flags":{},"target":3308,"permalink":"/apify-ts/api/next/playwright-crawler#BrowserCrawlerEnqueueLinksOptions","previousId":5129,"nextId":5123},{"id":5123,"name":"BrowserCrawlerHandleFailedRequest","kind":16777216,"kindString":"Reference","flags":{},"target":3299,"permalink":"/apify-ts/api/next/playwright-crawler#BrowserCrawlerHandleFailedRequest","previousId":5125,"nextId":5122},{"id":5122,"name":"BrowserCrawlerHandleFailedRequestInput","kind":16777216,"kindString":"Reference","flags":{},"target":3292,"permalink":"/apify-ts/api/next/playwright-crawler#BrowserCrawlerHandleFailedRequestInput","previousId":5123,"nextId":5124},{"id":5124,"name":"BrowserCrawlerHandleRequest","kind":16777216,"kindString":"Reference","flags":{},"target":3303,"permalink":"/apify-ts/api/next/playwright-crawler#BrowserCrawlerHandleRequest","previousId":5122,"nextId":5128},{"id":5128,"name":"BrowserCrawlerOptions","kind":16777216,"kindString":"Reference","flags":{},"target":3323,"permalink":"/apify-ts/api/next/playwright-crawler#BrowserCrawlerOptions","previousId":5124,"nextId":5121},{"id":5121,"name":"BrowserCrawlingContext","kind":16777216,"kindString":"Reference","flags":{},"target":3277,"permalink":"/apify-ts/api/next/playwright-crawler#BrowserCrawlingContext","previousId":5128,"nextId":5126},{"id":5126,"name":"BrowserHook","kind":16777216,"kindString":"Reference","flags":{},"target":3309,"permalink":"/apify-ts/api/next/playwright-crawler#BrowserHook","previousId":5121,"nextId":5130},{"id":5130,"name":"BrowserLaunchContext","kind":16777216,"kindString":"Reference","flags":{},"target":3498,"permalink":"/apify-ts/api/next/playwright-crawler#BrowserLaunchContext","previousId":5126,"nextId":4954},{"id":4954,"name":"COUNTRY_CODE_REGEX","kind":16777216,"kindString":"Reference","flags":{},"target":1557,"permalink":"/apify-ts/api/next/playwright-crawler#COUNTRY_CODE_REGEX","previousId":5130,"nextId":4988},{"id":4988,"name":"CheerioRoot","kind":16777216,"kindString":"Reference","flags":{},"target":1780,"permalink":"/apify-ts/api/next/playwright-crawler#CheerioRoot","previousId":4954,"nextId":4870},{"id":4870,"name":"ClientInfo","kind":16777216,"kindString":"Reference","flags":{},"target":458,"permalink":"/apify-ts/api/next/playwright-crawler#ClientInfo","previousId":4988,"nextId":4949},{"id":4949,"name":"Configuration","kind":16777216,"kindString":"Reference","flags":{},"target":1453,"permalink":"/apify-ts/api/next/playwright-crawler#Configuration","previousId":4870,"nextId":4948},{"id":4948,"name":"ConfigurationOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1430,"permalink":"/apify-ts/api/next/playwright-crawler#ConfigurationOptions","previousId":4949,"nextId":4873},{"id":4873,"name":"CrawlerHandleFailedRequestInput","kind":16777216,"kindString":"Reference","flags":{},"target":504,"permalink":"/apify-ts/api/next/playwright-crawler#CrawlerHandleFailedRequestInput","previousId":4948,"nextId":4872},{"id":4872,"name":"CrawlingContext","kind":16777216,"kindString":"Reference","flags":{},"target":499,"permalink":"/apify-ts/api/next/playwright-crawler#CrawlingContext","previousId":4873,"nextId":5118},{"id":5118,"name":"CreateContextOptions","kind":16777216,"kindString":"Reference","flags":{},"target":3008,"permalink":"/apify-ts/api/next/playwright-crawler#CreateContextOptions","previousId":4872,"nextId":4897},{"id":4897,"name":"CreateSession","kind":16777216,"kindString":"Reference","flags":{},"target":772,"permalink":"/apify-ts/api/next/playwright-crawler#CreateSession","previousId":5118,"nextId":4950},{"id":4950,"name":"DEFAULT_USER_AGENT","kind":16777216,"kindString":"Reference","flags":{},"target":1543,"permalink":"/apify-ts/api/next/playwright-crawler#DEFAULT_USER_AGENT","previousId":4897,"nextId":4908},{"id":4908,"name":"Dataset","kind":16777216,"kindString":"Reference","flags":{},"target":992,"permalink":"/apify-ts/api/next/playwright-crawler#Dataset","previousId":4950,"nextId":4909},{"id":4909,"name":"DatasetConsumer","kind":16777216,"kindString":"Reference","flags":{},"target":1034,"permalink":"/apify-ts/api/next/playwright-crawler#DatasetConsumer","previousId":4908,"nextId":4913},{"id":4913,"name":"DatasetContent","kind":16777216,"kindString":"Reference","flags":{},"target":1057,"permalink":"/apify-ts/api/next/playwright-crawler#DatasetContent","previousId":4909,"nextId":4906},{"id":4906,"name":"DatasetDataOptions","kind":16777216,"kindString":"Reference","flags":{},"target":973,"permalink":"/apify-ts/api/next/playwright-crawler#DatasetDataOptions","previousId":4913,"nextId":4907},{"id":4907,"name":"DatasetIteratorOptions","kind":16777216,"kindString":"Reference","flags":{},"target":982,"permalink":"/apify-ts/api/next/playwright-crawler#DatasetIteratorOptions","previousId":4906,"nextId":4910},{"id":4910,"name":"DatasetMapper","kind":16777216,"kindString":"Reference","flags":{},"target":1039,"permalink":"/apify-ts/api/next/playwright-crawler#DatasetMapper","previousId":4907,"nextId":4912},{"id":4912,"name":"DatasetOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1052,"permalink":"/apify-ts/api/next/playwright-crawler#DatasetOptions","previousId":4910,"nextId":4911},{"id":4911,"name":"DatasetReducer","kind":16777216,"kindString":"Reference","flags":{},"target":1045,"permalink":"/apify-ts/api/next/playwright-crawler#DatasetReducer","previousId":4912,"nextId":4993},{"id":4993,"name":"DownloadListOfUrlsOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1791,"permalink":"/apify-ts/api/next/playwright-crawler#DownloadListOfUrlsOptions","previousId":4911,"nextId":4891},{"id":4891,"name":"EVENT_SESSION_RETIRED","kind":16777216,"kindString":"Reference","flags":{},"target":674,"permalink":"/apify-ts/api/next/playwright-crawler#EVENT_SESSION_RETIRED","previousId":4993,"nextId":4951},{"id":4951,"name":"EXIT_CODES","kind":16777216,"kindString":"Reference","flags":{},"target":1544,"permalink":"/apify-ts/api/next/playwright-crawler#EXIT_CODES","previousId":4891,"nextId":4883},{"id":4883,"name":"EnqueueLinksOptions","kind":16777216,"kindString":"Reference","flags":{},"target":629,"permalink":"/apify-ts/api/next/playwright-crawler#EnqueueLinksOptions","previousId":4951,"nextId":4994},{"id":4994,"name":"ExtractUrlsOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1795,"permalink":"/apify-ts/api/next/playwright-crawler#ExtractUrlsOptions","previousId":4883,"nextId":5127},{"id":5127,"name":"GotoFunction","kind":16777216,"kindString":"Reference","flags":{},"target":3316,"permalink":"/apify-ts/api/next/playwright-crawler#GotoFunction","previousId":4994,"nextId":5115},{"id":5115,"name":"HandleFailedRequest","kind":16777216,"kindString":"Reference","flags":{},"target":2894,"permalink":"/apify-ts/api/next/playwright-crawler#HandleFailedRequest","previousId":5127,"nextId":5114},{"id":5114,"name":"HandleRequest","kind":16777216,"kindString":"Reference","flags":{},"target":2889,"permalink":"/apify-ts/api/next/playwright-crawler#HandleRequest","previousId":5115,"nextId":4945},{"id":4945,"name":"IStorage","kind":16777216,"kindString":"Reference","flags":{},"target":1346,"permalink":"/apify-ts/api/next/playwright-crawler#IStorage","previousId":5114,"nextId":4921},{"id":4921,"name":"KeyConsumer","kind":16777216,"kindString":"Reference","flags":{},"target":1128,"permalink":"/apify-ts/api/next/playwright-crawler#KeyConsumer","previousId":4945,"nextId":4920},{"id":4920,"name":"KeyValueStore","kind":16777216,"kindString":"Reference","flags":{},"target":1090,"permalink":"/apify-ts/api/next/playwright-crawler#KeyValueStore","previousId":4921,"nextId":4924},{"id":4924,"name":"KeyValueStoreIteratorOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1142,"permalink":"/apify-ts/api/next/playwright-crawler#KeyValueStoreIteratorOptions","previousId":4920,"nextId":4922},{"id":4922,"name":"KeyValueStoreOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1135,"permalink":"/apify-ts/api/next/playwright-crawler#KeyValueStoreOptions","previousId":4924,"nextId":4918},{"id":4918,"name":"KeyValueStoreValueTypes","kind":16777216,"kindString":"Reference","flags":{},"target":1082,"permalink":"/apify-ts/api/next/playwright-crawler#KeyValueStoreValueTypes","previousId":4922,"nextId":5102},{"id":5102,"name":"Log","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":9}],"target":2114,"permalink":"/apify-ts/api/next/playwright-crawler#Log","previousId":4918,"nextId":5104},{"id":5104,"name":"LogLevel","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":29}],"target":2181,"permalink":"/apify-ts/api/next/playwright-crawler#LogLevel","previousId":5102,"nextId":5105},{"id":5105,"name":"Logger","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":39}],"target":2189,"permalink":"/apify-ts/api/next/playwright-crawler#Logger","previousId":5104,"nextId":5106},{"id":5106,"name":"LoggerJson","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":47}],"target":2313,"permalink":"/apify-ts/api/next/playwright-crawler#LoggerJson","previousId":5105,"nextId":5103},{"id":5103,"name":"LoggerOptions","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":14}],"target":2173,"permalink":"/apify-ts/api/next/playwright-crawler#LoggerOptions","previousId":5106,"nextId":5107},{"id":5107,"name":"LoggerText","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":59}],"target":2438,"permalink":"/apify-ts/api/next/playwright-crawler#LoggerText","previousId":5103,"nextId":4992},{"id":4992,"name":"MemoryInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1785,"permalink":"/apify-ts/api/next/playwright-crawler#MemoryInfo","previousId":5107,"nextId":4860},{"id":4860,"name":"PlaywrightDirectNavigationOptions","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/playwright-crawler/src/index.ts","line":6,"character":41}],"target":4856,"permalink":"/apify-ts/api/next/playwright-crawler#PlaywrightDirectNavigationOptions","previousId":4992,"nextId":4975},{"id":4975,"name":"ProxyConfiguration","kind":16777216,"kindString":"Reference","flags":{},"target":1686,"permalink":"/apify-ts/api/next/playwright-crawler#ProxyConfiguration","previousId":4860,"nextId":4972},{"id":4972,"name":"ProxyConfigurationFunction","kind":16777216,"kindString":"Reference","flags":{},"target":1667,"permalink":"/apify-ts/api/next/playwright-crawler#ProxyConfigurationFunction","previousId":4975,"nextId":4973},{"id":4973,"name":"ProxyConfigurationOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1670,"permalink":"/apify-ts/api/next/playwright-crawler#ProxyConfigurationOptions","previousId":4972,"nextId":4974},{"id":4974,"name":"ProxyInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1678,"permalink":"/apify-ts/api/next/playwright-crawler#ProxyInfo","previousId":4973,"nextId":4962},{"id":4962,"name":"PseudoUrl","kind":16777216,"kindString":"Reference","flags":{},"target":1596,"permalink":"/apify-ts/api/next/playwright-crawler#PseudoUrl","previousId":4974,"nextId":4888},{"id":4888,"name":"PseudoUrlInput","kind":16777216,"kindString":"Reference","flags":{},"target":652,"permalink":"/apify-ts/api/next/playwright-crawler#PseudoUrlInput","previousId":4962,"nextId":4963},{"id":4963,"name":"PseudoUrlObject","kind":16777216,"kindString":"Reference","flags":{},"target":1609,"permalink":"/apify-ts/api/next/playwright-crawler#PseudoUrlObject","previousId":4888,"nextId":4892},{"id":4892,"name":"PuppeteerCookie","kind":16777216,"kindString":"Reference","flags":{},"target":675,"permalink":"/apify-ts/api/next/playwright-crawler#PuppeteerCookie","previousId":4963,"nextId":4970},{"id":4970,"name":"PushErrorMessageOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1660,"permalink":"/apify-ts/api/next/playwright-crawler#PushErrorMessageOptions","previousId":4892,"nextId":4940},{"id":4940,"name":"QueueOperationInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1264,"permalink":"/apify-ts/api/next/playwright-crawler#QueueOperationInfo","previousId":4970,"nextId":4944},{"id":4944,"name":"QueueOperationInfoOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1343,"permalink":"/apify-ts/api/next/playwright-crawler#QueueOperationInfoOptions","previousId":4940,"nextId":4923},{"id":4923,"name":"RecordOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1140,"permalink":"/apify-ts/api/next/playwright-crawler#RecordOptions","previousId":4944,"nextId":4968},{"id":4968,"name":"Request","kind":16777216,"kindString":"Reference","flags":{},"target":1626,"permalink":"/apify-ts/api/next/playwright-crawler#Request","previousId":4923,"nextId":4929},{"id":4929,"name":"RequestList","kind":16777216,"kindString":"Reference","flags":{},"target":1158,"permalink":"/apify-ts/api/next/playwright-crawler#RequestList","previousId":4968,"nextId":4928},{"id":4928,"name":"RequestListOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1151,"permalink":"/apify-ts/api/next/playwright-crawler#RequestListOptions","previousId":4929,"nextId":4932},{"id":4932,"name":"RequestListSourcesFunction","kind":16777216,"kindString":"Reference","flags":{},"target":1249,"permalink":"/apify-ts/api/next/playwright-crawler#RequestListSourcesFunction","previousId":4928,"nextId":4930},{"id":4930,"name":"RequestListState","kind":16777216,"kindString":"Reference","flags":{},"target":1241,"permalink":"/apify-ts/api/next/playwright-crawler#RequestListState","previousId":4932,"nextId":4969},{"id":4969,"name":"RequestOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1649,"permalink":"/apify-ts/api/next/playwright-crawler#RequestOptions","previousId":4930,"nextId":4942},{"id":4942,"name":"RequestQueue","kind":16777216,"kindString":"Reference","flags":{},"target":1270,"permalink":"/apify-ts/api/next/playwright-crawler#RequestQueue","previousId":4969,"nextId":4941},{"id":4941,"name":"RequestQueueOperationOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1268,"permalink":"/apify-ts/api/next/playwright-crawler#RequestQueueOperationOptions","previousId":4942,"nextId":4943},{"id":4943,"name":"RequestQueueOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1338,"permalink":"/apify-ts/api/next/playwright-crawler#RequestQueueOptions","previousId":4941,"nextId":4889},{"id":4889,"name":"RequestTransform","kind":16777216,"kindString":"Reference","flags":{},"target":653,"permalink":"/apify-ts/api/next/playwright-crawler#RequestTransform","previousId":4943,"nextId":4955},{"id":4955,"name":"STATUS_CODES_BLOCKED","kind":16777216,"kindString":"Reference","flags":{},"target":1558,"permalink":"/apify-ts/api/next/playwright-crawler#STATUS_CODES_BLOCKED","previousId":4889,"nextId":4895},{"id":4895,"name":"Session","kind":16777216,"kindString":"Reference","flags":{},"target":701,"permalink":"/apify-ts/api/next/playwright-crawler#Session","previousId":4955,"nextId":4894},{"id":4894,"name":"SessionOptions","kind":16777216,"kindString":"Reference","flags":{},"target":687,"permalink":"/apify-ts/api/next/playwright-crawler#SessionOptions","previousId":4895,"nextId":4899},{"id":4899,"name":"SessionPool","kind":16777216,"kindString":"Reference","flags":{},"target":786,"permalink":"/apify-ts/api/next/playwright-crawler#SessionPool","previousId":4894,"nextId":4898},{"id":4898,"name":"SessionPoolOptions","kind":16777216,"kindString":"Reference","flags":{},"target":778,"permalink":"/apify-ts/api/next/playwright-crawler#SessionPoolOptions","previousId":4899,"nextId":4893},{"id":4893,"name":"SessionState","kind":16777216,"kindString":"Reference","flags":{},"target":676,"permalink":"/apify-ts/api/next/playwright-crawler#SessionState","previousId":4898,"nextId":4867},{"id":4867,"name":"Snapshotter","kind":16777216,"kindString":"Reference","flags":{},"target":352,"permalink":"/apify-ts/api/next/playwright-crawler#Snapshotter","previousId":4893,"nextId":4866},{"id":4866,"name":"SnapshotterOptions","kind":16777216,"kindString":"Reference","flags":{},"target":341,"permalink":"/apify-ts/api/next/playwright-crawler#SnapshotterOptions","previousId":4867,"nextId":4931},{"id":4931,"name":"Source","kind":16777216,"kindString":"Reference","flags":{},"target":1245,"permalink":"/apify-ts/api/next/playwright-crawler#Source","previousId":4866,"nextId":4880},{"id":4880,"name":"StatisticPersistedState","kind":16777216,"kindString":"Reference","flags":{},"target":591,"permalink":"/apify-ts/api/next/playwright-crawler#StatisticPersistedState","previousId":4931,"nextId":4881},{"id":4881,"name":"StatisticState","kind":16777216,"kindString":"Reference","flags":{},"target":612,"permalink":"/apify-ts/api/next/playwright-crawler#StatisticState","previousId":4880,"nextId":4879},{"id":4879,"name":"Statistics","kind":16777216,"kindString":"Reference","flags":{},"target":536,"permalink":"/apify-ts/api/next/playwright-crawler#Statistics","previousId":4881,"nextId":4947},{"id":4947,"name":"StorageManagerOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1427,"permalink":"/apify-ts/api/next/playwright-crawler#StorageManagerOptions","previousId":4879,"nextId":4868},{"id":4868,"name":"SystemInfo","kind":16777216,"kindString":"Reference","flags":{},"target":441,"permalink":"/apify-ts/api/next/playwright-crawler#SystemInfo","previousId":4947,"nextId":4871},{"id":4871,"name":"SystemStatus","kind":16777216,"kindString":"Reference","flags":{},"target":462,"permalink":"/apify-ts/api/next/playwright-crawler#SystemStatus","previousId":4868,"nextId":4869},{"id":4869,"name":"SystemStatusOptions","kind":16777216,"kindString":"Reference","flags":{},"target":451,"permalink":"/apify-ts/api/next/playwright-crawler#SystemStatusOptions","previousId":4871,"nextId":4989},{"id":4989,"name":"URL_NO_COMMAS_REGEX","kind":16777216,"kindString":"Reference","flags":{},"target":1781,"permalink":"/apify-ts/api/next/playwright-crawler#URL_NO_COMMAS_REGEX","previousId":4869,"nextId":4990},{"id":4990,"name":"URL_WITH_COMMAS_REGEX","kind":16777216,"kindString":"Reference","flags":{},"target":1782,"permalink":"/apify-ts/api/next/playwright-crawler#URL_WITH_COMMAS_REGEX","previousId":4989,"nextId":5110},{"id":5110,"name":"basicCrawlerEnqueueLinks","kind":16777216,"kindString":"Reference","flags":{},"target":2868,"permalink":"/apify-ts/api/next/playwright-crawler#basicCrawlerEnqueueLinks","previousId":4990,"nextId":5120},{"id":5120,"name":"browserCrawlerEnqueueLinks","kind":16777216,"kindString":"Reference","flags":{},"target":3272,"permalink":"/apify-ts/api/next/playwright-crawler#browserCrawlerEnqueueLinks","previousId":5110,"nextId":4971},{"id":4971,"name":"createProxyConfiguration","kind":16777216,"kindString":"Reference","flags":{},"target":1662,"permalink":"/apify-ts/api/next/playwright-crawler#createProxyConfiguration","previousId":5120,"nextId":4983},{"id":4983,"name":"createRequestDebugInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1761,"permalink":"/apify-ts/api/next/playwright-crawler#createRequestDebugInfo","previousId":4971,"nextId":4981},{"id":4981,"name":"downloadListOfUrls","kind":16777216,"kindString":"Reference","flags":{},"target":1755,"permalink":"/apify-ts/api/next/playwright-crawler#downloadListOfUrls","previousId":4983,"nextId":4882},{"id":4882,"name":"enqueueLinks","kind":16777216,"kindString":"Reference","flags":{},"target":626,"permalink":"/apify-ts/api/next/playwright-crawler#enqueueLinks","previousId":4981,"nextId":4863},{"id":4863,"name":"events","kind":16777216,"kindString":"Reference","flags":{},"target":235,"permalink":"/apify-ts/api/next/playwright-crawler#events","previousId":4882,"nextId":4900},{"id":4900,"name":"getCookiesFromResponse","kind":16777216,"kindString":"Reference","flags":{},"target":949,"permalink":"/apify-ts/api/next/playwright-crawler#getCookiesFromResponse","previousId":4863,"nextId":4917},{"id":4917,"name":"getInput","kind":16777216,"kindString":"Reference","flags":{},"target":1079,"permalink":"/apify-ts/api/next/playwright-crawler#getInput","previousId":4900,"nextId":4978},{"id":4978,"name":"getMemoryInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1748,"permalink":"/apify-ts/api/next/playwright-crawler#getMemoryInfo","previousId":4917,"nextId":4915},{"id":4915,"name":"getValue","kind":16777216,"kindString":"Reference","flags":{},"target":1069,"permalink":"/apify-ts/api/next/playwright-crawler#getValue","previousId":4978,"nextId":4967},{"id":4967,"name":"hashPayload","kind":16777216,"kindString":"Reference","flags":{},"target":1623,"permalink":"/apify-ts/api/next/playwright-crawler#hashPayload","previousId":4915,"nextId":4982},{"id":4982,"name":"htmlToText","kind":16777216,"kindString":"Reference","flags":{},"target":1758,"permalink":"/apify-ts/api/next/playwright-crawler#htmlToText","previousId":4967,"nextId":4979},{"id":4979,"name":"isAtHome","kind":16777216,"kindString":"Reference","flags":{},"target":1750,"permalink":"/apify-ts/api/next/playwright-crawler#isAtHome","previousId":4982,"nextId":4976},{"id":4976,"name":"isDocker","kind":16777216,"kindString":"Reference","flags":{},"target":1741,"permalink":"/apify-ts/api/next/playwright-crawler#isDocker","previousId":4979,"nextId":5108},{"id":5108,"name":"log","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":73,"character":9}],"target":2566,"permalink":"/apify-ts/api/next/playwright-crawler#log","previousId":4976,"nextId":4903},{"id":4903,"name":"openDataset","kind":16777216,"kindString":"Reference","flags":{},"target":964,"permalink":"/apify-ts/api/next/playwright-crawler#openDataset","previousId":5108,"nextId":4914},{"id":4914,"name":"openKeyValueStore","kind":16777216,"kindString":"Reference","flags":{},"target":1065,"permalink":"/apify-ts/api/next/playwright-crawler#openKeyValueStore","previousId":4903,"nextId":4925},{"id":4925,"name":"openRequestList","kind":16777216,"kindString":"Reference","flags":{},"target":1144,"permalink":"/apify-ts/api/next/playwright-crawler#openRequestList","previousId":4914,"nextId":4934},{"id":4934,"name":"openRequestQueue","kind":16777216,"kindString":"Reference","flags":{},"target":1255,"permalink":"/apify-ts/api/next/playwright-crawler#openRequestQueue","previousId":4925,"nextId":4896},{"id":4896,"name":"openSessionPool","kind":16777216,"kindString":"Reference","flags":{},"target":769,"permalink":"/apify-ts/api/next/playwright-crawler#openSessionPool","previousId":4934,"nextId":4987},{"id":4987,"name":"purgeLocalStorage","kind":16777216,"kindString":"Reference","flags":{},"target":1777,"permalink":"/apify-ts/api/next/playwright-crawler#purgeLocalStorage","previousId":4896,"nextId":4904},{"id":4904,"name":"pushData","kind":16777216,"kindString":"Reference","flags":{},"target":969,"permalink":"/apify-ts/api/next/playwright-crawler#pushData","previousId":4987,"nextId":4995},{"id":4995,"name":"requestUtils","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils.ts","line":580,"character":12}],"target":1798,"permalink":"/apify-ts/api/next/playwright-crawler#requestUtils","previousId":4904,"nextId":4916},{"id":4916,"name":"setValue","kind":16777216,"kindString":"Reference","flags":{},"target":1073,"permalink":"/apify-ts/api/next/playwright-crawler#setValue","previousId":4995,"nextId":4980},{"id":4980,"name":"sleep","kind":16777216,"kindString":"Reference","flags":{},"target":1752,"permalink":"/apify-ts/api/next/playwright-crawler#sleep","previousId":4916,"nextId":4996},{"id":4996,"name":"socialUtils","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils.ts","line":582,"character":12}],"target":1903,"permalink":"/apify-ts/api/next/playwright-crawler#socialUtils","previousId":4980,"nextId":5109},{"id":5109,"name":"validators","kind":16777216,"kindString":"Reference","flags":{},"target":2567,"permalink":"/apify-ts/api/next/playwright-crawler#validators","previousId":4996,"nextId":5098},{"id":4850,"name":"playwrightUtils","kind":4,"kindString":"Namespace","flags":{},"comment":{"shortText":"A namespace that contains various utilities for\\n[Playwright](https://github.com/microsoft/playwright) - the headless Chrome Node API.","text":"**Example usage:**\\n\\n```javascript\\nconst Apify = require(\'apify\');\\nconst { playwright } = Apify.utils;\\n\\n// Navigate to https://www.example.com in Playwright with a POST request\\nconst browser = await Apify.launchPlaywright();\\nconst page = await browser.newPage();\\nawait playwright.gotoExtended(page, {\\n    url: \'https://example.com,\\n    method: \'POST\',\\n});\\n```"},"children":[{"id":4856,"name":"DirectNavigationOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":4859,"name":"referer","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Referer header value. If provided it will take preference over the referer header value set by page.setExtraHTTPHeaders(headers)."},"sources":[{"fileName":"packages/playwright-crawler/src/internals/utils/playwright-utils.ts","line":49,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4857,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum operation time in milliseconds, defaults to 30 seconds, pass `0` to disable timeout. The\\ndefault value can be changed by using the browserContext.setDefaultNavigationTimeout(timeout),\\nbrowserContext.setDefaultTimeout(timeout), page.setDefaultNavigationTimeout(timeout) or\\npage.setDefaultTimeout(timeout) methods."},"sources":[{"fileName":"packages/playwright-crawler/src/internals/utils/playwright-utils.ts","line":36,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":4858,"name":"waitUntil","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"When to consider operation succeeded, defaults to `load`. Events can be either:\\n- `\'domcontentloaded\'` - consider operation to be finished when the `DOMContentLoaded` event is fired.\\n- `\'load\'` - consider operation to be finished when the `load` event is fired.\\n- `\'networkidle\'` - consider operation to be finished when there are no network connections for at least `500` ms."},"sources":[{"fileName":"packages/playwright-crawler/src/internals/utils/playwright-utils.ts","line":44,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"domcontentloaded"},{"type":"literal","value":"load"},{"type":"literal","value":"networkidle"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[4859,4857,4858]}],"sources":[{"fileName":"packages/playwright-crawler/src/internals/utils/playwright-utils.ts","line":29,"character":17}]},{"id":4851,"name":"gotoExtended","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/playwright-crawler/src/internals/utils/playwright-utils.ts","line":65,"character":22}],"signatures":[{"id":4852,"name":"gotoExtended","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Extended version of Playwright\'s `page.goto()` allowing to perform requests with HTTP method other than GET,\\nwith custom headers and POST payload. URL, method, headers and payload are taken from\\nrequest parameter that must be an instance of Apify.Request class.","text":"*NOTE:* In recent versions of Playwright using requests other than GET, overriding headers and adding payloads disables\\nbrowser cache which degrades performance.\\n"},"parameters":[{"id":4853,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  Puppeteer [`Page`](https://playwright.dev/docs/api/class-page) object."},"type":{"type":"reference","qualifiedName":"Page","package":"playwright-core","name":"Page"}},{"id":4854,"name":"request","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","id":1626,"name":"Request"}},{"id":4855,"name":"gotoOptions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4856,"name":"DirectNavigationOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","qualifiedName":"Response","package":"playwright-core","name":"Response"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"groups":[{"title":"Interfaces","kind":256,"children":[4856]},{"title":"Functions","kind":64,"children":[4851]}],"sources":[{"fileName":"packages/playwright-crawler/src/internals/utils/playwright-utils.ts","line":22,"character":0}],"permalink":"/apify-ts/api/next/playwright-crawler/namespace/playwrightUtils","previousId":5006,"nextId":4952},{"id":5332,"name":"PlaywrightCrawler","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"Provides a simple framework for parallel crawling of web pages\\nusing headless Chromium, Firefox and Webkit browsers with [Playwright](https://github.com/microsoft/playwright).\\nThe URLs to crawl are fed either from a static list of URLs\\nor from a dynamic queue of URLs enabling recursive crawling of websites.","text":"Since `Playwright` uses headless browser to download web pages and extract data,\\nit is useful for crawling of websites that require to execute JavaScript.\\nIf the target website doesn\'t need JavaScript, consider using {@link CheerioCrawler},\\nwhich downloads the pages using raw HTTP requests and is about 10x faster.\\n\\nThe source URLs are represented using {@link Request} objects that are fed from\\n{@link RequestList} or {@link RequestQueue} instances provided by the {@link PlaywrightCrawlerOptions.requestList}\\nor {@link PlaywrightCrawlerOptions.requestQueue} constructor options, respectively.\\n\\nIf both {@link PlaywrightCrawlerOptions.requestList} and {@link PlaywrightCrawlerOptions.requestQueue} are used,\\nthe instance first processes URLs from the {@link RequestList} and automatically enqueues all of them\\nto {@link RequestQueue} before it starts their processing. This ensures that a single URL is not crawled multiple times.\\n\\nThe crawler finishes when there are no more {@link Request} objects to crawl.\\n\\n`PlaywrightCrawler` opens a new Chrome page (i.e. tab) for each {@link Request} object to crawl\\nand then calls the function provided by user as the {@link PlaywrightCrawlerOptions.handlePageFunction} option.\\n\\nNew pages are only opened when there is enough free CPU and memory available,\\nusing the functionality provided by the {@link AutoscaledPool} class.\\nAll {@link AutoscaledPool} configuration options can be passed to the {@link PlaywrightCrawlerOptions.autoscaledPoolOptions}\\nparameter of the `PlaywrightCrawler` constructor. For user convenience, the `minConcurrency` and `maxConcurrency`\\n{@link AutoscaledPoolOptions} are available directly in the `PlaywrightCrawler` constructor.\\n\\nNote that the pool of Playwright instances is internally managed by the [BrowserPool](https://github.com/apify/browser-pool) class.\\n\\n**Example usage:**\\n\\n```javascript\\nconst crawler = new Apify.PlaywrightCrawler({\\n    requestList,\\n    handlePageFunction: async ({ page, request }) => {\\n        // This function is called to extract data from a single web page\\n        // \'page\' is an instance of Playwright.Page with page.goto(request.url) already called\\n        // \'request\' is an instance of Request class with information about the page to load\\n        await Apify.pushData({\\n            title: await page.title(),\\n            url: request.url,\\n            succeeded: true,\\n        })\\n    },\\n    handleFailedRequestFunction: async ({ request }) => {\\n        // This function is called when the crawling of a request failed too many times\\n        await Apify.pushData({\\n            url: request.url,\\n            succeeded: false,\\n            errors: request.errorMessages,\\n        })\\n    },\\n});\\n\\nawait crawler.run();\\n```"},"children":[{"id":5362,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-crawler.ts","line":205,"character":4}],"signatures":[{"id":5363,"name":"new PlaywrightCrawler","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"All `PlaywrightCrawler` parameters are passed via an options object."},"parameters":[{"id":5364,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":5133,"name":"PlaywrightCrawlerOptions"}}],"type":{"type":"reference","id":5332,"name":"PlaywrightCrawler"},"overwrites":{"type":"reference","name":"BrowserCrawler<{ browserPlugins: [PlaywrightPlugin] }, LaunchOptions, PlaywrightCrawlContext>.constructor"}}],"overwrites":{"type":"reference","name":"BrowserCrawler<{ browserPlugins: [PlaywrightPlugin] }, LaunchOptions, PlaywrightCrawlContext>.constructor"}},{"id":5742,"name":"autoscaledPool","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A reference to the underlying {@link AutoscaledPool} class that manages the concurrency of the crawler.\\nNote that this property is only initialized after calling the {@link BasicCrawler.run} function.\\nYou can use it to change the concurrency settings on the fly,\\nto pause the crawler by calling {@link AutoscaledPool.pause}\\nor to abort it by calling {@link AutoscaledPool.abort}."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":271,"character":4}],"type":{"type":"reference","id":256,"name":"AutoscaledPool"},"inheritedFrom":{"type":"reference","id":3433,"name":"BrowserCrawler.autoscaledPool"}},{"id":5370,"name":"browserPool","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A reference to the underlying `BrowserPool` class that manages the crawler\'s browsers.\\nFor more information about it, see the [`browser-pool` module](https://github.com/apify/browser-pool).","tags":[{"tag":"todo","text":"the type is almost unusable with so many generic arguments, what should go there? we need inference\\n"}]},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":272,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":5371,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5372,"name":"browserPlugins","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-crawler.ts","line":194,"character":56}],"type":{"type":"tuple","elements":[{"type":"reference","qualifiedName":"PlaywrightPlugin","package":"browser-pool","name":"PlaywrightPlugin"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[5372]}]}},{"type":"tuple","elements":[{"type":"reference","qualifiedName":"PlaywrightPlugin","package":"browser-pool","name":"PlaywrightPlugin"}]},{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":5373,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}],"qualifiedName":"BrowserType","package":"playwright-core","name":"BrowserType"},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"LaunchOptions","package":"playwright-core","name":"LaunchOptions"}]},{"type":"reference","qualifiedName":"Browser","package":"playwright-core","name":"Browser"},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":5374,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5375,"name":"acceptDownloads","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether to automatically download all the attachments. Defaults to `false` where all the downloads are canceled."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12564,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5376,"name":"baseURL","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"When using [page.goto(url[, options])](https://playwright.dev/docs/api/class-page#page-goto),\\n[page.route(url, handler[, options])](https://playwright.dev/docs/api/class-page#page-route),\\n[page.waitForURL(url[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-url),\\n[page.waitForRequest(urlOrPredicate[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-request), or\\n[page.waitForResponse(urlOrPredicate[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-response) it\\ntakes the base URL in consideration by using the [`URL()`](https://developer.mozilla.org/en-US/docs/Web/API/URL/URL)\\nconstructor for building the corresponding URL. Examples:\\n- baseURL: `http://localhost:3000` and navigating to `/bar.html` results in `http://localhost:3000/bar.html`\\n- baseURL: `http://localhost:3000/foo/` and navigating to `./bar.html` results in `http://localhost:3000/foo/bar.html`"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12577,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5377,"name":"bypassCSP","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Toggles bypassing page\'s Content-Security-Policy."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12582,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5378,"name":"colorScheme","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates `\'prefers-colors-scheme\'` media feature, supported values are `\'light\'`, `\'dark\'`, `\'no-preference\'`. See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details. Defaults\\nto `\'light\'`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12589,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"},{"type":"literal","value":"no-preference"}]}},{"id":5379,"name":"deviceScaleFactor","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specify device scale factor (can be thought of as dpr). Defaults to `1`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12594,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":5380,"name":"extraHTTPHeaders","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"An object containing additional HTTP headers to be sent with every request."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12599,"character":4}],"type":{"type":"reflection","declaration":{"id":5381,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":{"id":5382,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":5383,"name":"key","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}}},{"id":5384,"name":"forcedColors","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates `\'forced-colors\'` media feature, supported values are `\'active\'`, `\'none\'`. See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details. Defaults\\nto `\'none\'`.","text":"> NOTE: It\'s not supported in WebKit, see [here](https://bugs.webkit.org/show_bug.cgi?id=225281) in their issue tracker.\\n"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12608,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"active"},{"type":"literal","value":"none"}]}},{"id":5385,"name":"geolocation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12610,"character":4}],"type":{"type":"reflection","declaration":{"id":5386,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5389,"name":"accuracy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Non-negative accuracy value. Defaults to `0`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12624,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5387,"name":"latitude","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Latitude between -90 and 90."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12614,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5388,"name":"longitude","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Longitude between -180 and 180."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12619,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5389,5387,5388]}]}}},{"id":5390,"name":"hasTouch","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specifies if viewport supports touch events. Defaults to false."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12630,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5391,"name":"httpCredentials","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Credentials for [HTTP authentication](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication)."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12635,"character":4}],"type":{"type":"reflection","declaration":{"id":5392,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5394,"name":"password","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12638,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5393,"name":"username","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12636,"character":6}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5394,5393]}]}}},{"id":5395,"name":"ignoreHTTPSErrors","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether to ignore HTTPS errors when sending network requests. Defaults to `false`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12644,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5396,"name":"isMobile","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether the `meta viewport` tag is taken into account and touch events are enabled. Defaults to `false`. Not supported\\nin Firefox."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12650,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5397,"name":"javaScriptEnabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether or not to enable JavaScript in the context. Defaults to `true`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12655,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5398,"name":"locale","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specify user locale, for example `en-GB`, `de-DE`, etc. Locale will affect `navigator.language` value, `Accept-Language`\\nrequest header value as well as number and date formatting rules."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12661,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5399,"name":"logger","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Logger sink for Playwright logging."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12666,"character":4}],"type":{"type":"reference","qualifiedName":"Logger","package":"playwright-core","name":"Logger"}},{"id":5400,"name":"offline","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether to emulate network being offline. Defaults to `false`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12671,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5401,"name":"permissions","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"A list of permissions to grant to all pages in this context. See\\n[browserContext.grantPermissions(permissions[, options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-grant-permissions)\\nfor more details."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12678,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":5402,"name":"proxy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Network proxy settings to use with this context.","text":"> NOTE: For Chromium on Windows the browser needs to be launched with the global proxy for this option to work. If all\\ncontexts override the proxy, global proxy will be never used and can be any string, for example `launch({ proxy: {\\nserver: \'http://per-context\' } })`.\\n"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12687,"character":4}],"type":{"type":"reflection","declaration":{"id":5403,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5405,"name":"bypass","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional comma-separated domains to bypass proxy, for example `\\".com, chromium.org, .domain.com\\"`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12697,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5407,"name":"password","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional password to use if HTTP proxy requires authentication."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12707,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5404,"name":"server","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Proxy to be used for all requests. HTTP and SOCKS proxies are supported, for example `http://myproxy.com:3128` or\\n`socks5://myproxy.com:3128`. Short form `myproxy.com:3128` is considered an HTTP proxy."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12692,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5406,"name":"username","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional username to use if HTTP proxy requires authentication."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12702,"character":6}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5405,5407,5404,5406]}]}}},{"id":5408,"name":"recordHar","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Enables [HAR](http://www.softwareishard.com/blog/har-12-spec) recording for all pages into `recordHar.path` file. If not\\nspecified, the HAR is not recorded. Make sure to await\\n[browserContext.close()](https://playwright.dev/docs/api/class-browsercontext#browser-context-close) for the HAR to be\\nsaved."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12716,"character":4}],"type":{"type":"reflection","declaration":{"id":5409,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5410,"name":"omitContent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional setting to control whether to omit request content from the HAR. Defaults to `false`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12720,"character":6}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5411,"name":"path","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Path on the filesystem to write the HAR file to."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12725,"character":6}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5410,5411]}]}}},{"id":5412,"name":"recordVideo","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Enables video recording for all pages into `recordVideo.dir` directory. If not specified videos are not recorded. Make\\nsure to await [browserContext.close()](https://playwright.dev/docs/api/class-browsercontext#browser-context-close) for\\nvideos to be saved."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12733,"character":4}],"type":{"type":"reflection","declaration":{"id":5413,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5414,"name":"dir","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Path to the directory to put videos into."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12737,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5415,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional dimensions of the recorded videos. If not specified the size will be equal to `viewport` scaled down to fit\\ninto 800x800. If `viewport` is not configured explicitly the video size defaults to 800x450. Actual picture of each page\\nwill be scaled down if necessary to fit the specified size."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12744,"character":6}],"type":{"type":"reflection","declaration":{"id":5416,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5418,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Video frame height."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12753,"character":8}],"type":{"type":"intrinsic","name":"number"}},{"id":5417,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Video frame width."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12748,"character":8}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5418,5417]}]}}}],"groups":[{"title":"Properties","kind":1024,"children":[5414,5415]}]}}},{"id":5419,"name":"reducedMotion","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates `\'prefers-reduced-motion\'` media feature, supported values are `\'reduce\'`, `\'no-preference\'`. See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details. Defaults\\nto `\'no-preference\'`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12762,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"no-preference"},{"type":"literal","value":"reduce"}]}},{"id":5420,"name":"screen","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates consistent window screen size available inside web page via `window.screen`. Is only used when the `viewport`\\nis set."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12768,"character":4}],"type":{"type":"reflection","declaration":{"id":5421,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5423,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"page height in pixels."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12777,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5422,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"page width in pixels."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12772,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5423,5422]}]}}},{"id":5424,"name":"storageState","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Populates context with given storage state. This option can be used to initialize context with logged-in information\\nobtained via\\n[browserContext.storageState([options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-storage-state).\\nEither a path to the file with saved storage, or an object with the following fields:"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12786,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":5425,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5426,"name":"cookies","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"cookies to set for context"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12790,"character":6}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5427,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5430,"name":"domain","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"domain and path are required"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12798,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":5432,"name":"expires","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Unix time in seconds."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12808,"character":8}],"type":{"type":"intrinsic","name":"number"}},{"id":5433,"name":"httpOnly","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12810,"character":8}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5428,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12791,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":5431,"name":"path","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"domain and path are required"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12803,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":5435,"name":"sameSite","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"sameSite flag"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12817,"character":8}],"type":{"type":"union","types":[{"type":"literal","value":"Strict"},{"type":"literal","value":"Lax"},{"type":"literal","value":"None"}]}},{"id":5434,"name":"secure","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12812,"character":8}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5429,"name":"value","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12793,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5430,5432,5433,5428,5431,5435,5434,5429]}]}}}},{"id":5436,"name":"origins","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"localStorage to set for context"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12823,"character":6}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5437,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5439,"name":"localStorage","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12826,"character":8}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5440,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5441,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12827,"character":10}],"type":{"type":"intrinsic","name":"string"}},{"id":5442,"name":"value","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12829,"character":10}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5441,5442]}]}}}},{"id":5438,"name":"origin","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12824,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5439,5438]}]}}}}],"groups":[{"title":"Properties","kind":1024,"children":[5426,5436]}]}}]}},{"id":5443,"name":"strictSelectors","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"It specified, enables strict selectors mode for this context. In the strict selectors mode all operations on selectors\\nthat imply single target DOM element will throw when more than one element matches the selector. See [Locator] to learn\\nmore about the strict mode."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12839,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5444,"name":"timezoneId","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Changes the timezone of the context. See\\n[ICU\'s metaZones.txt](https://cs.chromium.org/chromium/src/third_party/icu/source/data/misc/metaZones.txt?rcl=faee8bc70570192d82d2978a71e2a615788597d1)\\nfor a list of supported timezone IDs."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12846,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5445,"name":"userAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specific user agent to use in this context."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12851,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5446,"name":"videoSize","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"**DEPRECATED** Use `recordVideo` instead.","tags":[{"tag":"deprecated","text":"\\n"}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12857,"character":4}],"type":{"type":"reflection","declaration":{"id":5447,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5449,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Video frame height."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12866,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5448,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Video frame width."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12861,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5449,5448]}]}}},{"id":5450,"name":"videosPath","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"**DEPRECATED** Use `recordVideo` instead.","tags":[{"tag":"deprecated","text":"\\n"}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12873,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5451,"name":"viewport","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates consistent viewport for each page. Defaults to an 1280x720 viewport. `null` disables the default viewport."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12878,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":5452,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5454,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"page height in pixels."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12887,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5453,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"page width in pixels."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12882,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5454,5453]}]}}]}}],"groups":[{"title":"Properties","kind":1024,"children":[5375,5376,5377,5378,5379,5380,5384,5385,5390,5391,5395,5396,5397,5398,5399,5400,5401,5402,5408,5412,5419,5420,5424,5443,5444,5445,5446,5450,5451]}]}}]},{"type":"reference","qualifiedName":"Page","package":"playwright-core","name":"Page"}],"qualifiedName":"BrowserController","package":"browser-pool","name":"BrowserController"},{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":5455,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}],"qualifiedName":"BrowserType","package":"playwright-core","name":"BrowserType"},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"LaunchOptions","package":"playwright-core","name":"LaunchOptions"}]},{"type":"reference","qualifiedName":"Browser","package":"playwright-core","name":"Browser"},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":5456,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5457,"name":"acceptDownloads","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether to automatically download all the attachments. Defaults to `false` where all the downloads are canceled."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12564,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5458,"name":"baseURL","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"When using [page.goto(url[, options])](https://playwright.dev/docs/api/class-page#page-goto),\\n[page.route(url, handler[, options])](https://playwright.dev/docs/api/class-page#page-route),\\n[page.waitForURL(url[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-url),\\n[page.waitForRequest(urlOrPredicate[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-request), or\\n[page.waitForResponse(urlOrPredicate[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-response) it\\ntakes the base URL in consideration by using the [`URL()`](https://developer.mozilla.org/en-US/docs/Web/API/URL/URL)\\nconstructor for building the corresponding URL. Examples:\\n- baseURL: `http://localhost:3000` and navigating to `/bar.html` results in `http://localhost:3000/bar.html`\\n- baseURL: `http://localhost:3000/foo/` and navigating to `./bar.html` results in `http://localhost:3000/foo/bar.html`"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12577,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5459,"name":"bypassCSP","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Toggles bypassing page\'s Content-Security-Policy."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12582,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5460,"name":"colorScheme","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates `\'prefers-colors-scheme\'` media feature, supported values are `\'light\'`, `\'dark\'`, `\'no-preference\'`. See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details. Defaults\\nto `\'light\'`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12589,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"},{"type":"literal","value":"no-preference"}]}},{"id":5461,"name":"deviceScaleFactor","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specify device scale factor (can be thought of as dpr). Defaults to `1`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12594,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":5462,"name":"extraHTTPHeaders","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"An object containing additional HTTP headers to be sent with every request."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12599,"character":4}],"type":{"type":"reflection","declaration":{"id":5463,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":{"id":5464,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":5465,"name":"key","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}}},{"id":5466,"name":"forcedColors","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates `\'forced-colors\'` media feature, supported values are `\'active\'`, `\'none\'`. See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details. Defaults\\nto `\'none\'`.","text":"> NOTE: It\'s not supported in WebKit, see [here](https://bugs.webkit.org/show_bug.cgi?id=225281) in their issue tracker.\\n"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12608,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"active"},{"type":"literal","value":"none"}]}},{"id":5467,"name":"geolocation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12610,"character":4}],"type":{"type":"reflection","declaration":{"id":5468,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5471,"name":"accuracy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Non-negative accuracy value. Defaults to `0`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12624,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5469,"name":"latitude","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Latitude between -90 and 90."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12614,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5470,"name":"longitude","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Longitude between -180 and 180."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12619,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5471,5469,5470]}]}}},{"id":5472,"name":"hasTouch","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specifies if viewport supports touch events. Defaults to false."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12630,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5473,"name":"httpCredentials","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Credentials for [HTTP authentication](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication)."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12635,"character":4}],"type":{"type":"reflection","declaration":{"id":5474,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5476,"name":"password","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12638,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5475,"name":"username","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12636,"character":6}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5476,5475]}]}}},{"id":5477,"name":"ignoreHTTPSErrors","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether to ignore HTTPS errors when sending network requests. Defaults to `false`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12644,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5478,"name":"isMobile","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether the `meta viewport` tag is taken into account and touch events are enabled. Defaults to `false`. Not supported\\nin Firefox."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12650,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5479,"name":"javaScriptEnabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether or not to enable JavaScript in the context. Defaults to `true`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12655,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5480,"name":"locale","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specify user locale, for example `en-GB`, `de-DE`, etc. Locale will affect `navigator.language` value, `Accept-Language`\\nrequest header value as well as number and date formatting rules."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12661,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5481,"name":"logger","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Logger sink for Playwright logging."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12666,"character":4}],"type":{"type":"reference","qualifiedName":"Logger","package":"playwright-core","name":"Logger"}},{"id":5482,"name":"offline","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether to emulate network being offline. Defaults to `false`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12671,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5483,"name":"permissions","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"A list of permissions to grant to all pages in this context. See\\n[browserContext.grantPermissions(permissions[, options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-grant-permissions)\\nfor more details."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12678,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":5484,"name":"proxy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Network proxy settings to use with this context.","text":"> NOTE: For Chromium on Windows the browser needs to be launched with the global proxy for this option to work. If all\\ncontexts override the proxy, global proxy will be never used and can be any string, for example `launch({ proxy: {\\nserver: \'http://per-context\' } })`.\\n"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12687,"character":4}],"type":{"type":"reflection","declaration":{"id":5485,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5487,"name":"bypass","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional comma-separated domains to bypass proxy, for example `\\".com, chromium.org, .domain.com\\"`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12697,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5489,"name":"password","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional password to use if HTTP proxy requires authentication."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12707,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5486,"name":"server","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Proxy to be used for all requests. HTTP and SOCKS proxies are supported, for example `http://myproxy.com:3128` or\\n`socks5://myproxy.com:3128`. Short form `myproxy.com:3128` is considered an HTTP proxy."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12692,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5488,"name":"username","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional username to use if HTTP proxy requires authentication."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12702,"character":6}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5487,5489,5486,5488]}]}}},{"id":5490,"name":"recordHar","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Enables [HAR](http://www.softwareishard.com/blog/har-12-spec) recording for all pages into `recordHar.path` file. If not\\nspecified, the HAR is not recorded. Make sure to await\\n[browserContext.close()](https://playwright.dev/docs/api/class-browsercontext#browser-context-close) for the HAR to be\\nsaved."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12716,"character":4}],"type":{"type":"reflection","declaration":{"id":5491,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5492,"name":"omitContent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional setting to control whether to omit request content from the HAR. Defaults to `false`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12720,"character":6}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5493,"name":"path","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Path on the filesystem to write the HAR file to."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12725,"character":6}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5492,5493]}]}}},{"id":5494,"name":"recordVideo","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Enables video recording for all pages into `recordVideo.dir` directory. If not specified videos are not recorded. Make\\nsure to await [browserContext.close()](https://playwright.dev/docs/api/class-browsercontext#browser-context-close) for\\nvideos to be saved."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12733,"character":4}],"type":{"type":"reflection","declaration":{"id":5495,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5496,"name":"dir","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Path to the directory to put videos into."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12737,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5497,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional dimensions of the recorded videos. If not specified the size will be equal to `viewport` scaled down to fit\\ninto 800x800. If `viewport` is not configured explicitly the video size defaults to 800x450. Actual picture of each page\\nwill be scaled down if necessary to fit the specified size."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12744,"character":6}],"type":{"type":"reflection","declaration":{"id":5498,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5500,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Video frame height."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12753,"character":8}],"type":{"type":"intrinsic","name":"number"}},{"id":5499,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Video frame width."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12748,"character":8}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5500,5499]}]}}}],"groups":[{"title":"Properties","kind":1024,"children":[5496,5497]}]}}},{"id":5501,"name":"reducedMotion","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates `\'prefers-reduced-motion\'` media feature, supported values are `\'reduce\'`, `\'no-preference\'`. See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details. Defaults\\nto `\'no-preference\'`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12762,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"no-preference"},{"type":"literal","value":"reduce"}]}},{"id":5502,"name":"screen","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates consistent window screen size available inside web page via `window.screen`. Is only used when the `viewport`\\nis set."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12768,"character":4}],"type":{"type":"reflection","declaration":{"id":5503,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5505,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"page height in pixels."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12777,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5504,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"page width in pixels."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12772,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5505,5504]}]}}},{"id":5506,"name":"storageState","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Populates context with given storage state. This option can be used to initialize context with logged-in information\\nobtained via\\n[browserContext.storageState([options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-storage-state).\\nEither a path to the file with saved storage, or an object with the following fields:"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12786,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":5507,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5508,"name":"cookies","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"cookies to set for context"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12790,"character":6}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5509,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5512,"name":"domain","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"domain and path are required"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12798,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":5514,"name":"expires","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Unix time in seconds."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12808,"character":8}],"type":{"type":"intrinsic","name":"number"}},{"id":5515,"name":"httpOnly","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12810,"character":8}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5510,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12791,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":5513,"name":"path","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"domain and path are required"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12803,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":5517,"name":"sameSite","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"sameSite flag"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12817,"character":8}],"type":{"type":"union","types":[{"type":"literal","value":"Strict"},{"type":"literal","value":"Lax"},{"type":"literal","value":"None"}]}},{"id":5516,"name":"secure","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12812,"character":8}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5511,"name":"value","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12793,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5512,5514,5515,5510,5513,5517,5516,5511]}]}}}},{"id":5518,"name":"origins","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"localStorage to set for context"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12823,"character":6}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5519,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5521,"name":"localStorage","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12826,"character":8}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5522,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5523,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12827,"character":10}],"type":{"type":"intrinsic","name":"string"}},{"id":5524,"name":"value","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12829,"character":10}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5523,5524]}]}}}},{"id":5520,"name":"origin","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12824,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5521,5520]}]}}}}],"groups":[{"title":"Properties","kind":1024,"children":[5508,5518]}]}}]}},{"id":5525,"name":"strictSelectors","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"It specified, enables strict selectors mode for this context. In the strict selectors mode all operations on selectors\\nthat imply single target DOM element will throw when more than one element matches the selector. See [Locator] to learn\\nmore about the strict mode."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12839,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5526,"name":"timezoneId","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Changes the timezone of the context. See\\n[ICU\'s metaZones.txt](https://cs.chromium.org/chromium/src/third_party/icu/source/data/misc/metaZones.txt?rcl=faee8bc70570192d82d2978a71e2a615788597d1)\\nfor a list of supported timezone IDs."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12846,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5527,"name":"userAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specific user agent to use in this context."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12851,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5528,"name":"videoSize","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"**DEPRECATED** Use `recordVideo` instead.","tags":[{"tag":"deprecated","text":"\\n"}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12857,"character":4}],"type":{"type":"reflection","declaration":{"id":5529,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5531,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Video frame height."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12866,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5530,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Video frame width."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12861,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5531,5530]}]}}},{"id":5532,"name":"videosPath","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"**DEPRECATED** Use `recordVideo` instead.","tags":[{"tag":"deprecated","text":"\\n"}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12873,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5533,"name":"viewport","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates consistent viewport for each page. Defaults to an 1280x720 viewport. `null` disables the default viewport."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12878,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":5534,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5536,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"page height in pixels."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12887,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5535,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"page width in pixels."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12882,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5536,5535]}]}}]}}],"groups":[{"title":"Properties","kind":1024,"children":[5457,5458,5459,5460,5461,5462,5466,5467,5472,5473,5477,5478,5479,5480,5481,5482,5483,5484,5490,5494,5501,5502,5506,5525,5526,5527,5528,5532,5533]}]}}]},{"type":"reference","qualifiedName":"Page","package":"playwright-core","name":"Page"}],"qualifiedName":"LaunchContext","package":"browser-pool","name":"LaunchContext"},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":5537,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5538,"name":"acceptDownloads","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether to automatically download all the attachments. Defaults to `false` where all the downloads are canceled."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12564,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5539,"name":"baseURL","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"When using [page.goto(url[, options])](https://playwright.dev/docs/api/class-page#page-goto),\\n[page.route(url, handler[, options])](https://playwright.dev/docs/api/class-page#page-route),\\n[page.waitForURL(url[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-url),\\n[page.waitForRequest(urlOrPredicate[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-request), or\\n[page.waitForResponse(urlOrPredicate[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-response) it\\ntakes the base URL in consideration by using the [`URL()`](https://developer.mozilla.org/en-US/docs/Web/API/URL/URL)\\nconstructor for building the corresponding URL. Examples:\\n- baseURL: `http://localhost:3000` and navigating to `/bar.html` results in `http://localhost:3000/bar.html`\\n- baseURL: `http://localhost:3000/foo/` and navigating to `./bar.html` results in `http://localhost:3000/foo/bar.html`"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12577,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5540,"name":"bypassCSP","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Toggles bypassing page\'s Content-Security-Policy."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12582,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5541,"name":"colorScheme","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates `\'prefers-colors-scheme\'` media feature, supported values are `\'light\'`, `\'dark\'`, `\'no-preference\'`. See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details. Defaults\\nto `\'light\'`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12589,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"},{"type":"literal","value":"no-preference"}]}},{"id":5542,"name":"deviceScaleFactor","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specify device scale factor (can be thought of as dpr). Defaults to `1`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12594,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":5543,"name":"extraHTTPHeaders","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"An object containing additional HTTP headers to be sent with every request."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12599,"character":4}],"type":{"type":"reflection","declaration":{"id":5544,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":{"id":5545,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":5546,"name":"key","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}}},{"id":5547,"name":"forcedColors","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates `\'forced-colors\'` media feature, supported values are `\'active\'`, `\'none\'`. See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details. Defaults\\nto `\'none\'`.","text":"> NOTE: It\'s not supported in WebKit, see [here](https://bugs.webkit.org/show_bug.cgi?id=225281) in their issue tracker.\\n"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12608,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"active"},{"type":"literal","value":"none"}]}},{"id":5548,"name":"geolocation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12610,"character":4}],"type":{"type":"reflection","declaration":{"id":5549,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5552,"name":"accuracy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Non-negative accuracy value. Defaults to `0`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12624,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5550,"name":"latitude","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Latitude between -90 and 90."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12614,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5551,"name":"longitude","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Longitude between -180 and 180."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12619,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5552,5550,5551]}]}}},{"id":5553,"name":"hasTouch","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specifies if viewport supports touch events. Defaults to false."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12630,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5554,"name":"httpCredentials","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Credentials for [HTTP authentication](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication)."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12635,"character":4}],"type":{"type":"reflection","declaration":{"id":5555,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5557,"name":"password","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12638,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5556,"name":"username","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12636,"character":6}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5557,5556]}]}}},{"id":5558,"name":"ignoreHTTPSErrors","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether to ignore HTTPS errors when sending network requests. Defaults to `false`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12644,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5559,"name":"isMobile","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether the `meta viewport` tag is taken into account and touch events are enabled. Defaults to `false`. Not supported\\nin Firefox."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12650,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5560,"name":"javaScriptEnabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether or not to enable JavaScript in the context. Defaults to `true`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12655,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5561,"name":"locale","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specify user locale, for example `en-GB`, `de-DE`, etc. Locale will affect `navigator.language` value, `Accept-Language`\\nrequest header value as well as number and date formatting rules."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12661,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5562,"name":"logger","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Logger sink for Playwright logging."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12666,"character":4}],"type":{"type":"reference","qualifiedName":"Logger","package":"playwright-core","name":"Logger"}},{"id":5563,"name":"offline","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether to emulate network being offline. Defaults to `false`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12671,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5564,"name":"permissions","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"A list of permissions to grant to all pages in this context. See\\n[browserContext.grantPermissions(permissions[, options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-grant-permissions)\\nfor more details."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12678,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":5565,"name":"proxy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Network proxy settings to use with this context.","text":"> NOTE: For Chromium on Windows the browser needs to be launched with the global proxy for this option to work. If all\\ncontexts override the proxy, global proxy will be never used and can be any string, for example `launch({ proxy: {\\nserver: \'http://per-context\' } })`.\\n"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12687,"character":4}],"type":{"type":"reflection","declaration":{"id":5566,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5568,"name":"bypass","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional comma-separated domains to bypass proxy, for example `\\".com, chromium.org, .domain.com\\"`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12697,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5570,"name":"password","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional password to use if HTTP proxy requires authentication."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12707,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5567,"name":"server","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Proxy to be used for all requests. HTTP and SOCKS proxies are supported, for example `http://myproxy.com:3128` or\\n`socks5://myproxy.com:3128`. Short form `myproxy.com:3128` is considered an HTTP proxy."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12692,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5569,"name":"username","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional username to use if HTTP proxy requires authentication."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12702,"character":6}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5568,5570,5567,5569]}]}}},{"id":5571,"name":"recordHar","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Enables [HAR](http://www.softwareishard.com/blog/har-12-spec) recording for all pages into `recordHar.path` file. If not\\nspecified, the HAR is not recorded. Make sure to await\\n[browserContext.close()](https://playwright.dev/docs/api/class-browsercontext#browser-context-close) for the HAR to be\\nsaved."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12716,"character":4}],"type":{"type":"reflection","declaration":{"id":5572,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5573,"name":"omitContent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional setting to control whether to omit request content from the HAR. Defaults to `false`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12720,"character":6}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5574,"name":"path","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Path on the filesystem to write the HAR file to."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12725,"character":6}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5573,5574]}]}}},{"id":5575,"name":"recordVideo","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Enables video recording for all pages into `recordVideo.dir` directory. If not specified videos are not recorded. Make\\nsure to await [browserContext.close()](https://playwright.dev/docs/api/class-browsercontext#browser-context-close) for\\nvideos to be saved."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12733,"character":4}],"type":{"type":"reflection","declaration":{"id":5576,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5577,"name":"dir","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Path to the directory to put videos into."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12737,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5578,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional dimensions of the recorded videos. If not specified the size will be equal to `viewport` scaled down to fit\\ninto 800x800. If `viewport` is not configured explicitly the video size defaults to 800x450. Actual picture of each page\\nwill be scaled down if necessary to fit the specified size."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12744,"character":6}],"type":{"type":"reflection","declaration":{"id":5579,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5581,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Video frame height."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12753,"character":8}],"type":{"type":"intrinsic","name":"number"}},{"id":5580,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Video frame width."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12748,"character":8}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5581,5580]}]}}}],"groups":[{"title":"Properties","kind":1024,"children":[5577,5578]}]}}},{"id":5582,"name":"reducedMotion","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates `\'prefers-reduced-motion\'` media feature, supported values are `\'reduce\'`, `\'no-preference\'`. See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details. Defaults\\nto `\'no-preference\'`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12762,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"no-preference"},{"type":"literal","value":"reduce"}]}},{"id":5583,"name":"screen","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates consistent window screen size available inside web page via `window.screen`. Is only used when the `viewport`\\nis set."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12768,"character":4}],"type":{"type":"reflection","declaration":{"id":5584,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5586,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"page height in pixels."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12777,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5585,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"page width in pixels."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12772,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5586,5585]}]}}},{"id":5587,"name":"storageState","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Populates context with given storage state. This option can be used to initialize context with logged-in information\\nobtained via\\n[browserContext.storageState([options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-storage-state).\\nEither a path to the file with saved storage, or an object with the following fields:"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12786,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":5588,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5589,"name":"cookies","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"cookies to set for context"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12790,"character":6}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5590,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5593,"name":"domain","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"domain and path are required"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12798,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":5595,"name":"expires","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Unix time in seconds."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12808,"character":8}],"type":{"type":"intrinsic","name":"number"}},{"id":5596,"name":"httpOnly","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12810,"character":8}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5591,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12791,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":5594,"name":"path","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"domain and path are required"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12803,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":5598,"name":"sameSite","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"sameSite flag"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12817,"character":8}],"type":{"type":"union","types":[{"type":"literal","value":"Strict"},{"type":"literal","value":"Lax"},{"type":"literal","value":"None"}]}},{"id":5597,"name":"secure","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12812,"character":8}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5592,"name":"value","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12793,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5593,5595,5596,5591,5594,5598,5597,5592]}]}}}},{"id":5599,"name":"origins","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"localStorage to set for context"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12823,"character":6}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5600,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5602,"name":"localStorage","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12826,"character":8}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5603,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5604,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12827,"character":10}],"type":{"type":"intrinsic","name":"string"}},{"id":5605,"name":"value","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12829,"character":10}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5604,5605]}]}}}},{"id":5601,"name":"origin","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12824,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5602,5601]}]}}}}],"groups":[{"title":"Properties","kind":1024,"children":[5589,5599]}]}}]}},{"id":5606,"name":"strictSelectors","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"It specified, enables strict selectors mode for this context. In the strict selectors mode all operations on selectors\\nthat imply single target DOM element will throw when more than one element matches the selector. See [Locator] to learn\\nmore about the strict mode."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12839,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5607,"name":"timezoneId","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Changes the timezone of the context. See\\n[ICU\'s metaZones.txt](https://cs.chromium.org/chromium/src/third_party/icu/source/data/misc/metaZones.txt?rcl=faee8bc70570192d82d2978a71e2a615788597d1)\\nfor a list of supported timezone IDs."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12846,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5608,"name":"userAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specific user agent to use in this context."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12851,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5609,"name":"videoSize","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"**DEPRECATED** Use `recordVideo` instead.","tags":[{"tag":"deprecated","text":"\\n"}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12857,"character":4}],"type":{"type":"reflection","declaration":{"id":5610,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5612,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Video frame height."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12866,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5611,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Video frame width."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12861,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5612,5611]}]}}},{"id":5613,"name":"videosPath","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"**DEPRECATED** Use `recordVideo` instead.","tags":[{"tag":"deprecated","text":"\\n"}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12873,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5614,"name":"viewport","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates consistent viewport for each page. Defaults to an 1280x720 viewport. `null` disables the default viewport."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12878,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":5615,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5617,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"page height in pixels."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12887,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5616,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"page width in pixels."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12882,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5617,5616]}]}}]}}],"groups":[{"title":"Properties","kind":1024,"children":[5538,5539,5540,5541,5542,5543,5547,5548,5553,5554,5558,5559,5560,5561,5562,5563,5564,5565,5571,5575,5582,5583,5587,5606,5607,5608,5609,5613,5614]}]}}]},{"type":"reference","qualifiedName":"Page","package":"playwright-core","name":"Page"}],"qualifiedName":"BrowserPool","package":"browser-pool","name":"BrowserPool"},"inheritedFrom":{"type":"reference","id":3386,"name":"BrowserCrawler.browserPool"}},{"id":5618,"name":"launchContext","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":274,"character":4}],"type":{"type":"reference","id":3498,"typeArguments":[{"type":"reference","qualifiedName":"LaunchOptions","package":"playwright-core","name":"LaunchOptions"},{"type":"intrinsic","name":"unknown"}],"name":"BrowserLaunchContext"},"inheritedFrom":{"type":"reference","id":3387,"name":"BrowserCrawler.launchContext"}},{"id":5369,"name":"proxyConfiguration","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A reference to the underlying {@link ProxyConfiguration} class that manages the crawler\'s proxies.\\nOnly available if used by the crawler."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":265,"character":4}],"type":{"type":"reference","id":1686,"name":"ProxyConfiguration"},"inheritedFrom":{"type":"reference","id":3385,"name":"BrowserCrawler.proxyConfiguration"}},{"id":5739,"name":"requestList","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A reference to the underlying {@link RequestList} class that manages the crawler\'s {@link Request}s.\\nEither `requestList` or `requestQueue` option must be provided (or both).\\nOnly available if used by the crawler."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":248,"character":4}],"type":{"type":"reference","id":1158,"name":"RequestList"},"inheritedFrom":{"type":"reference","id":3430,"name":"BrowserCrawler.requestList"}},{"id":5740,"name":"requestQueue","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Dynamic queue of URLs to be processed. This is useful for recursive crawling of websites.\\nA reference to the underlying {@link RequestQueue} class that manages the crawler\'s {@link Request}s.\\nEither `requestList` or `requestQueue` option must be provided (or both).\\nOnly available if used by the crawler."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":256,"character":4}],"type":{"type":"reference","id":1270,"name":"RequestQueue"},"inheritedFrom":{"type":"reference","id":3431,"name":"BrowserCrawler.requestQueue"}},{"id":5741,"name":"sessionPool","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A reference to the underlying {@link SessionPool} class that manages the crawler\'s {@link Session}s.\\nOnly available if used by the crawler."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":262,"character":4}],"type":{"type":"reference","id":786,"name":"SessionPool"},"inheritedFrom":{"type":"reference","id":3432,"name":"BrowserCrawler.sessionPool"}},{"id":5738,"name":"stats","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"shortText":"Static list of URLs to be processed."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":241,"character":13}],"type":{"type":"reference","id":536,"name":"Statistics"},"inheritedFrom":{"type":"reference","id":3429,"name":"BrowserCrawler.stats"}},{"id":5760,"name":"addRequests","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":458,"character":10}],"signatures":[{"id":5761,"name":"addRequests","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds requests to be processed by the crawler"},"parameters":[{"id":5762,"name":"requests","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The requests to add"},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","id":1649,"name":"RequestOptions"},{"type":"reference","id":1626,"name":"Request"}]}}},{"id":5763,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Options for the request queue\\n"},"type":{"type":"reference","id":1268,"name":"RequestQueueOperationOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1264,"name":"QueueOperationInfo"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","id":3452,"name":"BrowserCrawler.addRequests"}}],"inheritedFrom":{"type":"reference","id":3451,"name":"BrowserCrawler.addRequests"}},{"id":5758,"name":"getRequestQueue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":447,"character":10}],"signatures":[{"id":5759,"name":"getRequestQueue","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":1270,"name":"RequestQueue"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","id":3450,"name":"BrowserCrawler.getRequestQueue"}}],"inheritedFrom":{"type":"reference","id":3449,"name":"BrowserCrawler.getRequestQueue"}},{"id":5756,"name":"run","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":424,"character":10}],"signatures":[{"id":5757,"name":"run","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Runs the crawler. Returns a promise that gets resolved once all the requests are processed."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","id":3448,"name":"BrowserCrawler.run"}}],"inheritedFrom":{"type":"reference","id":3447,"name":"BrowserCrawler.run"}}],"groups":[{"title":"Constructors","kind":512,"children":[5362]},{"title":"Properties","kind":1024,"children":[5742,5370,5618,5369,5739,5740,5741,5738]},{"title":"Methods","kind":2048,"children":[5760,5758,5756]}],"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-crawler.ts","line":194,"character":13}],"extendedTypes":[{"type":"reference","id":3352,"typeArguments":[{"type":"reflection","declaration":{"id":5333,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5334,"name":"browserPlugins","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-crawler.ts","line":194,"character":56}],"type":{"type":"tuple","elements":[{"type":"reference","qualifiedName":"PlaywrightPlugin","package":"browser-pool","name":"PlaywrightPlugin"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[5334]}],"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-crawler.ts","line":194,"character":54}]}},{"type":"reference","qualifiedName":"LaunchOptions","package":"playwright-core","name":"LaunchOptions"},{"type":"reference","id":5328,"name":"PlaywrightCrawlContext"}],"name":"BrowserCrawler"}],"permalink":"/apify-ts/api/next/playwright-crawler/class/PlaywrightCrawler","nextId":5803},{"id":5133,"name":"PlaywrightCrawlerOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":5321,"name":"autoscaledPoolOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Custom options passed to the underlying {@link AutoscaledPool} constructor.\\nNote that the `runTaskFunction` and `isTaskReadyFunction` options\\nare provided by the crawler and cannot be overridden.\\nHowever, you can provide a custom implementation of `isFinishedFunction`."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":146,"character":4}],"type":{"type":"reference","id":236,"name":"AutoscaledPoolOptions"},"inheritedFrom":{"type":"reference","id":3340,"name":"BrowserCrawlerOptions.autoscaledPoolOptions"}},{"id":5147,"name":"browserPoolOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Custom options passed to the underlying [`BrowserPool`](https://github.com/apify/browser-pool#BrowserPool) constructor.\\nYou can tweak those to fine-tune browser management."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":154,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"CommonLibrary","package":"browser-pool","name":"CommonLibrary"},{"type":"intrinsic","name":"unknown"},{"type":"reference","qualifiedName":"CommonBrowser","package":"browser-pool","name":"CommonBrowser"},{"type":"intrinsic","name":"unknown"},{"type":"reference","qualifiedName":"CommonPage","package":"browser-pool","name":"CommonPage"}],"qualifiedName":"BrowserPlugin","package":"browser-pool","name":"BrowserPlugin"}],"qualifiedName":"BrowserPoolOptions","package":"browser-pool","name":"BrowserPoolOptions"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":5148,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}],"qualifiedName":"BrowserType","package":"playwright-core","name":"BrowserType"},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"LaunchOptions","package":"playwright-core","name":"LaunchOptions"}]},{"type":"reference","qualifiedName":"Browser","package":"playwright-core","name":"Browser"},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":5149,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5150,"name":"acceptDownloads","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether to automatically download all the attachments. Defaults to `false` where all the downloads are canceled."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12564,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5151,"name":"baseURL","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"When using [page.goto(url[, options])](https://playwright.dev/docs/api/class-page#page-goto),\\n[page.route(url, handler[, options])](https://playwright.dev/docs/api/class-page#page-route),\\n[page.waitForURL(url[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-url),\\n[page.waitForRequest(urlOrPredicate[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-request), or\\n[page.waitForResponse(urlOrPredicate[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-response) it\\ntakes the base URL in consideration by using the [`URL()`](https://developer.mozilla.org/en-US/docs/Web/API/URL/URL)\\nconstructor for building the corresponding URL. Examples:\\n- baseURL: `http://localhost:3000` and navigating to `/bar.html` results in `http://localhost:3000/bar.html`\\n- baseURL: `http://localhost:3000/foo/` and navigating to `./bar.html` results in `http://localhost:3000/foo/bar.html`"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12577,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5152,"name":"bypassCSP","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Toggles bypassing page\'s Content-Security-Policy."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12582,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5153,"name":"colorScheme","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates `\'prefers-colors-scheme\'` media feature, supported values are `\'light\'`, `\'dark\'`, `\'no-preference\'`. See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details. Defaults\\nto `\'light\'`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12589,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"},{"type":"literal","value":"no-preference"}]}},{"id":5154,"name":"deviceScaleFactor","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specify device scale factor (can be thought of as dpr). Defaults to `1`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12594,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":5155,"name":"extraHTTPHeaders","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"An object containing additional HTTP headers to be sent with every request."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12599,"character":4}],"type":{"type":"reflection","declaration":{"id":5156,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":{"id":5157,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":5158,"name":"key","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}}},{"id":5159,"name":"forcedColors","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates `\'forced-colors\'` media feature, supported values are `\'active\'`, `\'none\'`. See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details. Defaults\\nto `\'none\'`.","text":"> NOTE: It\'s not supported in WebKit, see [here](https://bugs.webkit.org/show_bug.cgi?id=225281) in their issue tracker.\\n"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12608,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"active"},{"type":"literal","value":"none"}]}},{"id":5160,"name":"geolocation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12610,"character":4}],"type":{"type":"reflection","declaration":{"id":5161,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5164,"name":"accuracy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Non-negative accuracy value. Defaults to `0`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12624,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5162,"name":"latitude","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Latitude between -90 and 90."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12614,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5163,"name":"longitude","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Longitude between -180 and 180."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12619,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5164,5162,5163]}]}}},{"id":5165,"name":"hasTouch","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specifies if viewport supports touch events. Defaults to false."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12630,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5166,"name":"httpCredentials","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Credentials for [HTTP authentication](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication)."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12635,"character":4}],"type":{"type":"reflection","declaration":{"id":5167,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5169,"name":"password","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12638,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5168,"name":"username","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12636,"character":6}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5169,5168]}]}}},{"id":5170,"name":"ignoreHTTPSErrors","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether to ignore HTTPS errors when sending network requests. Defaults to `false`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12644,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5171,"name":"isMobile","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether the `meta viewport` tag is taken into account and touch events are enabled. Defaults to `false`. Not supported\\nin Firefox."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12650,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5172,"name":"javaScriptEnabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether or not to enable JavaScript in the context. Defaults to `true`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12655,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5173,"name":"locale","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specify user locale, for example `en-GB`, `de-DE`, etc. Locale will affect `navigator.language` value, `Accept-Language`\\nrequest header value as well as number and date formatting rules."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12661,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5174,"name":"logger","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Logger sink for Playwright logging."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12666,"character":4}],"type":{"type":"reference","qualifiedName":"Logger","package":"playwright-core","name":"Logger"}},{"id":5175,"name":"offline","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether to emulate network being offline. Defaults to `false`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12671,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5176,"name":"permissions","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"A list of permissions to grant to all pages in this context. See\\n[browserContext.grantPermissions(permissions[, options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-grant-permissions)\\nfor more details."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12678,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":5177,"name":"proxy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Network proxy settings to use with this context.","text":"> NOTE: For Chromium on Windows the browser needs to be launched with the global proxy for this option to work. If all\\ncontexts override the proxy, global proxy will be never used and can be any string, for example `launch({ proxy: {\\nserver: \'http://per-context\' } })`.\\n"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12687,"character":4}],"type":{"type":"reflection","declaration":{"id":5178,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5180,"name":"bypass","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional comma-separated domains to bypass proxy, for example `\\".com, chromium.org, .domain.com\\"`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12697,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5182,"name":"password","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional password to use if HTTP proxy requires authentication."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12707,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5179,"name":"server","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Proxy to be used for all requests. HTTP and SOCKS proxies are supported, for example `http://myproxy.com:3128` or\\n`socks5://myproxy.com:3128`. Short form `myproxy.com:3128` is considered an HTTP proxy."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12692,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5181,"name":"username","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional username to use if HTTP proxy requires authentication."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12702,"character":6}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5180,5182,5179,5181]}]}}},{"id":5183,"name":"recordHar","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Enables [HAR](http://www.softwareishard.com/blog/har-12-spec) recording for all pages into `recordHar.path` file. If not\\nspecified, the HAR is not recorded. Make sure to await\\n[browserContext.close()](https://playwright.dev/docs/api/class-browsercontext#browser-context-close) for the HAR to be\\nsaved."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12716,"character":4}],"type":{"type":"reflection","declaration":{"id":5184,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5185,"name":"omitContent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional setting to control whether to omit request content from the HAR. Defaults to `false`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12720,"character":6}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5186,"name":"path","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Path on the filesystem to write the HAR file to."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12725,"character":6}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5185,5186]}]}}},{"id":5187,"name":"recordVideo","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Enables video recording for all pages into `recordVideo.dir` directory. If not specified videos are not recorded. Make\\nsure to await [browserContext.close()](https://playwright.dev/docs/api/class-browsercontext#browser-context-close) for\\nvideos to be saved."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12733,"character":4}],"type":{"type":"reflection","declaration":{"id":5188,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5189,"name":"dir","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Path to the directory to put videos into."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12737,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5190,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional dimensions of the recorded videos. If not specified the size will be equal to `viewport` scaled down to fit\\ninto 800x800. If `viewport` is not configured explicitly the video size defaults to 800x450. Actual picture of each page\\nwill be scaled down if necessary to fit the specified size."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12744,"character":6}],"type":{"type":"reflection","declaration":{"id":5191,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5193,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Video frame height."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12753,"character":8}],"type":{"type":"intrinsic","name":"number"}},{"id":5192,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Video frame width."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12748,"character":8}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5193,5192]}]}}}],"groups":[{"title":"Properties","kind":1024,"children":[5189,5190]}]}}},{"id":5194,"name":"reducedMotion","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates `\'prefers-reduced-motion\'` media feature, supported values are `\'reduce\'`, `\'no-preference\'`. See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details. Defaults\\nto `\'no-preference\'`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12762,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"no-preference"},{"type":"literal","value":"reduce"}]}},{"id":5195,"name":"screen","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates consistent window screen size available inside web page via `window.screen`. Is only used when the `viewport`\\nis set."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12768,"character":4}],"type":{"type":"reflection","declaration":{"id":5196,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5198,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"page height in pixels."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12777,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5197,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"page width in pixels."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12772,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5198,5197]}]}}},{"id":5199,"name":"storageState","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Populates context with given storage state. This option can be used to initialize context with logged-in information\\nobtained via\\n[browserContext.storageState([options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-storage-state).\\nEither a path to the file with saved storage, or an object with the following fields:"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12786,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":5200,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5201,"name":"cookies","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"cookies to set for context"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12790,"character":6}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5202,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5205,"name":"domain","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"domain and path are required"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12798,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":5207,"name":"expires","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Unix time in seconds."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12808,"character":8}],"type":{"type":"intrinsic","name":"number"}},{"id":5208,"name":"httpOnly","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12810,"character":8}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5203,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12791,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":5206,"name":"path","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"domain and path are required"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12803,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":5210,"name":"sameSite","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"sameSite flag"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12817,"character":8}],"type":{"type":"union","types":[{"type":"literal","value":"Strict"},{"type":"literal","value":"Lax"},{"type":"literal","value":"None"}]}},{"id":5209,"name":"secure","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12812,"character":8}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5204,"name":"value","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12793,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5205,5207,5208,5203,5206,5210,5209,5204]}]}}}},{"id":5211,"name":"origins","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"localStorage to set for context"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12823,"character":6}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5212,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5214,"name":"localStorage","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12826,"character":8}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5215,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5216,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12827,"character":10}],"type":{"type":"intrinsic","name":"string"}},{"id":5217,"name":"value","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12829,"character":10}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5216,5217]}]}}}},{"id":5213,"name":"origin","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12824,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5214,5213]}]}}}}],"groups":[{"title":"Properties","kind":1024,"children":[5201,5211]}]}}]}},{"id":5218,"name":"strictSelectors","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"It specified, enables strict selectors mode for this context. In the strict selectors mode all operations on selectors\\nthat imply single target DOM element will throw when more than one element matches the selector. See [Locator] to learn\\nmore about the strict mode."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12839,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5219,"name":"timezoneId","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Changes the timezone of the context. See\\n[ICU\'s metaZones.txt](https://cs.chromium.org/chromium/src/third_party/icu/source/data/misc/metaZones.txt?rcl=faee8bc70570192d82d2978a71e2a615788597d1)\\nfor a list of supported timezone IDs."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12846,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5220,"name":"userAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specific user agent to use in this context."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12851,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5221,"name":"videoSize","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"**DEPRECATED** Use `recordVideo` instead.","tags":[{"tag":"deprecated","text":"\\n"}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12857,"character":4}],"type":{"type":"reflection","declaration":{"id":5222,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5224,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Video frame height."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12866,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5223,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Video frame width."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12861,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5224,5223]}]}}},{"id":5225,"name":"videosPath","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"**DEPRECATED** Use `recordVideo` instead.","tags":[{"tag":"deprecated","text":"\\n"}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12873,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5226,"name":"viewport","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates consistent viewport for each page. Defaults to an 1280x720 viewport. `null` disables the default viewport."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12878,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":5227,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5229,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"page height in pixels."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12887,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5228,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"page width in pixels."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12882,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5229,5228]}]}}]}}],"groups":[{"title":"Properties","kind":1024,"children":[5150,5151,5152,5153,5154,5155,5159,5160,5165,5166,5170,5171,5172,5173,5174,5175,5176,5177,5183,5187,5194,5195,5199,5218,5219,5220,5221,5225,5226]}]}}]},{"type":"reference","qualifiedName":"Page","package":"playwright-core","name":"Page"}],"qualifiedName":"BrowserController","package":"browser-pool","name":"BrowserController"},{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":5230,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}],"qualifiedName":"BrowserType","package":"playwright-core","name":"BrowserType"},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"LaunchOptions","package":"playwright-core","name":"LaunchOptions"}]},{"type":"reference","qualifiedName":"Browser","package":"playwright-core","name":"Browser"},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":5231,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5232,"name":"acceptDownloads","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether to automatically download all the attachments. Defaults to `false` where all the downloads are canceled."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12564,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5233,"name":"baseURL","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"When using [page.goto(url[, options])](https://playwright.dev/docs/api/class-page#page-goto),\\n[page.route(url, handler[, options])](https://playwright.dev/docs/api/class-page#page-route),\\n[page.waitForURL(url[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-url),\\n[page.waitForRequest(urlOrPredicate[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-request), or\\n[page.waitForResponse(urlOrPredicate[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-response) it\\ntakes the base URL in consideration by using the [`URL()`](https://developer.mozilla.org/en-US/docs/Web/API/URL/URL)\\nconstructor for building the corresponding URL. Examples:\\n- baseURL: `http://localhost:3000` and navigating to `/bar.html` results in `http://localhost:3000/bar.html`\\n- baseURL: `http://localhost:3000/foo/` and navigating to `./bar.html` results in `http://localhost:3000/foo/bar.html`"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12577,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5234,"name":"bypassCSP","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Toggles bypassing page\'s Content-Security-Policy."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12582,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5235,"name":"colorScheme","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates `\'prefers-colors-scheme\'` media feature, supported values are `\'light\'`, `\'dark\'`, `\'no-preference\'`. See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details. Defaults\\nto `\'light\'`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12589,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"},{"type":"literal","value":"no-preference"}]}},{"id":5236,"name":"deviceScaleFactor","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specify device scale factor (can be thought of as dpr). Defaults to `1`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12594,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":5237,"name":"extraHTTPHeaders","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"An object containing additional HTTP headers to be sent with every request."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12599,"character":4}],"type":{"type":"reflection","declaration":{"id":5238,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":{"id":5239,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":5240,"name":"key","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}}},{"id":5241,"name":"forcedColors","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates `\'forced-colors\'` media feature, supported values are `\'active\'`, `\'none\'`. See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details. Defaults\\nto `\'none\'`.","text":"> NOTE: It\'s not supported in WebKit, see [here](https://bugs.webkit.org/show_bug.cgi?id=225281) in their issue tracker.\\n"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12608,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"active"},{"type":"literal","value":"none"}]}},{"id":5242,"name":"geolocation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12610,"character":4}],"type":{"type":"reflection","declaration":{"id":5243,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5246,"name":"accuracy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Non-negative accuracy value. Defaults to `0`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12624,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5244,"name":"latitude","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Latitude between -90 and 90."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12614,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5245,"name":"longitude","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Longitude between -180 and 180."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12619,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5246,5244,5245]}]}}},{"id":5247,"name":"hasTouch","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specifies if viewport supports touch events. Defaults to false."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12630,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5248,"name":"httpCredentials","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Credentials for [HTTP authentication](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication)."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12635,"character":4}],"type":{"type":"reflection","declaration":{"id":5249,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5251,"name":"password","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12638,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5250,"name":"username","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12636,"character":6}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5251,5250]}]}}},{"id":5252,"name":"ignoreHTTPSErrors","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether to ignore HTTPS errors when sending network requests. Defaults to `false`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12644,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5253,"name":"isMobile","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether the `meta viewport` tag is taken into account and touch events are enabled. Defaults to `false`. Not supported\\nin Firefox."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12650,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5254,"name":"javaScriptEnabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether or not to enable JavaScript in the context. Defaults to `true`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12655,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5255,"name":"locale","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specify user locale, for example `en-GB`, `de-DE`, etc. Locale will affect `navigator.language` value, `Accept-Language`\\nrequest header value as well as number and date formatting rules."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12661,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5256,"name":"logger","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Logger sink for Playwright logging."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12666,"character":4}],"type":{"type":"reference","qualifiedName":"Logger","package":"playwright-core","name":"Logger"}},{"id":5257,"name":"offline","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether to emulate network being offline. Defaults to `false`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12671,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5258,"name":"permissions","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"A list of permissions to grant to all pages in this context. See\\n[browserContext.grantPermissions(permissions[, options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-grant-permissions)\\nfor more details."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12678,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":5259,"name":"proxy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Network proxy settings to use with this context.","text":"> NOTE: For Chromium on Windows the browser needs to be launched with the global proxy for this option to work. If all\\ncontexts override the proxy, global proxy will be never used and can be any string, for example `launch({ proxy: {\\nserver: \'http://per-context\' } })`.\\n"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12687,"character":4}],"type":{"type":"reflection","declaration":{"id":5260,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5262,"name":"bypass","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional comma-separated domains to bypass proxy, for example `\\".com, chromium.org, .domain.com\\"`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12697,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5264,"name":"password","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional password to use if HTTP proxy requires authentication."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12707,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5261,"name":"server","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Proxy to be used for all requests. HTTP and SOCKS proxies are supported, for example `http://myproxy.com:3128` or\\n`socks5://myproxy.com:3128`. Short form `myproxy.com:3128` is considered an HTTP proxy."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12692,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5263,"name":"username","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional username to use if HTTP proxy requires authentication."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12702,"character":6}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5262,5264,5261,5263]}]}}},{"id":5265,"name":"recordHar","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Enables [HAR](http://www.softwareishard.com/blog/har-12-spec) recording for all pages into `recordHar.path` file. If not\\nspecified, the HAR is not recorded. Make sure to await\\n[browserContext.close()](https://playwright.dev/docs/api/class-browsercontext#browser-context-close) for the HAR to be\\nsaved."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12716,"character":4}],"type":{"type":"reflection","declaration":{"id":5266,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5267,"name":"omitContent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional setting to control whether to omit request content from the HAR. Defaults to `false`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12720,"character":6}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5268,"name":"path","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Path on the filesystem to write the HAR file to."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12725,"character":6}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5267,5268]}]}}},{"id":5269,"name":"recordVideo","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Enables video recording for all pages into `recordVideo.dir` directory. If not specified videos are not recorded. Make\\nsure to await [browserContext.close()](https://playwright.dev/docs/api/class-browsercontext#browser-context-close) for\\nvideos to be saved."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12733,"character":4}],"type":{"type":"reflection","declaration":{"id":5270,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5271,"name":"dir","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Path to the directory to put videos into."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12737,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":5272,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Optional dimensions of the recorded videos. If not specified the size will be equal to `viewport` scaled down to fit\\ninto 800x800. If `viewport` is not configured explicitly the video size defaults to 800x450. Actual picture of each page\\nwill be scaled down if necessary to fit the specified size."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12744,"character":6}],"type":{"type":"reflection","declaration":{"id":5273,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5275,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Video frame height."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12753,"character":8}],"type":{"type":"intrinsic","name":"number"}},{"id":5274,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Video frame width."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12748,"character":8}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5275,5274]}]}}}],"groups":[{"title":"Properties","kind":1024,"children":[5271,5272]}]}}},{"id":5276,"name":"reducedMotion","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates `\'prefers-reduced-motion\'` media feature, supported values are `\'reduce\'`, `\'no-preference\'`. See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details. Defaults\\nto `\'no-preference\'`."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12762,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"no-preference"},{"type":"literal","value":"reduce"}]}},{"id":5277,"name":"screen","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates consistent window screen size available inside web page via `window.screen`. Is only used when the `viewport`\\nis set."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12768,"character":4}],"type":{"type":"reflection","declaration":{"id":5278,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5280,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"page height in pixels."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12777,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5279,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"page width in pixels."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12772,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5280,5279]}]}}},{"id":5281,"name":"storageState","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Populates context with given storage state. This option can be used to initialize context with logged-in information\\nobtained via\\n[browserContext.storageState([options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-storage-state).\\nEither a path to the file with saved storage, or an object with the following fields:"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12786,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":5282,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5283,"name":"cookies","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"cookies to set for context"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12790,"character":6}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5284,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5287,"name":"domain","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"domain and path are required"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12798,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":5289,"name":"expires","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Unix time in seconds."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12808,"character":8}],"type":{"type":"intrinsic","name":"number"}},{"id":5290,"name":"httpOnly","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12810,"character":8}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5285,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12791,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":5288,"name":"path","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"domain and path are required"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12803,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":5292,"name":"sameSite","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"sameSite flag"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12817,"character":8}],"type":{"type":"union","types":[{"type":"literal","value":"Strict"},{"type":"literal","value":"Lax"},{"type":"literal","value":"None"}]}},{"id":5291,"name":"secure","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12812,"character":8}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5286,"name":"value","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12793,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5287,5289,5290,5285,5288,5292,5291,5286]}]}}}},{"id":5293,"name":"origins","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"localStorage to set for context"},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12823,"character":6}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5294,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5296,"name":"localStorage","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12826,"character":8}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5297,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5298,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12827,"character":10}],"type":{"type":"intrinsic","name":"string"}},{"id":5299,"name":"value","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12829,"character":10}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5298,5299]}]}}}},{"id":5295,"name":"origin","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12824,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[5296,5295]}]}}}}],"groups":[{"title":"Properties","kind":1024,"children":[5283,5293]}]}}]}},{"id":5300,"name":"strictSelectors","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"It specified, enables strict selectors mode for this context. In the strict selectors mode all operations on selectors\\nthat imply single target DOM element will throw when more than one element matches the selector. See [Locator] to learn\\nmore about the strict mode."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12839,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5301,"name":"timezoneId","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Changes the timezone of the context. See\\n[ICU\'s metaZones.txt](https://cs.chromium.org/chromium/src/third_party/icu/source/data/misc/metaZones.txt?rcl=faee8bc70570192d82d2978a71e2a615788597d1)\\nfor a list of supported timezone IDs."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12846,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5302,"name":"userAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specific user agent to use in this context."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12851,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5303,"name":"videoSize","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"**DEPRECATED** Use `recordVideo` instead.","tags":[{"tag":"deprecated","text":"\\n"}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12857,"character":4}],"type":{"type":"reflection","declaration":{"id":5304,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5306,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Video frame height."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12866,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5305,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Video frame width."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12861,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5306,5305]}]}}},{"id":5307,"name":"videosPath","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"**DEPRECATED** Use `recordVideo` instead.","tags":[{"tag":"deprecated","text":"\\n"}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12873,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5308,"name":"viewport","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Emulates consistent viewport for each page. Defaults to an 1280x720 viewport. `null` disables the default viewport."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12878,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":5309,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5311,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"page height in pixels."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12887,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":5310,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"page width in pixels."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":12882,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[5311,5310]}]}}]}}],"groups":[{"title":"Properties","kind":1024,"children":[5232,5233,5234,5235,5236,5237,5241,5242,5247,5248,5252,5253,5254,5255,5256,5257,5258,5259,5265,5269,5276,5277,5281,5300,5301,5302,5303,5307,5308]}]}}]},{"type":"reference","qualifiedName":"Page","package":"playwright-core","name":"Page"}],"qualifiedName":"LaunchContext","package":"browser-pool","name":"LaunchContext"},{"type":"reference","qualifiedName":"Page","package":"playwright-core","name":"Page"}],"qualifiedName":"BrowserPoolHooks","package":"browser-pool","name":"BrowserPoolHooks"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"}]},"inheritedFrom":{"type":"reference","id":3328,"name":"BrowserCrawlerOptions.browserPoolOptions"}},{"id":5142,"name":"gotoFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Navigation function for corresponding library. `page.goto(url)` is supported by both `playwright` and `puppeteer`."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":127,"character":4}],"type":{"type":"reference","id":3316,"typeArguments":[{"type":"reference","id":5328,"name":"PlaywrightCrawlContext"},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":5143,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5144,"name":"referer","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Referer header value. If provided it will take preference over the referer header value set by\\n[page.setExtraHTTPHeaders(headers)](https://playwright.dev/docs/api/class-page#page-set-extra-http-headers)."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":2282,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5145,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Maximum operation time in milliseconds, defaults to 30 seconds, pass `0` to disable timeout. The default value can be\\nchanged by using the\\n[browserContext.setDefaultNavigationTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-navigation-timeout),\\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout),\\n[page.setDefaultNavigationTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-navigation-timeout)\\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":2292,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":5146,"name":"waitUntil","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"When to consider operation succeeded, defaults to `load`. Events can be either:\\n- `\'domcontentloaded\'` - consider operation to be finished when the `DOMContentLoaded` event is fired.\\n- `\'load\'` - consider operation to be finished when the `load` event is fired.\\n- `\'networkidle\'` - consider operation to be finished when there are no network connections for at least `500` ms.\\n- `\'commit\'` - consider operation to be finished when network response is received and the document started loading."},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":2301,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"domcontentloaded"},{"type":"literal","value":"load"},{"type":"literal","value":"networkidle"},{"type":"literal","value":"commit"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[5144,5145,5146]}]}}]}],"name":"GotoFunction"},"inheritedFrom":{"type":"reference","id":3326,"name":"BrowserCrawlerOptions.gotoFunction"}},{"id":5315,"name":"gotoTimeoutSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"deprecated","text":"Use `navigationTimeoutSecs` instead\\n"}]},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":209,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":3334,"name":"BrowserCrawlerOptions.gotoTimeoutSecs"}},{"id":5137,"name":"handleFailedRequestFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A function to handle requests that failed more than `option.maxRequestRetries` times.","text":"The function receives the following object as an argument:\\n```\\n{\\nrequest: Request,\\nresponse: Response,\\npage: Page,\\nsession: Session,\\nbrowserController: BrowserController,\\nproxyInfo: ProxyInfo,\\ncrawler: PlaywrightCrawler,\\n}\\n```\\nWhere the {@link Request} instance corresponds to the failed request, and the `Error` instance\\nrepresents the last error thrown during processing of the request.\\n"},"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-crawler.ts","line":78,"character":4}],"type":{"type":"reference","id":3299,"name":"BrowserCrawlerHandleFailedRequest"},"overwrites":{"type":"reference","id":3327,"name":"BrowserCrawlerOptions.handleFailedRequestFunction"}},{"id":5136,"name":"handlePageFunction","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Function that is called to process each request.\\nIt is passed an object with the following fields:","text":"```\\n{\\n  request: Request,\\n  response: Response,\\n  page: Page,\\n  session: Session,\\n  browserController: BrowserController,\\n  proxyInfo: ProxyInfo,\\n  crawler: PlaywrightCrawler,\\n}\\n```\\n\\n`request` is an instance of the {@link Request} object with details about the URL to open, HTTP method etc.\\n`page` is an instance of the `Playwright`\\n[`Page`](https://playwright.dev/docs/api/class-page)\\n`browserController` is an instance of the\\n[`BrowserController`](https://github.com/apify/browser-pool#browsercontroller),\\n`response` is an instance of the `Playwright`\\n[`Response`](https://playwright.dev/docs/api/class-response),\\nwhich is the main resource response as returned by `page.goto(request.url)`.\\nThe function must return a promise, which is then awaited by the crawler.\\n\\nIf the function throws an exception, the crawler will try to re-crawl the\\nrequest later, up to `option.maxRequestRetries` times.\\nIf all the retries fail, the crawler calls the function\\nprovided to the `handleFailedRequestFunction` parameter.\\nTo make this work, you should **always**\\nlet your function throw exceptions rather than catch them.\\nThe exceptions are logged to the request using the\\n{@link Request.pushErrorMessage} function.\\n"},"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-crawler.ts","line":58,"character":4}],"type":{"type":"reference","id":5331,"name":"PlaywrightHandlePageFunction"},"overwrites":{"type":"reference","id":3324,"name":"BrowserCrawlerOptions.handlePageFunction"}},{"id":5141,"name":"handlePageTimeoutSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Timeout in which the function passed as `handlePageFunction` needs to finish, in seconds."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":122,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":3325,"name":"BrowserCrawlerOptions.handlePageTimeoutSecs"}},{"id":5314,"name":"handleRequestTimeoutSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Timeout in which the function passed as `handleRequestFunction` needs to finish, in seconds."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":204,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":3333,"name":"BrowserCrawlerOptions.handleRequestTimeoutSecs"}},{"id":5140,"name":"launchContext","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The same options as used by {@link launchPlaywright}."},"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-crawler.ts","line":115,"character":4}],"type":{"type":"reference","id":5806,"name":"PlaywrightLaunchContext"}},{"id":5323,"name":"maxConcurrency","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets the maximum concurrency (parallelism) for the crawl. Shortcut to the corresponding {@link AutoscaledPool} option."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":159,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":3342,"name":"BrowserCrawlerOptions.maxConcurrency"}},{"id":5319,"name":"maxRequestRetries","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates how many times the request is retried if {@link handleRequestFunction} or {@link handlePageFunction} fails.","tags":[{"tag":"default","text":"3\\n"}]},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":131,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":3338,"name":"BrowserCrawlerOptions.maxRequestRetries"}},{"id":5320,"name":"maxRequestsPerCrawl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum number of pages that the crawler will open. The crawl will stop when this limit is reached.\\nAlways set this value in order to prevent infinite loops in misconfigured crawlers.\\nNote that in cases of parallel crawling, the actual number of pages visited might be slightly higher than this value."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":138,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":3339,"name":"BrowserCrawlerOptions.maxRequestsPerCrawl"}},{"id":5322,"name":"minConcurrency","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets the minimum concurrency (parallelism) for the crawl. Shortcut to the corresponding {@link AutoscaledPool} option.","text":"*WARNING:* If you set this value too high with respect to the available system memory and CPU, your crawler will run extremely slow or crash.\\nIf you\'re not sure, just keep the default value and the concurrency will scale up automatically.\\n"},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":154,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":3341,"name":"BrowserCrawlerOptions.minConcurrency"}},{"id":5313,"name":"navigationTimeoutSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Timeout in which page navigation needs to finish, in seconds."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":199,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":3332,"name":"BrowserCrawlerOptions.navigationTimeoutSecs"}},{"id":5316,"name":"persistCookiesPerSession","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If cookies should be persisted between sessions.\\nThis can only be used when `useSessionPool` is set to `true`."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":215,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":3335,"name":"BrowserCrawlerOptions.persistCookiesPerSession"}},{"id":5139,"name":"postNavigationHooks","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Async functions that are sequentially evaluated after the navigation. Good for checking if the navigation was successful.\\nThe function accepts `crawlingContext` as the only parameter.\\nExample:\\n```\\npostNavigationHooks: [\\n    async (crawlingContext) => {\\n        const { page } = crawlingContext;\\n        if (hasCaptcha(page)) {\\n            await solveCaptcha (page);\\n        }\\n    },\\n]\\n```"},"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-crawler.ts","line":110,"character":4}],"type":{"type":"array","elementType":{"type":"reference","id":5329,"name":"PlaywrightHook"}},"overwrites":{"type":"reference","id":3331,"name":"BrowserCrawlerOptions.postNavigationHooks"}},{"id":5138,"name":"preNavigationHooks","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Async functions that are sequentially evaluated before the navigation. Good for setting additional cookies\\nor browser properties before navigation. The function accepts two parameters, `crawlingContext` and `gotoOptions`,\\nwhich are passed to the `page.goto()` function the crawler calls to navigate.\\nExample:\\n```\\npreNavigationHooks: [\\n    async (crawlingContext, gotoOptions) => {\\n        await page.evaluate((attr) => { window.foo = attr; }, \'bar\');\\n    },\\n]\\n```"},"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-crawler.ts","line":93,"character":4}],"type":{"type":"array","elementType":{"type":"reference","id":5329,"name":"PlaywrightHook"}},"overwrites":{"type":"reference","id":3330,"name":"BrowserCrawlerOptions.preNavigationHooks"}},{"id":5312,"name":"proxyConfiguration","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set, the crawler will be configured for all connections to use\\n[Apify Proxy](https://console.apify.com/proxy) or your own Proxy URLs provided and rotated according to the configuration.\\nFor more information, see the [documentation](https://docs.apify.com/proxy)."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":161,"character":4}],"type":{"type":"reference","id":1686,"name":"ProxyConfiguration"},"inheritedFrom":{"type":"reference","id":3329,"name":"BrowserCrawlerOptions.proxyConfiguration"}},{"id":5318,"name":"requestList","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Static list of URLs to be processed.\\nEither `requestList` or `requestQueue` option must be provided (or both)."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":92,"character":4}],"type":{"type":"reference","id":1158,"name":"RequestList"},"inheritedFrom":{"type":"reference","id":3337,"name":"BrowserCrawlerOptions.requestList"}},{"id":5317,"name":"requestQueue","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Dynamic queue of URLs to be processed. This is useful for recursive crawling of websites.\\nEither `requestList` or `requestQueue` option must be provided (or both)."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":98,"character":4}],"type":{"type":"reference","id":1270,"name":"RequestQueue"},"inheritedFrom":{"type":"reference","id":3336,"name":"BrowserCrawlerOptions.requestQueue"}},{"id":5325,"name":"sessionPoolOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The configuration options for {@link SessionPool} to use."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":170,"character":4}],"type":{"type":"reference","id":778,"name":"SessionPoolOptions"},"inheritedFrom":{"type":"reference","id":3344,"name":"BrowserCrawlerOptions.sessionPoolOptions"}},{"id":5324,"name":"useSessionPool","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Basic crawler will initialize the  {@link SessionPool} with the corresponding `sessionPoolOptions`.\\nThe session instance will be than available in the `handleRequestFunction`."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":165,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":3343,"name":"BrowserCrawlerOptions.useSessionPool"}}],"groups":[{"title":"Properties","kind":1024,"children":[5321,5147,5142,5315,5137,5136,5141,5314,5140,5323,5319,5320,5322,5313,5316,5139,5138,5312,5318,5317,5325,5324]}],"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-crawler.ts","line":18,"character":17}],"extendedTypes":[{"type":"reference","id":3323,"typeArguments":[{"type":"reference","id":5328,"name":"PlaywrightCrawlContext"},{"type":"reference","id":5327,"name":"PlaywrightGotoOptions"},{"type":"reflection","declaration":{"id":5134,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5135,"name":"browserPlugins","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-crawler.ts","line":21,"character":6}],"type":{"type":"tuple","elements":[{"type":"reference","qualifiedName":"PlaywrightPlugin","package":"browser-pool","name":"PlaywrightPlugin"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[5135]}],"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-crawler.ts","line":21,"character":4}]}}],"name":"BrowserCrawlerOptions"}],"permalink":"/apify-ts/api/next/playwright-crawler/interface/PlaywrightCrawlerOptions","previousId":4998,"nextId":5806},{"id":5806,"name":"PlaywrightLaunchContext","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"Apify extends the launch options of Playwright.\\nYou can use any of the Playwright compatible\\n[`LaunchOptions`](https://playwright.dev/docs/api/class-browsertype#browsertypelaunchoptions)\\noptions by providing the `launchOptions` property.","text":"**Example:**\\n```js\\n// launch a headless Chrome (not Chromium)\\nconst launchContext = {\\n    // Apify helpers\\n    useChrome: true,\\n    proxyUrl: \'http://user:password@some.proxy.com\'\\n    // Native Playwright options\\n    launchOptions: {\\n        headless: true,\\n        args: [\'--some-flag\'],\\n    }\\n}\\n```\\n"},"children":[{"id":5807,"name":"launchOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"`browserType.launch` [options](https://playwright.dev/docs/api/class-browsertype?_highlight=launch#browsertypelaunchoptions)"},"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-launcher.ts","line":29,"character":4}],"type":{"type":"reference","qualifiedName":"LaunchOptions","package":"playwright-core","name":"LaunchOptions"},"overwrites":{"type":"reference","id":3501,"name":"BrowserLaunchContext.launchOptions"}},{"id":5810,"name":"launcher","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"By default this function uses `require(\\"playwright\\").chromium`.\\nIf you want to use a different browser you can pass it by this property as e.g. `require(\\"playwright\\").firefox`"},"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-launcher.ts","line":54,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":5811,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}],"qualifiedName":"BrowserType","package":"playwright-core","name":"BrowserType"},"overwrites":{"type":"reference","id":3500,"name":"BrowserLaunchContext.launcher"}},{"id":5808,"name":"proxyUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL to a HTTP proxy server. It must define the port number,\\nand it may also contain proxy username and password.","text":"Example: `http://bob:pass123@proxy.example.com:1234`.\\n"},"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-launcher.ts","line":37,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","id":3502,"name":"BrowserLaunchContext.proxyUrl"}},{"id":5809,"name":"useChrome","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true` and `executablePath` is not set,\\nPlaywright will launch full Google Chrome browser available on the machine\\nrather than the bundled Chromium. The path to Chrome executable\\nis taken from the `APIFY_CHROME_EXECUTABLE_PATH` environment variable if provided,\\nor defaults to the typical Google Chrome executable location specific for the operating system.\\nBy default, this option is `false`.","tags":[{"tag":"default","text":"false\\n"}]},"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-launcher.ts","line":48,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"overwrites":{"type":"reference","id":3499,"name":"BrowserLaunchContext.useChrome"}},{"id":5812,"name":"useIncognitoPages","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"By default pages share the same browser context.\\nIf set to true each page uses its own context that is destroyed once the page is closed or crashes.","tags":[{"tag":"default","text":"false\\n"}]},"sources":[{"fileName":"node_modules/browser-pool/dist/abstract-classes/browser-plugin.d.ts","line":45,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":3503,"name":"BrowserLaunchContext.useIncognitoPages"}},{"id":5813,"name":"userDataDir","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Path to a User Data Directory, which stores browser session data like cookies and local storage."},"sources":[{"fileName":"node_modules/browser-pool/dist/abstract-classes/browser-plugin.d.ts","line":49,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":3504,"name":"BrowserLaunchContext.userDataDir"}}],"groups":[{"title":"Properties","kind":1024,"children":[5807,5810,5808,5809,5812,5813]}],"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-launcher.ts","line":27,"character":17}],"extendedTypes":[{"type":"reference","id":3498,"typeArguments":[{"type":"reference","qualifiedName":"LaunchOptions","package":"playwright-core","name":"LaunchOptions"},{"type":"reference","qualifiedName":"BrowserType","package":"playwright-core","name":"BrowserType"}],"name":"BrowserLaunchContext"}],"permalink":"/apify-ts/api/next/playwright-crawler/interface/PlaywrightLaunchContext","previousId":5133,"nextId":5006},{"id":5006,"name":"RequestAsBrowserOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":5017,"name":"abortFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Function accepts `response` object as a single parameter and should return `true` or `false`.\\nIf function returns true, request gets aborted."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":76,"character":4}],"type":{"type":"reference","id":1899,"name":"AbortFunction"}},{"id":5024,"name":"agent","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"Agents","package":"got-cjs","name":"Agents"}]},"inheritedFrom":{"type":"reference","name":"Omit.agent"}},{"id":5081,"name":"allowGetBody","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.allowGetBody"}},{"id":5028,"name":"body","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"global.Buffer","package":"@types/node","name":"Buffer"},{"type":"reference","qualifiedName":"internal.Readable","package":"@types/node","name":"Readable"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Generator","package":"typescript","name":"Generator"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"AsyncGenerator","package":"typescript","name":"AsyncGenerator"},{"type":"reference","qualifiedName":"FormDataLike","package":"form-data-encoder","name":"FormDataLike"}]},"inheritedFrom":{"type":"reference","name":"Omit.body"}},{"id":5076,"name":"cache","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"boolean"},{"type":"reference","qualifiedName":"CacheableRequest.StorageAdapter","package":"@types/cacheable-request","name":"StorageAdapter"}]},"inheritedFrom":{"type":"reference","name":"Omit.cache"}},{"id":5089,"name":"cacheOptions","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"CacheOptions","package":"got-cjs","name":"CacheOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.cacheOptions"}},{"id":5072,"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}]},"inheritedFrom":{"type":"reference","name":"Omit.context"}},{"id":5030,"name":"cookieJar","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"PromiseCookieJar","package":"got-cjs","name":"PromiseCookieJar"},{"type":"reference","qualifiedName":"ToughCookieJar","package":"got-cjs","name":"ToughCookieJar"}]},"inheritedFrom":{"type":"reference","name":"Omit.cookieJar"}},{"id":5013,"name":"countryCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Two-letter ISO 3166 country code."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":49,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5088,"name":"createConnection","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"CreateConnectionFunction","package":"got-cjs","name":"CreateConnectionFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.createConnection"}},{"id":5026,"name":"decompress","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.decompress"}},{"id":5071,"name":"dnsCache","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"},{"type":"reference","qualifiedName":"CacheableLookup","package":"cacheable-lookup","name":"default"}]},"inheritedFrom":{"type":"reference","name":"Omit.dnsCache"}},{"id":5033,"name":"dnsLookup","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":5034,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":5035,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"tags":[{"tag":"see","text":"https://nodejs.org/api/dns.html#dns_dns_lookup_hostname_options_callback\\n"}]},"parameters":[{"id":5036,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":5037,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}},{"id":5038,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5039,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":5040,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5041,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":5042,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":5043,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":5044,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5045,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":5046,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5047,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":5048,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5049,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":5050,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":5051,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":5052,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5053,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":5054,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"LookupOptions","package":"cacheable-lookup","name":"LookupOptions"},{"type":"reflection","declaration":{"id":5055,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5056,"name":"all","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/cacheable-lookup/index.d.ts","line":104,"character":52}],"type":{"type":"literal","value":true}}],"groups":[{"title":"Properties","kind":1024,"children":[5056]}]}}]}},{"id":5057,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5058,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":5059,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5060,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":5061,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","qualifiedName":"EntryObject","package":"cacheable-lookup","name":"EntryObject"}}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":5062,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5063,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":5064,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"LookupOptions","package":"cacheable-lookup","name":"LookupOptions"}},{"id":5065,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5066,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":5067,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5068,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":5069,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":5070,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}]},"inheritedFrom":{"type":"reference","name":"Omit.dnsLookup"}},{"id":5083,"name":"dnsLookupIpVersion","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"DnsLookupIpVersion","package":"got-cjs","name":"DnsLookupIpVersion"},"inheritedFrom":{"type":"reference","name":"Omit.dnsLookupIpVersion"}},{"id":5091,"name":"encoding","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"global.BufferEncoding","package":"@types/node","name":"BufferEncoding"}]},"inheritedFrom":{"type":"reference","name":"Omit.encoding"}},{"id":5074,"name":"followRedirect","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.followRedirect"}},{"id":5029,"name":"form","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}]},"inheritedFrom":{"type":"reference","name":"Omit.form"}},{"id":5025,"name":"h2session","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ClientHttp2Session","package":"@types/node","name":"ClientHttp2Session"}]},"inheritedFrom":{"type":"reference","name":"Omit.h2session"}},{"id":5011,"name":"headerGeneratorOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Configuration to be used for generating correct browser headers.\\nSee the [`header-generator`](https://github.com/apify/header-generator) library."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":39,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"id":5009,"name":"headers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Additional HTTP headers to add. It\'s only recommended to use this option,\\nwith headers that are typically added by websites, such as cookies. Overriding\\ndefault browser headers will remove the masking this function provides."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"overwrites":{"type":"reference","name":"Omit.headers"}},{"id":5073,"name":"hooks","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/got-cjs/dist/source/core/options.d.ts","line":556,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"Hooks","package":"got-cjs","name":"Hooks"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"inheritedFrom":{"type":"reference","name":"Omit.hooks"}},{"id":5080,"name":"http2","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.http2"}},{"id":5090,"name":"https","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"HttpsOptions","package":"got-cjs","name":"HttpsOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.https"}},{"id":5031,"name":"ignoreInvalidCookies","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.ignoreInvalidCookies"}},{"id":5015,"name":"ignoreSslErrors","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to true, SSL/TLS certificate errors will be ignored."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":59,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5093,"name":"isStream","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.isStream"}},{"id":5021,"name":"json","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The `boolean` type for `json` is deprecated"},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":97,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}]}},{"id":5012,"name":"languageCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Two-letter ISO 639 language code."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":44,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5087,"name":"localAddress","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.localAddress"}},{"id":5097,"name":"maxHeaderSize","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]},"inheritedFrom":{"type":"reference","name":"Omit.maxHeaderSize"}},{"id":5075,"name":"maxRedirects","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]},"inheritedFrom":{"type":"reference","name":"Omit.maxRedirects"}},{"id":5008,"name":"method","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"HTTP method."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":21,"character":4}],"type":{"type":"reference","qualifiedName":"Method","package":"got-cjs","name":"Method"},"overwrites":{"type":"reference","name":"Omit.method"}},{"id":5082,"name":"methodRewriting","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.methodRewriting"}},{"id":5095,"name":"pagination","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"PaginationOptions","package":"got-cjs","name":"PaginationOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.pagination"}},{"id":5084,"name":"parseJson","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ParseJsonFunction","package":"got-cjs","name":"ParseJsonFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.parseJson"}},{"id":5079,"name":"password","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.password"}},{"id":5027,"name":"prefixUrl","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"URL","package":"@types/node","name":"URL"}]},"inheritedFrom":{"type":"reference","name":"Omit.prefixUrl"}},{"id":5010,"name":"proxyUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An HTTP proxy to be passed down to the HTTP request. Supports proxy authentication with Basic Auth."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":5023,"name":"request","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"RequestFunction","package":"got-cjs","name":"RequestFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.request"}},{"id":5092,"name":"resolveBodyOnly","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.resolveBodyOnly"}},{"id":5094,"name":"responseType","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ResponseType","package":"got-cjs","name":"ResponseType"}]},"inheritedFrom":{"type":"reference","name":"Omit.responseType"}},{"id":5086,"name":"retry","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/got-cjs/dist/source/core/options.d.ts","line":557,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"RetryOptions","package":"got-cjs","name":"RetryOptions"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"inheritedFrom":{"type":"reference","name":"Omit.retry"}},{"id":5032,"name":"searchParams","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"SearchParameters","package":"got-cjs","name":"SearchParameters"},{"type":"reference","qualifiedName":"URLSearchParams","package":"@types/node","name":"URLSearchParams"}]},"inheritedFrom":{"type":"reference","name":"Omit.searchParams"}},{"id":5019,"name":"sessionToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A unique object used to generate browser headers. By default, new headers are generated on every call.\\nSet this option to make these headers persistent."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":90,"character":4}],"type":{"type":"intrinsic","name":"object"}},{"id":5096,"name":"setHost","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.setHost"}},{"id":5020,"name":"stream","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":92,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5085,"name":"stringifyJson","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"StringifyJsonFunction","package":"got-cjs","name":"StringifyJsonFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.stringifyJson"}},{"id":5077,"name":"throwHttpErrors","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.throwHttpErrors"}},{"id":5022,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"Delays","package":"got-cjs","name":"Delays"}]},"inheritedFrom":{"type":"reference","name":"Omit.timeout"}},{"id":5007,"name":"url","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":" URL of the target endpoint. Supports both HTTP and HTTPS schemes."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":16,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"Omit.url"}},{"id":5018,"name":"useHttp2","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to false, it will prevent use of HTTP2 requests. This is strongly discouraged. Websites\\nexpect HTTP2 connections, because browsers use HTTP2 by default. It will automatically downgrade\\nto HTTP/1.1 for websites that do not support HTTP2. For Node 10 this option is always set to `false`\\nbecause Node 10 does not support HTTP2 very well. Upgrade to Node 12 for better performance."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":84,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5016,"name":"useInsecureHttpParser","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Node.js\' HTTP parser is stricter than parsers used by web browsers, which prevents scraping of websites\\nwhose servers do not comply with HTTP specs, either by accident or due to some anti-scraping protections,\\ncausing e.g. the `invalid header value char` error. The `useInsecureHttpParser` option forces\\nthe HTTP parser to ignore certain errors which lets you scrape such websites.\\nHowever, it will also open your application to some security vulnerabilities,\\nalthough the risk should be negligible as these vulnerabilities mainly relate to server applications, not clients.\\nLearn more in this [blog post](https://snyk.io/blog/node-js-release-fixes-a-critical-http-security-vulnerability/)."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":70,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5014,"name":"useMobileVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true`, the function uses User-Agent of a mobile browser."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":54,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":5078,"name":"username","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.username"}}],"groups":[{"title":"Properties","kind":1024,"children":[5017,5024,5081,5028,5076,5089,5072,5030,5013,5088,5026,5071,5033,5083,5091,5074,5029,5025,5011,5009,5073,5080,5090,5031,5015,5093,5021,5012,5087,5097,5075,5008,5082,5095,5084,5079,5027,5010,5023,5092,5094,5086,5032,5019,5096,5020,5085,5077,5022,5007,5018,5016,5014,5078]}],"sources":[{"fileName":"packages/core/src/utils_request.ts","line":12,"character":17}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"OptionsInit","package":"got-cjs","name":"GotOptionsInit"},{"type":"literal","value":"json"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"}],"permalink":"/apify-ts/api/next/playwright-crawler/interface/RequestAsBrowserOptions","previousId":5806,"nextId":4850},{"id":5098,"name":"AbortFunction","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":100,"character":12}],"type":{"type":"reflection","declaration":{"id":5099,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":100,"character":28}],"signatures":[{"id":5100,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5101,"name":"response","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IncomingMessage","package":"@types/node","name":"IncomingMessage"}}],"type":{"type":"intrinsic","name":"boolean"}}]}},"permalink":"/apify-ts/api/next/playwright-crawler#AbortFunction","previousId":5109,"nextId":5132},{"id":5132,"name":"PlaywrightController","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-crawler.ts","line":16,"character":12}],"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"_createController"},"objectType":{"type":"reference","qualifiedName":"PlaywrightPlugin","package":"browser-pool","name":"PlaywrightPlugin"}}],"qualifiedName":"ReturnType","package":"typescript","name":"ReturnType"},"permalink":"/apify-ts/api/next/playwright-crawler#PlaywrightController","previousId":5098,"nextId":5328},{"id":5328,"name":"PlaywrightCrawlContext","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-crawler.ts","line":125,"character":12}],"type":{"type":"reference","id":3277,"typeArguments":[{"type":"reference","qualifiedName":"Page","package":"playwright-core","name":"Page"},{"type":"reference","qualifiedName":"Response","package":"playwright-core","name":"Response"},{"type":"reference","id":5132,"name":"PlaywrightController"}],"name":"BrowserCrawlingContext"},"permalink":"/apify-ts/api/next/playwright-crawler#PlaywrightCrawlContext","previousId":5132,"nextId":5327},{"id":5327,"name":"PlaywrightGotoOptions","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-crawler.ts","line":123,"character":12}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":1},"objectType":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"goto"},"objectType":{"type":"reference","qualifiedName":"Page","package":"playwright-core","name":"Page"}}],"qualifiedName":"Parameters","package":"typescript","name":"Parameters"}},"permalink":"/apify-ts/api/next/playwright-crawler#PlaywrightGotoOptions","previousId":5328,"nextId":5331},{"id":5331,"name":"PlaywrightHandlePageFunction","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-crawler.ts","line":131,"character":12}],"type":{"type":"reference","id":3303,"typeArguments":[{"type":"reference","id":5330,"name":"PlaywrightHandlePageFunctionParam"}],"name":"BrowserCrawlerHandleRequest"},"permalink":"/apify-ts/api/next/playwright-crawler#PlaywrightHandlePageFunction","previousId":5327,"nextId":5330},{"id":5330,"name":"PlaywrightHandlePageFunctionParam","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-crawler.ts","line":129,"character":12}],"type":{"type":"reference","id":3277,"typeArguments":[{"type":"reference","qualifiedName":"Page","package":"playwright-core","name":"Page"},{"type":"reference","qualifiedName":"Response","package":"playwright-core","name":"Response"},{"type":"reference","id":5132,"name":"PlaywrightController"}],"name":"BrowserCrawlingContext"},"permalink":"/apify-ts/api/next/playwright-crawler#PlaywrightHandlePageFunctionParam","previousId":5331,"nextId":5329},{"id":5329,"name":"PlaywrightHook","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-crawler.ts","line":127,"character":12}],"type":{"type":"reference","id":3309,"typeArguments":[{"type":"reference","id":5328,"name":"PlaywrightCrawlContext"},{"type":"reference","id":5327,"name":"PlaywrightGotoOptions"}],"name":"BrowserHook"},"permalink":"/apify-ts/api/next/playwright-crawler#PlaywrightHook","previousId":5330,"nextId":5002},{"id":5002,"name":"RequestAsBrowserResult","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":12}],"typeParameter":[{"id":5005,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"string"}}],"type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"IncomingMessage","package":"@types/node","name":"IncomingMessage"},{"type":"reflection","declaration":{"id":5003,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5004,"name":"body","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":69}],"type":{"type":"reference","id":1806,"name":"T"}}],"groups":[{"title":"Properties","kind":1024,"children":[5004]}],"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":67}]}}]},"permalink":"/apify-ts/api/next/playwright-crawler#RequestAsBrowserResult","previousId":5329},{"id":5803,"name":"launchPlaywright","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/playwright-crawler/src/internals/playwright-launcher.ts","line":148,"character":22}],"signatures":[{"id":5804,"name":"launchPlaywright","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Launches headless browsers using Playwright pre-configured to work within the Apify platform.\\nThe function has the same return value as `browserType.launch()`.\\nSee [Playwright documentation](https://playwright.dev/docs/api/class-browsertype) for more details.","text":"The `launchPlaywright()` function alters the following Playwright options:\\n\\n- Passes the setting from the `APIFY_HEADLESS` environment variable to the `headless` option,\\n  unless it was already defined by the caller or `APIFY_XVFB` environment variable is set to `1`.\\n  Note that Apify Actor cloud platform automatically sets `APIFY_HEADLESS=1` to all running actors.\\n- Takes the `proxyUrl` option, validates it and adds it to `launchOptions` in a proper format.\\n  The proxy URL must define a port number and have one of the following schemes: `http://`,\\n  `https://`, `socks4://` or `socks5://`.\\n  If the proxy is HTTP (i.e. has the `http://` scheme) and contains username or password,\\n  the `launchPlaywright` functions sets up an anonymous proxy HTTP\\n  to make the proxy work with headless Chrome. For more information, read the\\n  [blog post about proxy-chain library](https://blog.apify.com/how-to-make-headless-chrome-and-puppeteer-use-a-proxy-server-with-authentication-249a21a79212).\\n\\nTo use this function, you need to have the [Playwright](https://www.npmjs.com/package/playwright)\\nNPM package installed in your project.\\nWhen running on the Apify Platform, you can achieve that simply\\nby using the `apify/actor-node-playwright-*` base Docker image for your actor - see\\n[Apify Actor documentation](https://docs.apify.com/actor/build#base-images)\\nfor details.\\n","returns":"\\n  Promise that resolves to Playwright\'s `Browser` instance.\\n"},"parameters":[{"id":5805,"name":"launchContext","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":5806,"name":"PlaywrightLaunchContext"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"Browser","package":"playwright-core","name":"Browser"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/playwright-crawler/function/launchPlaywright","previousId":5332,"nextId":4998},{"id":4998,"name":"requestAsBrowser","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":144,"character":22}],"signatures":[{"id":4999,"name":"requestAsBrowser","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"**IMPORTANT:** This function uses an insecure version of HTTP parser by default\\nand also ignores SSL/TLS errors. This is very useful in scraping, because it allows bypassing\\ncertain anti-scraping walls, but it also exposes some vulnerability. For other than scraping\\nscenarios, please set `useInsecureHttpParser: false` and `ignoreSslErrors: false`.","text":"Sends a HTTP request that looks like a request sent by a web browser,\\nfully emulating browser\'s HTTP headers. It uses HTTP2 by default for Node 12+.\\n\\nThis function is useful for web scraping of websites that send the full HTML in the first response.\\nThanks to this function, the target web server has no simple way to find out the request\\nhasn\'t been sent by a human\'s web browser. Using a headless browser for such requests\\nis an order of magnitude more resource-intensive than this function.\\n\\nThe function emulates the Chrome and Firefox web browsers. If you want more control\\nover the browsers and their versions, use the `headerGeneratorOptions` property.\\nYou can find more info in the readme of the [`header-generator`](https://github.com/apify/header-generator) library.\\n\\nInternally, the function uses the [`got-scraping`](https://github.com/apify/got-scraping) library to perform the request.\\nAll `options` not recognized by this function are passed to it so see it for more details.\\n\\n**Example usage:**\\n```js\\nconst Apify = require(\'apify\');\\n\\nconst { utils: { requestAsBrowser } } = Apify;\\n\\n...\\n\\nconst response = await requestAsBrowser({ url: \'https://www.example.com/\' });\\n\\nconst html = response.body;\\nconst status = response.statusCode;\\nconst contentType = response.headers[\'content-type\'];\\n```\\n","returns":"The result can be various objects, but it will always be like a\\n[Node.js HTTP response stream](https://nodejs.org/api/http.html#http_class_http_incomingmessage)\\nwith a \'body\' property for the parsed response body, unless the \'stream\' option is used.\\n"},"typeParameter":[{"id":5000,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":5001,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"All `requestAsBrowser` configuration options.\\n"},"type":{"type":"reference","id":1807,"name":"RequestAsBrowserOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1803,"typeArguments":[{"type":"reference","id":1801,"name":"T"}],"name":"RequestAsBrowserResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/playwright-crawler/function/requestAsBrowser","previousId":5803,"nextId":5133}],"groups":[{"title":"Classes","kind":128,"children":[5332],"categories":[{"title":"Crawlers","children":[5332]}]},{"title":"Functions","kind":64,"children":[5803,4998]},{"title":"Interfaces","kind":256,"children":[5133,5806,5006]},{"title":"Namespaces","kind":4,"children":[4850]},{"title":"References","kind":16777216,"children":[4952,4953,4961,4865,4864,5119,5117,5111,5113,5112,5116,5129,5125,5123,5122,5124,5128,5121,5126,5130,4954,4988,4870,4949,4948,4873,4872,5118,4897,4950,4908,4909,4913,4906,4907,4910,4912,4911,4993,4891,4951,4883,4994,5127,5115,5114,4945,4921,4920,4924,4922,4918,5102,5104,5105,5106,5103,5107,4992,4860,4975,4972,4973,4974,4962,4888,4963,4892,4970,4940,4944,4923,4968,4929,4928,4932,4930,4969,4942,4941,4943,4889,4955,4895,4894,4899,4898,4893,4867,4866,4931,4880,4881,4879,4947,4868,4871,4869,4989,4990,5110,5120,4971,4983,4981,4882,4863,4900,4917,4978,4915,4967,4982,4979,4976,5108,4903,4914,4925,4934,4896,4987,4904,4995,4916,4980,4996,5109]},{"title":"Type aliases","kind":4194304,"children":[5098,5132,5328,5327,5331,5330,5329,5002]}],"sources":[{"fileName":"packages/playwright-crawler/src/index.ts","line":1,"character":0}],"permalink":"/apify-ts/api/next/playwright-crawler"},"urlSlug":"playwright-crawler"}],"packageName":"@crawlers/playwright","packageVersion":"1.0.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":6,"name":"@crawlers/puppeteer","kind":2,"kindString":"Module","flags":{},"children":[{"id":4416,"name":"ACTOR_EVENT_NAMES_EX","kind":16777216,"kindString":"Reference","flags":{},"target":1549,"permalink":"/apify-ts/api/next/puppeteer-crawler#ACTOR_EVENT_NAMES_EX","previousId":4158,"nextId":4417},{"id":4417,"name":"APIFY_API_BASE_URL","kind":16777216,"kindString":"Reference","flags":{},"target":1556,"permalink":"/apify-ts/api/next/puppeteer-crawler#APIFY_API_BASE_URL","previousId":4416,"nextId":4425},{"id":4425,"name":"ActorRunWithOutput","kind":16777216,"kindString":"Reference","flags":{},"target":1578,"permalink":"/apify-ts/api/next/puppeteer-crawler#ActorRunWithOutput","previousId":4417,"nextId":4329},{"id":4329,"name":"AutoscaledPool","kind":16777216,"kindString":"Reference","flags":{},"target":256,"permalink":"/apify-ts/api/next/puppeteer-crawler#AutoscaledPool","previousId":4425,"nextId":4328},{"id":4328,"name":"AutoscaledPoolOptions","kind":16777216,"kindString":"Reference","flags":{},"target":236,"permalink":"/apify-ts/api/next/puppeteer-crawler#AutoscaledPoolOptions","previousId":4329,"nextId":4583},{"id":4583,"name":"BASIC_CRAWLER_TIMEOUT_BUFFER_SECS","kind":16777216,"kindString":"Reference","flags":{},"target":3012,"permalink":"/apify-ts/api/next/puppeteer-crawler#BASIC_CRAWLER_TIMEOUT_BUFFER_SECS","previousId":4328,"nextId":4581},{"id":4581,"name":"BasicCrawler","kind":16777216,"kindString":"Reference","flags":{},"target":2915,"permalink":"/apify-ts/api/next/puppeteer-crawler#BasicCrawler","previousId":4583,"nextId":4575},{"id":4575,"name":"BasicCrawlerCrawlingContext","kind":16777216,"kindString":"Reference","flags":{},"target":2872,"permalink":"/apify-ts/api/next/puppeteer-crawler#BasicCrawlerCrawlingContext","previousId":4581,"nextId":4577},{"id":4577,"name":"BasicCrawlerEnqueueLinksOptions","kind":16777216,"kindString":"Reference","flags":{},"target":2888,"permalink":"/apify-ts/api/next/puppeteer-crawler#BasicCrawlerEnqueueLinksOptions","previousId":4575,"nextId":4576},{"id":4576,"name":"BasicCrawlerHandleFailedRequestInput","kind":16777216,"kindString":"Reference","flags":{},"target":2881,"permalink":"/apify-ts/api/next/puppeteer-crawler#BasicCrawlerHandleFailedRequestInput","previousId":4577,"nextId":4580},{"id":4580,"name":"BasicCrawlerOptions","kind":16777216,"kindString":"Reference","flags":{},"target":2899,"permalink":"/apify-ts/api/next/puppeteer-crawler#BasicCrawlerOptions","previousId":4576,"nextId":4294},{"id":4294,"name":"BlockRequestsOptions","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/index.ts","line":13,"character":4}],"target":4199,"permalink":"/apify-ts/api/next/puppeteer-crawler#BlockRequestsOptions","previousId":4580,"nextId":4593},{"id":4593,"name":"BrowserCrawler","kind":16777216,"kindString":"Reference","flags":{},"target":3352,"permalink":"/apify-ts/api/next/puppeteer-crawler#BrowserCrawler","previousId":4294,"nextId":4589},{"id":4589,"name":"BrowserCrawlerEnqueueLinksOptions","kind":16777216,"kindString":"Reference","flags":{},"target":3308,"permalink":"/apify-ts/api/next/puppeteer-crawler#BrowserCrawlerEnqueueLinksOptions","previousId":4593,"nextId":4587},{"id":4587,"name":"BrowserCrawlerHandleFailedRequest","kind":16777216,"kindString":"Reference","flags":{},"target":3299,"permalink":"/apify-ts/api/next/puppeteer-crawler#BrowserCrawlerHandleFailedRequest","previousId":4589,"nextId":4586},{"id":4586,"name":"BrowserCrawlerHandleFailedRequestInput","kind":16777216,"kindString":"Reference","flags":{},"target":3292,"permalink":"/apify-ts/api/next/puppeteer-crawler#BrowserCrawlerHandleFailedRequestInput","previousId":4587,"nextId":4588},{"id":4588,"name":"BrowserCrawlerHandleRequest","kind":16777216,"kindString":"Reference","flags":{},"target":3303,"permalink":"/apify-ts/api/next/puppeteer-crawler#BrowserCrawlerHandleRequest","previousId":4586,"nextId":4592},{"id":4592,"name":"BrowserCrawlerOptions","kind":16777216,"kindString":"Reference","flags":{},"target":3323,"permalink":"/apify-ts/api/next/puppeteer-crawler#BrowserCrawlerOptions","previousId":4588,"nextId":4585},{"id":4585,"name":"BrowserCrawlingContext","kind":16777216,"kindString":"Reference","flags":{},"target":3277,"permalink":"/apify-ts/api/next/puppeteer-crawler#BrowserCrawlingContext","previousId":4592,"nextId":4590},{"id":4590,"name":"BrowserHook","kind":16777216,"kindString":"Reference","flags":{},"target":3309,"permalink":"/apify-ts/api/next/puppeteer-crawler#BrowserHook","previousId":4585,"nextId":4594},{"id":4594,"name":"BrowserLaunchContext","kind":16777216,"kindString":"Reference","flags":{},"target":3498,"permalink":"/apify-ts/api/next/puppeteer-crawler#BrowserLaunchContext","previousId":4590,"nextId":4418},{"id":4418,"name":"COUNTRY_CODE_REGEX","kind":16777216,"kindString":"Reference","flags":{},"target":1557,"permalink":"/apify-ts/api/next/puppeteer-crawler#COUNTRY_CODE_REGEX","previousId":4594,"nextId":4452},{"id":4452,"name":"CheerioRoot","kind":16777216,"kindString":"Reference","flags":{},"target":1780,"permalink":"/apify-ts/api/next/puppeteer-crawler#CheerioRoot","previousId":4418,"nextId":4334},{"id":4334,"name":"ClientInfo","kind":16777216,"kindString":"Reference","flags":{},"target":458,"permalink":"/apify-ts/api/next/puppeteer-crawler#ClientInfo","previousId":4452,"nextId":4295},{"id":4295,"name":"CompiledScriptFunction","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/index.ts","line":14,"character":4}],"target":4205,"permalink":"/apify-ts/api/next/puppeteer-crawler#CompiledScriptFunction","previousId":4334,"nextId":4296},{"id":4296,"name":"CompiledScriptParams","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/index.ts","line":15,"character":4}],"target":4202,"permalink":"/apify-ts/api/next/puppeteer-crawler#CompiledScriptParams","previousId":4295,"nextId":4413},{"id":4413,"name":"Configuration","kind":16777216,"kindString":"Reference","flags":{},"target":1453,"permalink":"/apify-ts/api/next/puppeteer-crawler#Configuration","previousId":4296,"nextId":4412},{"id":4412,"name":"ConfigurationOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1430,"permalink":"/apify-ts/api/next/puppeteer-crawler#ConfigurationOptions","previousId":4413,"nextId":4337},{"id":4337,"name":"CrawlerHandleFailedRequestInput","kind":16777216,"kindString":"Reference","flags":{},"target":504,"permalink":"/apify-ts/api/next/puppeteer-crawler#CrawlerHandleFailedRequestInput","previousId":4412,"nextId":4336},{"id":4336,"name":"CrawlingContext","kind":16777216,"kindString":"Reference","flags":{},"target":499,"permalink":"/apify-ts/api/next/puppeteer-crawler#CrawlingContext","previousId":4337,"nextId":4582},{"id":4582,"name":"CreateContextOptions","kind":16777216,"kindString":"Reference","flags":{},"target":3008,"permalink":"/apify-ts/api/next/puppeteer-crawler#CreateContextOptions","previousId":4336,"nextId":4361},{"id":4361,"name":"CreateSession","kind":16777216,"kindString":"Reference","flags":{},"target":772,"permalink":"/apify-ts/api/next/puppeteer-crawler#CreateSession","previousId":4582,"nextId":4414},{"id":4414,"name":"DEFAULT_USER_AGENT","kind":16777216,"kindString":"Reference","flags":{},"target":1543,"permalink":"/apify-ts/api/next/puppeteer-crawler#DEFAULT_USER_AGENT","previousId":4361,"nextId":4372},{"id":4372,"name":"Dataset","kind":16777216,"kindString":"Reference","flags":{},"target":992,"permalink":"/apify-ts/api/next/puppeteer-crawler#Dataset","previousId":4414,"nextId":4373},{"id":4373,"name":"DatasetConsumer","kind":16777216,"kindString":"Reference","flags":{},"target":1034,"permalink":"/apify-ts/api/next/puppeteer-crawler#DatasetConsumer","previousId":4372,"nextId":4377},{"id":4377,"name":"DatasetContent","kind":16777216,"kindString":"Reference","flags":{},"target":1057,"permalink":"/apify-ts/api/next/puppeteer-crawler#DatasetContent","previousId":4373,"nextId":4370},{"id":4370,"name":"DatasetDataOptions","kind":16777216,"kindString":"Reference","flags":{},"target":973,"permalink":"/apify-ts/api/next/puppeteer-crawler#DatasetDataOptions","previousId":4377,"nextId":4371},{"id":4371,"name":"DatasetIteratorOptions","kind":16777216,"kindString":"Reference","flags":{},"target":982,"permalink":"/apify-ts/api/next/puppeteer-crawler#DatasetIteratorOptions","previousId":4370,"nextId":4374},{"id":4374,"name":"DatasetMapper","kind":16777216,"kindString":"Reference","flags":{},"target":1039,"permalink":"/apify-ts/api/next/puppeteer-crawler#DatasetMapper","previousId":4371,"nextId":4376},{"id":4376,"name":"DatasetOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1052,"permalink":"/apify-ts/api/next/puppeteer-crawler#DatasetOptions","previousId":4374,"nextId":4375},{"id":4375,"name":"DatasetReducer","kind":16777216,"kindString":"Reference","flags":{},"target":1045,"permalink":"/apify-ts/api/next/puppeteer-crawler#DatasetReducer","previousId":4376,"nextId":4457},{"id":4457,"name":"DownloadListOfUrlsOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1791,"permalink":"/apify-ts/api/next/puppeteer-crawler#DownloadListOfUrlsOptions","previousId":4375,"nextId":4355},{"id":4355,"name":"EVENT_SESSION_RETIRED","kind":16777216,"kindString":"Reference","flags":{},"target":674,"permalink":"/apify-ts/api/next/puppeteer-crawler#EVENT_SESSION_RETIRED","previousId":4457,"nextId":4415},{"id":4415,"name":"EXIT_CODES","kind":16777216,"kindString":"Reference","flags":{},"target":1544,"permalink":"/apify-ts/api/next/puppeteer-crawler#EXIT_CODES","previousId":4355,"nextId":4324},{"id":4324,"name":"EnqueueLinksByClickingElementsOptions","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/index.ts","line":23,"character":14}],"target":4316,"permalink":"/apify-ts/api/next/puppeteer-crawler#EnqueueLinksByClickingElementsOptions","previousId":4415,"nextId":4347},{"id":4347,"name":"EnqueueLinksOptions","kind":16777216,"kindString":"Reference","flags":{},"target":629,"permalink":"/apify-ts/api/next/puppeteer-crawler#EnqueueLinksOptions","previousId":4324,"nextId":4458},{"id":4458,"name":"ExtractUrlsOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1795,"permalink":"/apify-ts/api/next/puppeteer-crawler#ExtractUrlsOptions","previousId":4347,"nextId":4591},{"id":4591,"name":"GotoFunction","kind":16777216,"kindString":"Reference","flags":{},"target":3316,"permalink":"/apify-ts/api/next/puppeteer-crawler#GotoFunction","previousId":4458,"nextId":4579},{"id":4579,"name":"HandleFailedRequest","kind":16777216,"kindString":"Reference","flags":{},"target":2894,"permalink":"/apify-ts/api/next/puppeteer-crawler#HandleFailedRequest","previousId":4591,"nextId":4578},{"id":4578,"name":"HandleRequest","kind":16777216,"kindString":"Reference","flags":{},"target":2889,"permalink":"/apify-ts/api/next/puppeteer-crawler#HandleRequest","previousId":4579,"nextId":4409},{"id":4409,"name":"IStorage","kind":16777216,"kindString":"Reference","flags":{},"target":1346,"permalink":"/apify-ts/api/next/puppeteer-crawler#IStorage","previousId":4578,"nextId":4298},{"id":4298,"name":"InfiniteScrollOptions","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/index.ts","line":17,"character":4}],"target":4213,"permalink":"/apify-ts/api/next/puppeteer-crawler#InfiniteScrollOptions","previousId":4409,"nextId":4299},{"id":4299,"name":"InjectFileOptions","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/index.ts","line":18,"character":4}],"target":4197,"permalink":"/apify-ts/api/next/puppeteer-crawler#InjectFileOptions","previousId":4298,"nextId":4157},{"id":4157,"name":"InterceptHandler","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/index.ts","line":9,"character":14}],"target":4153,"permalink":"/apify-ts/api/next/puppeteer-crawler#InterceptHandler","previousId":4299,"nextId":4385},{"id":4385,"name":"KeyConsumer","kind":16777216,"kindString":"Reference","flags":{},"target":1128,"permalink":"/apify-ts/api/next/puppeteer-crawler#KeyConsumer","previousId":4157,"nextId":4384},{"id":4384,"name":"KeyValueStore","kind":16777216,"kindString":"Reference","flags":{},"target":1090,"permalink":"/apify-ts/api/next/puppeteer-crawler#KeyValueStore","previousId":4385,"nextId":4388},{"id":4388,"name":"KeyValueStoreIteratorOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1142,"permalink":"/apify-ts/api/next/puppeteer-crawler#KeyValueStoreIteratorOptions","previousId":4384,"nextId":4386},{"id":4386,"name":"KeyValueStoreOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1135,"permalink":"/apify-ts/api/next/puppeteer-crawler#KeyValueStoreOptions","previousId":4388,"nextId":4382},{"id":4382,"name":"KeyValueStoreValueTypes","kind":16777216,"kindString":"Reference","flags":{},"target":1082,"permalink":"/apify-ts/api/next/puppeteer-crawler#KeyValueStoreValueTypes","previousId":4386,"nextId":4566},{"id":4566,"name":"Log","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":9}],"target":2114,"permalink":"/apify-ts/api/next/puppeteer-crawler#Log","previousId":4382,"nextId":4568},{"id":4568,"name":"LogLevel","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":29}],"target":2181,"permalink":"/apify-ts/api/next/puppeteer-crawler#LogLevel","previousId":4566,"nextId":4569},{"id":4569,"name":"Logger","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":39}],"target":2189,"permalink":"/apify-ts/api/next/puppeteer-crawler#Logger","previousId":4568,"nextId":4570},{"id":4570,"name":"LoggerJson","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":47}],"target":2313,"permalink":"/apify-ts/api/next/puppeteer-crawler#LoggerJson","previousId":4569,"nextId":4567},{"id":4567,"name":"LoggerOptions","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":14}],"target":2173,"permalink":"/apify-ts/api/next/puppeteer-crawler#LoggerOptions","previousId":4570,"nextId":4571},{"id":4571,"name":"LoggerText","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":72,"character":59}],"target":2438,"permalink":"/apify-ts/api/next/puppeteer-crawler#LoggerText","previousId":4567,"nextId":4456},{"id":4456,"name":"MemoryInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1785,"permalink":"/apify-ts/api/next/puppeteer-crawler#MemoryInfo","previousId":4571,"nextId":4439},{"id":4439,"name":"ProxyConfiguration","kind":16777216,"kindString":"Reference","flags":{},"target":1686,"permalink":"/apify-ts/api/next/puppeteer-crawler#ProxyConfiguration","previousId":4456,"nextId":4436},{"id":4436,"name":"ProxyConfigurationFunction","kind":16777216,"kindString":"Reference","flags":{},"target":1667,"permalink":"/apify-ts/api/next/puppeteer-crawler#ProxyConfigurationFunction","previousId":4439,"nextId":4437},{"id":4437,"name":"ProxyConfigurationOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1670,"permalink":"/apify-ts/api/next/puppeteer-crawler#ProxyConfigurationOptions","previousId":4436,"nextId":4438},{"id":4438,"name":"ProxyInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1678,"permalink":"/apify-ts/api/next/puppeteer-crawler#ProxyInfo","previousId":4437,"nextId":4426},{"id":4426,"name":"PseudoUrl","kind":16777216,"kindString":"Reference","flags":{},"target":1596,"permalink":"/apify-ts/api/next/puppeteer-crawler#PseudoUrl","previousId":4438,"nextId":4352},{"id":4352,"name":"PseudoUrlInput","kind":16777216,"kindString":"Reference","flags":{},"target":652,"permalink":"/apify-ts/api/next/puppeteer-crawler#PseudoUrlInput","previousId":4426,"nextId":4427},{"id":4427,"name":"PseudoUrlObject","kind":16777216,"kindString":"Reference","flags":{},"target":1609,"permalink":"/apify-ts/api/next/puppeteer-crawler#PseudoUrlObject","previousId":4352,"nextId":4356},{"id":4356,"name":"PuppeteerCookie","kind":16777216,"kindString":"Reference","flags":{},"target":675,"permalink":"/apify-ts/api/next/puppeteer-crawler#PuppeteerCookie","previousId":4427,"nextId":4297},{"id":4297,"name":"PuppeteerDirectNavigationOptions","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/index.ts","line":16,"character":31}],"target":4193,"permalink":"/apify-ts/api/next/puppeteer-crawler#PuppeteerDirectNavigationOptions","previousId":4356,"nextId":4434},{"id":4434,"name":"PushErrorMessageOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1660,"permalink":"/apify-ts/api/next/puppeteer-crawler#PushErrorMessageOptions","previousId":4297,"nextId":4404},{"id":4404,"name":"QueueOperationInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1264,"permalink":"/apify-ts/api/next/puppeteer-crawler#QueueOperationInfo","previousId":4434,"nextId":4408},{"id":4408,"name":"QueueOperationInfoOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1343,"permalink":"/apify-ts/api/next/puppeteer-crawler#QueueOperationInfoOptions","previousId":4404,"nextId":4387},{"id":4387,"name":"RecordOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1140,"permalink":"/apify-ts/api/next/puppeteer-crawler#RecordOptions","previousId":4408,"nextId":4432},{"id":4432,"name":"Request","kind":16777216,"kindString":"Reference","flags":{},"target":1626,"permalink":"/apify-ts/api/next/puppeteer-crawler#Request","previousId":4387,"nextId":4393},{"id":4393,"name":"RequestList","kind":16777216,"kindString":"Reference","flags":{},"target":1158,"permalink":"/apify-ts/api/next/puppeteer-crawler#RequestList","previousId":4432,"nextId":4392},{"id":4392,"name":"RequestListOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1151,"permalink":"/apify-ts/api/next/puppeteer-crawler#RequestListOptions","previousId":4393,"nextId":4396},{"id":4396,"name":"RequestListSourcesFunction","kind":16777216,"kindString":"Reference","flags":{},"target":1249,"permalink":"/apify-ts/api/next/puppeteer-crawler#RequestListSourcesFunction","previousId":4392,"nextId":4394},{"id":4394,"name":"RequestListState","kind":16777216,"kindString":"Reference","flags":{},"target":1241,"permalink":"/apify-ts/api/next/puppeteer-crawler#RequestListState","previousId":4396,"nextId":4433},{"id":4433,"name":"RequestOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1649,"permalink":"/apify-ts/api/next/puppeteer-crawler#RequestOptions","previousId":4394,"nextId":4406},{"id":4406,"name":"RequestQueue","kind":16777216,"kindString":"Reference","flags":{},"target":1270,"permalink":"/apify-ts/api/next/puppeteer-crawler#RequestQueue","previousId":4433,"nextId":4405},{"id":4405,"name":"RequestQueueOperationOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1268,"permalink":"/apify-ts/api/next/puppeteer-crawler#RequestQueueOperationOptions","previousId":4406,"nextId":4407},{"id":4407,"name":"RequestQueueOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1338,"permalink":"/apify-ts/api/next/puppeteer-crawler#RequestQueueOptions","previousId":4405,"nextId":4353},{"id":4353,"name":"RequestTransform","kind":16777216,"kindString":"Reference","flags":{},"target":653,"permalink":"/apify-ts/api/next/puppeteer-crawler#RequestTransform","previousId":4407,"nextId":4419},{"id":4419,"name":"STATUS_CODES_BLOCKED","kind":16777216,"kindString":"Reference","flags":{},"target":1558,"permalink":"/apify-ts/api/next/puppeteer-crawler#STATUS_CODES_BLOCKED","previousId":4353,"nextId":4300},{"id":4300,"name":"SaveSnapshotOptions","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/index.ts","line":19,"character":4}],"target":4220,"permalink":"/apify-ts/api/next/puppeteer-crawler#SaveSnapshotOptions","previousId":4419,"nextId":4359},{"id":4359,"name":"Session","kind":16777216,"kindString":"Reference","flags":{},"target":701,"permalink":"/apify-ts/api/next/puppeteer-crawler#Session","previousId":4300,"nextId":4358},{"id":4358,"name":"SessionOptions","kind":16777216,"kindString":"Reference","flags":{},"target":687,"permalink":"/apify-ts/api/next/puppeteer-crawler#SessionOptions","previousId":4359,"nextId":4363},{"id":4363,"name":"SessionPool","kind":16777216,"kindString":"Reference","flags":{},"target":786,"permalink":"/apify-ts/api/next/puppeteer-crawler#SessionPool","previousId":4358,"nextId":4362},{"id":4362,"name":"SessionPoolOptions","kind":16777216,"kindString":"Reference","flags":{},"target":778,"permalink":"/apify-ts/api/next/puppeteer-crawler#SessionPoolOptions","previousId":4363,"nextId":4357},{"id":4357,"name":"SessionState","kind":16777216,"kindString":"Reference","flags":{},"target":676,"permalink":"/apify-ts/api/next/puppeteer-crawler#SessionState","previousId":4362,"nextId":4331},{"id":4331,"name":"Snapshotter","kind":16777216,"kindString":"Reference","flags":{},"target":352,"permalink":"/apify-ts/api/next/puppeteer-crawler#Snapshotter","previousId":4357,"nextId":4330},{"id":4330,"name":"SnapshotterOptions","kind":16777216,"kindString":"Reference","flags":{},"target":341,"permalink":"/apify-ts/api/next/puppeteer-crawler#SnapshotterOptions","previousId":4331,"nextId":4395},{"id":4395,"name":"Source","kind":16777216,"kindString":"Reference","flags":{},"target":1245,"permalink":"/apify-ts/api/next/puppeteer-crawler#Source","previousId":4330,"nextId":4344},{"id":4344,"name":"StatisticPersistedState","kind":16777216,"kindString":"Reference","flags":{},"target":591,"permalink":"/apify-ts/api/next/puppeteer-crawler#StatisticPersistedState","previousId":4395,"nextId":4345},{"id":4345,"name":"StatisticState","kind":16777216,"kindString":"Reference","flags":{},"target":612,"permalink":"/apify-ts/api/next/puppeteer-crawler#StatisticState","previousId":4344,"nextId":4343},{"id":4343,"name":"Statistics","kind":16777216,"kindString":"Reference","flags":{},"target":536,"permalink":"/apify-ts/api/next/puppeteer-crawler#Statistics","previousId":4345,"nextId":4143},{"id":4143,"name":"StealthOptions","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/index.ts","line":6,"character":14}],"target":4132,"permalink":"/apify-ts/api/next/puppeteer-crawler#StealthOptions","previousId":4343,"nextId":4411},{"id":4411,"name":"StorageManagerOptions","kind":16777216,"kindString":"Reference","flags":{},"target":1427,"permalink":"/apify-ts/api/next/puppeteer-crawler#StorageManagerOptions","previousId":4143,"nextId":4332},{"id":4332,"name":"SystemInfo","kind":16777216,"kindString":"Reference","flags":{},"target":441,"permalink":"/apify-ts/api/next/puppeteer-crawler#SystemInfo","previousId":4411,"nextId":4335},{"id":4335,"name":"SystemStatus","kind":16777216,"kindString":"Reference","flags":{},"target":462,"permalink":"/apify-ts/api/next/puppeteer-crawler#SystemStatus","previousId":4332,"nextId":4333},{"id":4333,"name":"SystemStatusOptions","kind":16777216,"kindString":"Reference","flags":{},"target":451,"permalink":"/apify-ts/api/next/puppeteer-crawler#SystemStatusOptions","previousId":4335,"nextId":4453},{"id":4453,"name":"URL_NO_COMMAS_REGEX","kind":16777216,"kindString":"Reference","flags":{},"target":1781,"permalink":"/apify-ts/api/next/puppeteer-crawler#URL_NO_COMMAS_REGEX","previousId":4333,"nextId":4454},{"id":4454,"name":"URL_WITH_COMMAS_REGEX","kind":16777216,"kindString":"Reference","flags":{},"target":1782,"permalink":"/apify-ts/api/next/puppeteer-crawler#URL_WITH_COMMAS_REGEX","previousId":4453,"nextId":4574},{"id":4574,"name":"basicCrawlerEnqueueLinks","kind":16777216,"kindString":"Reference","flags":{},"target":2868,"permalink":"/apify-ts/api/next/puppeteer-crawler#basicCrawlerEnqueueLinks","previousId":4454,"nextId":4584},{"id":4584,"name":"browserCrawlerEnqueueLinks","kind":16777216,"kindString":"Reference","flags":{},"target":3272,"permalink":"/apify-ts/api/next/puppeteer-crawler#browserCrawlerEnqueueLinks","previousId":4574,"nextId":4435},{"id":4435,"name":"createProxyConfiguration","kind":16777216,"kindString":"Reference","flags":{},"target":1662,"permalink":"/apify-ts/api/next/puppeteer-crawler#createProxyConfiguration","previousId":4584,"nextId":4447},{"id":4447,"name":"createRequestDebugInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1761,"permalink":"/apify-ts/api/next/puppeteer-crawler#createRequestDebugInfo","previousId":4435,"nextId":4445},{"id":4445,"name":"downloadListOfUrls","kind":16777216,"kindString":"Reference","flags":{},"target":1755,"permalink":"/apify-ts/api/next/puppeteer-crawler#downloadListOfUrls","previousId":4447,"nextId":4346},{"id":4346,"name":"enqueueLinks","kind":16777216,"kindString":"Reference","flags":{},"target":626,"permalink":"/apify-ts/api/next/puppeteer-crawler#enqueueLinks","previousId":4445,"nextId":4327},{"id":4327,"name":"events","kind":16777216,"kindString":"Reference","flags":{},"target":235,"permalink":"/apify-ts/api/next/puppeteer-crawler#events","previousId":4346,"nextId":4364},{"id":4364,"name":"getCookiesFromResponse","kind":16777216,"kindString":"Reference","flags":{},"target":949,"permalink":"/apify-ts/api/next/puppeteer-crawler#getCookiesFromResponse","previousId":4327,"nextId":4381},{"id":4381,"name":"getInput","kind":16777216,"kindString":"Reference","flags":{},"target":1079,"permalink":"/apify-ts/api/next/puppeteer-crawler#getInput","previousId":4364,"nextId":4442},{"id":4442,"name":"getMemoryInfo","kind":16777216,"kindString":"Reference","flags":{},"target":1748,"permalink":"/apify-ts/api/next/puppeteer-crawler#getMemoryInfo","previousId":4381,"nextId":4379},{"id":4379,"name":"getValue","kind":16777216,"kindString":"Reference","flags":{},"target":1069,"permalink":"/apify-ts/api/next/puppeteer-crawler#getValue","previousId":4442,"nextId":4431},{"id":4431,"name":"hashPayload","kind":16777216,"kindString":"Reference","flags":{},"target":1623,"permalink":"/apify-ts/api/next/puppeteer-crawler#hashPayload","previousId":4379,"nextId":4446},{"id":4446,"name":"htmlToText","kind":16777216,"kindString":"Reference","flags":{},"target":1758,"permalink":"/apify-ts/api/next/puppeteer-crawler#htmlToText","previousId":4431,"nextId":4443},{"id":4443,"name":"isAtHome","kind":16777216,"kindString":"Reference","flags":{},"target":1750,"permalink":"/apify-ts/api/next/puppeteer-crawler#isAtHome","previousId":4446,"nextId":4440},{"id":4440,"name":"isDocker","kind":16777216,"kindString":"Reference","flags":{},"target":1741,"permalink":"/apify-ts/api/next/puppeteer-crawler#isDocker","previousId":4443,"nextId":4572},{"id":4572,"name":"log","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils_log.ts","line":73,"character":9}],"target":2566,"permalink":"/apify-ts/api/next/puppeteer-crawler#log","previousId":4440,"nextId":4367},{"id":4367,"name":"openDataset","kind":16777216,"kindString":"Reference","flags":{},"target":964,"permalink":"/apify-ts/api/next/puppeteer-crawler#openDataset","previousId":4572,"nextId":4378},{"id":4378,"name":"openKeyValueStore","kind":16777216,"kindString":"Reference","flags":{},"target":1065,"permalink":"/apify-ts/api/next/puppeteer-crawler#openKeyValueStore","previousId":4367,"nextId":4389},{"id":4389,"name":"openRequestList","kind":16777216,"kindString":"Reference","flags":{},"target":1144,"permalink":"/apify-ts/api/next/puppeteer-crawler#openRequestList","previousId":4378,"nextId":4398},{"id":4398,"name":"openRequestQueue","kind":16777216,"kindString":"Reference","flags":{},"target":1255,"permalink":"/apify-ts/api/next/puppeteer-crawler#openRequestQueue","previousId":4389,"nextId":4360},{"id":4360,"name":"openSessionPool","kind":16777216,"kindString":"Reference","flags":{},"target":769,"permalink":"/apify-ts/api/next/puppeteer-crawler#openSessionPool","previousId":4398,"nextId":4451},{"id":4451,"name":"purgeLocalStorage","kind":16777216,"kindString":"Reference","flags":{},"target":1777,"permalink":"/apify-ts/api/next/puppeteer-crawler#purgeLocalStorage","previousId":4360,"nextId":4368},{"id":4368,"name":"pushData","kind":16777216,"kindString":"Reference","flags":{},"target":969,"permalink":"/apify-ts/api/next/puppeteer-crawler#pushData","previousId":4451,"nextId":4459},{"id":4459,"name":"requestUtils","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils.ts","line":580,"character":12}],"target":1798,"permalink":"/apify-ts/api/next/puppeteer-crawler#requestUtils","previousId":4368,"nextId":4380},{"id":4380,"name":"setValue","kind":16777216,"kindString":"Reference","flags":{},"target":1073,"permalink":"/apify-ts/api/next/puppeteer-crawler#setValue","previousId":4459,"nextId":4444},{"id":4444,"name":"sleep","kind":16777216,"kindString":"Reference","flags":{},"target":1752,"permalink":"/apify-ts/api/next/puppeteer-crawler#sleep","previousId":4380,"nextId":4460},{"id":4460,"name":"socialUtils","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/core/src/utils.ts","line":582,"character":12}],"target":1903,"permalink":"/apify-ts/api/next/puppeteer-crawler#socialUtils","previousId":4444,"nextId":4573},{"id":4573,"name":"validators","kind":16777216,"kindString":"Reference","flags":{},"target":2567,"permalink":"/apify-ts/api/next/puppeteer-crawler#validators","previousId":4460,"nextId":4562},{"id":4301,"name":"puppeteerClickElements","kind":4,"kindString":"Namespace","flags":{},"children":[{"id":4316,"name":"EnqueueLinksByClickingElementsOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":4323,"name":"maxWaitForPageIdleSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"This is the maximum period for which the function will keep tracking events, even if more events keep coming.\\nIts purpose is to prevent a deadlock in the page by periodic events, often unrelated to the clicking itself.\\nSee `waitForPageIdleSecs` above for an explanation.","tags":[{"tag":"default","text":"5\\n"}]},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/enqueue-links/click-elements.ts","line":97,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":4317,"name":"page","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Puppeteer [`Page`](https://pptr.dev/#?product=Puppeteer&show=api-class-page) object."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/enqueue-links/click-elements.ts","line":25,"character":4}],"type":{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"}},{"id":4320,"name":"pseudoUrls","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of {@link PseudoUrl}s matching the URLs to be enqueued,\\nor an array of strings or RegExps or plain Objects from which the {@link PseudoUrl}s can be constructed.","text":"The plain objects must include at least the `purl` property, which holds the pseudo-URL string or RegExp.\\nAll remaining keys will be used as the `requestTemplate` argument of the {@link PseudoUrl} constructor,\\nwhich lets you specify special properties for the enqueued {@link Request} objects.\\n\\nIf `pseudoUrls` is an empty array, `null` or `undefined`, then the function\\nenqueues all links found on the page.\\n"},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/enqueue-links/click-elements.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","id":652,"name":"PseudoUrlInput"}}},{"id":4318,"name":"requestQueue","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A request queue to which the URLs will be enqueued."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/enqueue-links/click-elements.ts","line":30,"character":4}],"type":{"type":"reference","id":1270,"name":"RequestQueue"}},{"id":4319,"name":"selector","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A CSS selector matching elements to be clicked on. Unlike in {@link utils.enqueueLinks}, there is no default\\nvalue. This is to prevent suboptimal use of this function by using it too broadly."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/enqueue-links/click-elements.ts","line":36,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4321,"name":"transformRequestFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Just before a new {@link Request} is constructed and enqueued to the {@link RequestQueue}, this function can be used\\nto remove it or modify its contents such as `userData`, `payload` or, most importantly `uniqueKey`. This is useful\\nwhen you need to enqueue multiple `Requests` to the queue that share the same URL, but differ in methods or payloads,\\nor to dynamically update or create `userData`.","text":"For example: by adding `useExtendedUniqueKey: true` to the `request` object, `uniqueKey` will be computed from\\na combination of `url`, `method` and `payload` which enables crawling of websites that navigate using form submits\\n(POST requests).\\n\\n**Example:**\\n```javascript\\n{\\n    transformRequestFunction: (request) => {\\n        request.userData.foo = \'bar\';\\n        request.useExtendedUniqueKey = true;\\n        return request;\\n    }\\n}\\n```\\n"},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/enqueue-links/click-elements.ts","line":72,"character":4}],"type":{"type":"reference","id":653,"name":"RequestTransform"}},{"id":4322,"name":"waitForPageIdleSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Clicking in the page triggers various asynchronous operations that lead to new URLs being shown\\nby the browser. It could be a simple JavaScript redirect or opening of a new tab in the browser.\\nThese events often happen only some time after the actual click. Requests typically take milliseconds\\nwhile new tabs open in hundreds of milliseconds.","text":"To be able to capture all those events, the `enqueueLinksByClickingElements()` function repeatedly waits\\nfor the `waitForPageIdleSecs`. By repeatedly we mean that whenever a relevant event is triggered, the timer\\nis restarted. As long as new events keep coming, the function will not return, unless\\nthe below `maxWaitForPageIdleSecs` timeout is reached.\\n\\nYou may want to reduce this for example when you\'re sure that your clicks do not open new tabs,\\nor increase when you\'re not getting all the expected URLs.","tags":[{"tag":"default","text":"1\\n"}]},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/enqueue-links/click-elements.ts","line":89,"character":4}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[4323,4317,4320,4318,4319,4321,4322]}],"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/enqueue-links/click-elements.ts","line":21,"character":17}]},{"id":4302,"name":"enqueueLinksByClickingElements","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/enqueue-links/click-elements.ts","line":142,"character":22}],"signatures":[{"id":4303,"name":"enqueueLinksByClickingElements","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"The function finds elements matching a specific CSS selector in a Puppeteer page,\\nclicks all those elements using a mouse move and a left mouse button click and intercepts\\nall the navigation requests that are subsequently produced by the page. The intercepted\\nrequests, including their methods, headers and payloads are then enqueued to a provided\\n{@link RequestQueue}. This is useful to crawl JavaScript heavy pages where links are not available\\nin `href` elements, but rather navigations are triggered in click handlers.\\nIf you\'re looking to find URLs in `href` attributes of the page, see {@link utils.enqueueLinks}.","text":"Optionally, the function allows you to filter the target links\' URLs using an array of {@link PseudoUrl} objects\\nand override settings of the enqueued {@link Request} objects.\\n\\n**IMPORTANT**: To be able to do this, this function uses various mutations on the page,\\nsuch as changing the Z-index of elements being clicked and their visibility. Therefore,\\nit is recommended to only use this function as the last operation in the page.\\n\\n**USING HEADFUL BROWSER**: When using a headful browser, this function will only be able to click elements\\nin the focused tab, effectively limiting concurrency to 1. In headless mode, full concurrency can be achieved.\\n\\n**PERFORMANCE**: Clicking elements with a mouse and intercepting requests is not a low level operation\\nthat takes nanoseconds. It\'s not very CPU intensive, but it takes time. We strongly recommend limiting\\nthe scope of the clicking as much as possible by using a specific selector that targets only the elements\\nthat you assume or know will produce a navigation. You can certainly click everything by using\\nthe `*` selector, but be prepared to wait minutes to get results on a large and complex page.\\n\\n**Example usage**\\n\\n```javascript\\nawait Apify.utils.puppeteer.enqueueLinksByClickingElements({\\n  page,\\n  requestQueue,\\n  selector: \'a.product-detail\',\\n  pseudoUrls: [\\n      \'https://www.example.com/handbags/[.*]\'\\n      \'https://www.example.com/purses/[.*]\'\\n  ],\\n});\\n```\\n","returns":"\\n  Promise that resolves to an array of {@link QueueOperationInfo} objects.\\n"},"parameters":[{"id":4304,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4316,"name":"EnqueueLinksByClickingElementsOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1264,"name":"QueueOperationInfo"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":4308,"name":"isTargetRelevant","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/enqueue-links/click-elements.ts","line":285,"character":16}],"signatures":[{"id":4309,"name":"isTargetRelevant","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"We\'re only interested in pages created by the page we\'re currently clicking in.\\nThere will generally be a lot of other targets being created in the browser."},"parameters":[{"id":4310,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"}},{"id":4311,"name":"target","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"Target","package":"puppeteer","name":"Target"}}],"type":{"type":"intrinsic","name":"boolean"}}]}],"groups":[{"title":"Interfaces","kind":256,"children":[4316]},{"title":"Functions","kind":64,"children":[4302,4308]}],"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/enqueue-links/click-elements.ts","line":1,"character":0}],"permalink":"/apify-ts/api/next/puppeteer-crawler/namespace/puppeteerClickElements","previousId":4470,"nextId":4144},{"id":4144,"name":"puppeteerRequestInterception","kind":4,"kindString":"Namespace","flags":{},"children":[{"id":4153,"name":"InterceptHandler","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_request_interception.ts","line":36,"character":12}],"type":{"type":"reflection","declaration":{"id":4154,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_request_interception.ts","line":36,"character":31}],"signatures":[{"id":4155,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4156,"name":"request","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"HTTPRequest","package":"puppeteer","name":"PuppeteerRequest"}}],"type":{"type":"intrinsic","name":"unknown"}}]}}},{"id":4145,"name":"addInterceptRequestHandler","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_request_interception.ts","line":157,"character":22}],"signatures":[{"id":4146,"name":"addInterceptRequestHandler","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds request interception handler in similar to `page.on(\'request\', handler);` but in addition to that\\nsupports multiple parallel handlers.","text":"All the handlers are executed sequentially in the order as they were added.\\nEach of the handlers must call one of `request.continue()`, `request.abort()` and `request.respond()`.\\nIn addition to that any of the handlers may modify the request object (method, postData, headers)\\nby passing its overrides to `request.continue()`.\\nIf multiple handlers modify same property then the last one wins. Headers are merged separately so you can\\noverride only a value of specific header.\\n\\nIf one the handlers calls `request.abort()` or `request.respond()` then request is not propagated further\\nto any of the remaining handlers.\\n\\n\\n**Example usage:**\\n\\n```javascript\\n// Replace images with placeholder.\\nawait addInterceptRequestHandler(page, (request) => {\\n    if (request.resourceType() === \'image\') {\\n        return request.respond({\\n            statusCode: 200,\\n            contentType: \'image/jpeg\',\\n            body: placeholderImageBuffer,\\n        });\\n    }\\n    return request.continue();\\n});\\n\\n// Abort all the scripts.\\nawait addInterceptRequestHandler(page, (request) => {\\n    if (request.resourceType() === \'script\') return request.abort();\\n    return request.continue();\\n});\\n\\n// Change requests to post.\\nawait addInterceptRequestHandler(page, (request) => {\\n    return request.continue({\\n         method: \'POST\',\\n    });\\n});\\n\\nawait page.goto(\'http://example.com\');\\n```\\n"},"parameters":[{"id":4147,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Puppeteer [`Page`](https://pptr.dev/#?product=Puppeteer&show=api-class-page) object."},"type":{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"}},{"id":4148,"name":"handler","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Request interception handler.\\n"},"type":{"type":"reference","id":4153,"name":"InterceptHandler"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":4149,"name":"removeInterceptRequestHandler","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_request_interception.ts","line":200,"character":22}],"signatures":[{"id":4150,"name":"removeInterceptRequestHandler","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Removes request interception handler for given page."},"parameters":[{"id":4151,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Puppeteer [`Page`](https://pptr.dev/#?product=Puppeteer&show=api-class-page) object."},"type":{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"}},{"id":4152,"name":"handler","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Request interception handler.\\n"},"type":{"type":"reference","id":4153,"name":"InterceptHandler"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"groups":[{"title":"Type aliases","kind":4194304,"children":[4153]},{"title":"Functions","kind":64,"children":[4145,4149]}],"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_request_interception.ts","line":1,"character":0}],"permalink":"/apify-ts/api/next/puppeteer-crawler/namespace/puppeteerRequestInterception","previousId":4301,"nextId":4122},{"id":4122,"name":"puppeteerStealth","kind":4,"kindString":"Namespace","flags":{},"children":[{"id":4132,"name":"StealthOptions","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"Configuration of stealth tricks for a proper hiding effect all of them should be set to true.\\nThese tricks are applied only when the `stealth` option is set to `true`."},"children":[{"id":4137,"name":"addLanguage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Adds languages to the navigator."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/stealth/index.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4133,"name":"addPlugins","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If plugins should be added to the navigator."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/stealth/index.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4136,"name":"emulateConsoleDebug","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Emulates console.debug to return null."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/stealth/index.ts","line":21,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4135,"name":"emulateWebGL","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Emulates graphic card."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/stealth/index.ts","line":19,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4134,"name":"emulateWindowFrame","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Emulates window Iframe."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/stealth/index.ts","line":17,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4139,"name":"hackPermissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Fakes interaction with permissions."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/stealth/index.ts","line":27,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4138,"name":"hideWebDriver","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Hides the webdriver by changing the navigator proto."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/stealth/index.ts","line":25,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4140,"name":"mockChrome","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Adds the chrome runtime properties."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/stealth/index.ts","line":29,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4141,"name":"mockChromeInIframe","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Adds the chrome runtime properties inside the every newly created iframe."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/stealth/index.ts","line":31,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4142,"name":"mockDeviceMemory","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets device memory to other value than 0."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/stealth/index.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","kind":1024,"children":[4137,4133,4136,4135,4134,4139,4138,4140,4141,4142]}],"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/stealth/index.ts","line":13,"character":17}]},{"id":4123,"name":"applyStealthToBrowser","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/stealth/index.ts","line":58,"character":16}],"signatures":[{"id":4124,"name":"applyStealthToBrowser","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":" The main purpose of this function is to override newPage function and attach selected tricks.","returns":"Instance of Browser from puppeteer package\\n"},"parameters":[{"id":4125,"name":"browser","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"puppeteer browser instance"},"type":{"type":"reference","qualifiedName":"Browser","package":"puppeteer","name":"Browser"}},{"id":4126,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","id":4132,"name":"StealthOptions"}}],"type":{"type":"reference","qualifiedName":"Browser","package":"puppeteer","name":"Browser"}}]}],"groups":[{"title":"Interfaces","kind":256,"children":[4132]},{"title":"Functions","kind":64,"children":[4123]}],"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/stealth/index.ts","line":1,"character":0}],"permalink":"/apify-ts/api/next/puppeteer-crawler/namespace/puppeteerStealth","previousId":4144,"nextId":4158},{"id":4158,"name":"puppeteerUtils","kind":4,"kindString":"Namespace","flags":{},"comment":{"shortText":"A namespace that contains various utilities for\\n[Puppeteer](https://github.com/puppeteer/puppeteer) - the headless Chrome Node API.","text":"**Example usage:**\\n\\n```javascript\\nconst Apify = require(\'apify\');\\nconst { puppeteer } = Apify.utils;\\n\\n// Open https://www.example.com in Puppeteer\\nconst browser = await Apify.launchPuppeteer();\\nconst page = await browser.newPage();\\nawait page.goto(\'https://www.example.com\');\\n\\n// Inject jQuery into a page\\nawait puppeteer.injectJQuery(page);\\n```"},"children":[{"id":4229,"name":"addInterceptRequestHandler","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":608,"character":4}],"target":4145},{"id":4230,"name":"removeInterceptRequestHandler","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":609,"character":4}],"target":4149},{"id":4199,"name":"BlockRequestsOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":4201,"name":"extraUrlPatterns","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If you just want to append to the default blocked patterns, use this property."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":86,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":4200,"name":"urlPatterns","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The patterns of URLs to block from being loaded by the browser.\\nOnly `*` can be used as a wildcard. It is also automatically added to the beginning\\nand end of the pattern. This limitation is enforced by the DevTools protocol.\\n`.png` is the same as `*.png*`."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":81,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"groups":[{"title":"Properties","kind":1024,"children":[4201,4200]}],"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":74,"character":17}]},{"id":4202,"name":"CompiledScriptParams","kind":256,"kindString":"Interface","flags":{},"children":[{"id":4203,"name":"page","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":90,"character":4}],"type":{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"}},{"id":4204,"name":"request","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":91,"character":4}],"type":{"type":"reference","id":1626,"name":"Request"}}],"groups":[{"title":"Properties","kind":1024,"children":[4203,4204]}],"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":89,"character":17}]},{"id":4193,"name":"DirectNavigationOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":4196,"name":"referer","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Referer header value. If provided it will take preference over the referer header value set by page.setExtraHTTPHeaders(headers)."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":62,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4194,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum operation time in milliseconds, defaults to 30 seconds, pass `0` to disable timeout. The\\ndefault value can be changed by using the browserContext.setDefaultNavigationTimeout(timeout),\\nbrowserContext.setDefaultTimeout(timeout), page.setDefaultNavigationTimeout(timeout) or\\npage.setDefaultTimeout(timeout) methods."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":49,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":4195,"name":"waitUntil","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"When to consider operation succeeded, defaults to `load`. Events can be either:\\n- `\'domcontentloaded\'` - consider operation to be finished when the `DOMContentLoaded` event is fired.\\n- `\'load\'` - consider operation to be finished when the `load` event is fired.\\n- `\'networkidle\'` - consider operation to be finished when there are no network connections for at least `500` ms."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":57,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"domcontentloaded"},{"type":"literal","value":"load"},{"type":"literal","value":"networkidle"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[4196,4194,4195]}],"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":42,"character":17}]},{"id":4213,"name":"InfiniteScrollOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":4217,"name":"buttonSelector","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Optionally checks and clicks a button if it appears while scrolling. This is required on some websites for the scroll to work."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":415,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4216,"name":"scrollDownAndUp","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If true, it will scroll up a bit after each scroll down. This is required on some websites for the scroll to work.","tags":[{"tag":"default","text":"false\\n"}]},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":410,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4214,"name":"timeoutSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"How many seconds to scroll for. If 0, will scroll until bottom of page.","tags":[{"tag":"default","text":"1\\n"}]},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":398,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":4215,"name":"waitForSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"How many seconds to wait for no new content to load before exit.","tags":[{"tag":"default","text":"4\\n"}]},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":404,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":4218,"name":"stopScrollCallback","kind":2048,"kindString":"Method","flags":{"isOptional":true},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":420,"character":4}],"signatures":[{"id":4219,"name":"stopScrollCallback","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"This function is called after every scroll and stops the scrolling process if it returns `true`. The function can be `async`."},"type":{"type":"intrinsic","name":"unknown"}}]}],"groups":[{"title":"Properties","kind":1024,"children":[4217,4216,4214,4215]},{"title":"Methods","kind":2048,"children":[4218]}],"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":393,"character":17}]},{"id":4197,"name":"InjectFileOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":4198,"name":"surviveNavigations","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Enables the injected script to survive page navigations and reloads without need to be re-injected manually.\\nThis does not mean, however, that internal state will be preserved. Just that it will be automatically\\nre-injected on each navigation before any other scripts get the chance to execute."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":71,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","kind":1024,"children":[4198]}],"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":65,"character":17}]},{"id":4220,"name":"SaveSnapshotOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":4221,"name":"key","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Key under which the screenshot and HTML will be saved. `.jpg` will be appended for screenshot and `.html` for HTML.","tags":[{"tag":"default","text":"\'SNAPSHOT\'\\n"}]},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":537,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4225,"name":"keyValueStoreName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Name or id of the Key-Value store where snapshot is saved. By default it is saved to default Key-Value store.","tags":[{"tag":"default","text":"null\\n"}]},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":561,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":4224,"name":"saveHtml","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If true, it will save a full HTML of the current page as a record with `key` appended by `.html`.","tags":[{"tag":"default","text":"true\\n"}]},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":555,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4223,"name":"saveScreenshot","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If true, it will save a full screenshot of the current page as a record with `key` appended by `.jpg`.","tags":[{"tag":"default","text":"true\\n"}]},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":549,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4222,"name":"screenshotQuality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The quality of the image, between 0-100. Higher quality images have bigger size and require more storage.","tags":[{"tag":"default","text":"50\\n"}]},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":543,"character":4}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[4221,4225,4224,4223,4222]}],"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":532,"character":17}]},{"id":4205,"name":"CompiledScriptFunction","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":94,"character":12}],"type":{"type":"reflection","declaration":{"id":4206,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":94,"character":37}],"signatures":[{"id":4207,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4208,"name":"params","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4202,"name":"CompiledScriptParams"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}}},{"id":4167,"name":"blockRequests","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":202,"character":22}],"signatures":[{"id":4168,"name":"blockRequests","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Forces the Puppeteer browser tab to block loading URLs that match a provided pattern.\\nThis is useful to speed up crawling of websites, since it reduces the amount\\nof data that needs to be downloaded from the web, but it may break some websites\\nor unexpectedly prevent loading of resources.","text":"By default, the function will block all URLs including the following patterns:\\n\\n```json\\n[\\".css\\", \\".jpg\\", \\".jpeg\\", \\".png\\", \\".svg\\", \\".gif\\", \\".woff\\", \\".pdf\\", \\".zip\\"]\\n```\\n\\nIf you want to extend this list further, use the `extraUrlPatterns` option,\\nwhich will keep blocking the default patterns, as well as add your custom ones.\\nIf you would like to block only specific patterns, use the `urlPatterns` option,\\nwhich will override the defaults and block only URLs with your custom patterns.\\n\\nThis function does not use Puppeteer\'s request interception and therefore does not interfere\\nwith browser cache. It\'s also faster than blocking requests using interception,\\nbecause the blocking happens directly in the browser without the round-trip to Node.js,\\nbut it does not provide the extra benefits of request interception.\\n\\nThe function will never block main document loads and their respective redirects.\\n\\n**Example usage**\\n```javascript\\nconst Apify = require(\'apify\');\\n\\nconst browser = await Apify.launchPuppeteer();\\nconst page = await browser.newPage();\\n\\n// Block all requests to URLs that include `adsbygoogle.js` and also all defaults.\\nawait Apify.utils.puppeteer.blockRequests(page, {\\n    extraUrlPatterns: [\'adsbygoogle.js\'],\\n});\\n\\nawait page.goto(\'https://cnn.com\');\\n```\\n"},"parameters":[{"id":4169,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Puppeteer [`Page`](https://pptr.dev/#?product=Puppeteer&show=api-class-page) object."},"type":{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"}},{"id":4170,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4199,"name":"BlockRequestsOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":4209,"name":"blockResources","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":225,"character":13}],"signatures":[{"id":4210,"name":"blockResources","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"`blockResources()` has a high impact on performance in recent versions of Puppeteer.\\nUntil this resolves, please use `Apify.utils.puppeteer.blockRequests()`.","tags":[{"tag":"deprecated","text":"\\n"}]},"parameters":[{"id":4211,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"}},{"id":4212,"name":"resourceTypes","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":4171,"name":"cacheResponses","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":251,"character":22}],"signatures":[{"id":4172,"name":"cacheResponses","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"*NOTE:* In recent versions of Puppeteer using this function entirely disables browser cache which resolves in sub-optimal\\nperformance. Until this resolves, we suggest just relying on the in-browser cache unless absolutely necessary.","text":"Enables caching of intercepted responses into a provided object. Automatically enables request interception in Puppeteer.\\n*IMPORTANT*: Caching responses stores them to memory, so too loose rules could cause memory leaks for longer running crawlers.\\n  This issue should be resolved or atleast mitigated in future iterations of this feature.","tags":[{"tag":"deprecated","text":"\\n"}]},"parameters":[{"id":4173,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  Puppeteer [`Page`](https://pptr.dev/#?product=Puppeteer&show=api-class-page) object."},"type":{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"}},{"id":4174,"name":"cache","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  Object in which responses are stored"},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"ResponseForRequest","package":"puppeteer","name":"ResponseForRequest"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"}],"name":"Dictionary"}},{"id":4175,"name":"responseUrlRules","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  List of rules that are used to check if the response should be cached.\\n  String rules are compared as page.url().includes(rule) while RegExp rules are evaluated as rule.test(page.url())."},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"RegExp","package":"typescript","name":"RegExp"}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":4176,"name":"compileScript","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":324,"character":16}],"signatures":[{"id":4177,"name":"compileScript","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Compiles a Puppeteer script into an async function that may be executed at any time\\nby providing it with the following object:\\n```\\n{\\n   page: Page,\\n   request: Request,\\n}\\n```\\nWhere `page` is a Puppeteer [`Page`](https://pptr.dev/#?product=Puppeteer&show=api-class-page)\\nand `request` is a {@link Request}.","text":"The function is compiled by using the `scriptString` parameter as the function\'s body,\\nso any limitations to function bodies apply. Return value of the compiled function\\nis the return value of the function body = the `scriptString` parameter.\\n\\nAs a security measure, no globals such as `process` or `require` are accessible\\nfrom within the function body. Note that the function does not provide a safe\\nsandbox and even though globals are not easily accessible, malicious code may\\nstill execute in the main process via prototype manipulation. Therefore you\\nshould only use this function to execute sanitized or safe code.\\n\\nCustom context may also be provided using the `context` parameter. To improve security,\\nmake sure to only pass the really necessary objects to the context. Preferably making\\nsecured copies beforehand.\\n\\n"},"parameters":[{"id":4178,"name":"scriptString","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":4179,"name":"context","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"},"defaultValue":"..."}],"type":{"type":"reference","id":4205,"name":"CompiledScriptFunction"}}]},{"id":4226,"name":"enqueueLinksByClickingElements","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/enqueue-links/click-elements.ts","line":142,"character":22}],"signatures":[{"id":4227,"name":"enqueueLinksByClickingElements","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"The function finds elements matching a specific CSS selector in a Puppeteer page,\\nclicks all those elements using a mouse move and a left mouse button click and intercepts\\nall the navigation requests that are subsequently produced by the page. The intercepted\\nrequests, including their methods, headers and payloads are then enqueued to a provided\\n{@link RequestQueue}. This is useful to crawl JavaScript heavy pages where links are not available\\nin `href` elements, but rather navigations are triggered in click handlers.\\nIf you\'re looking to find URLs in `href` attributes of the page, see {@link utils.enqueueLinks}.","text":"Optionally, the function allows you to filter the target links\' URLs using an array of {@link PseudoUrl} objects\\nand override settings of the enqueued {@link Request} objects.\\n\\n**IMPORTANT**: To be able to do this, this function uses various mutations on the page,\\nsuch as changing the Z-index of elements being clicked and their visibility. Therefore,\\nit is recommended to only use this function as the last operation in the page.\\n\\n**USING HEADFUL BROWSER**: When using a headful browser, this function will only be able to click elements\\nin the focused tab, effectively limiting concurrency to 1. In headless mode, full concurrency can be achieved.\\n\\n**PERFORMANCE**: Clicking elements with a mouse and intercepting requests is not a low level operation\\nthat takes nanoseconds. It\'s not very CPU intensive, but it takes time. We strongly recommend limiting\\nthe scope of the clicking as much as possible by using a specific selector that targets only the elements\\nthat you assume or know will produce a navigation. You can certainly click everything by using\\nthe `*` selector, but be prepared to wait minutes to get results on a large and complex page.\\n\\n**Example usage**\\n\\n```javascript\\nawait Apify.utils.puppeteer.enqueueLinksByClickingElements({\\n  page,\\n  requestQueue,\\n  selector: \'a.product-detail\',\\n  pseudoUrls: [\\n      \'https://www.example.com/handbags/[.*]\'\\n      \'https://www.example.com/purses/[.*]\'\\n  ],\\n});\\n```\\n","returns":"\\n  Promise that resolves to an array of {@link QueueOperationInfo} objects.\\n"},"parameters":[{"id":4228,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4316,"name":"EnqueueLinksByClickingElementsOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1264,"name":"QueueOperationInfo"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":4180,"name":"gotoExtended","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":352,"character":22}],"signatures":[{"id":4181,"name":"gotoExtended","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Extended version of Puppeteer\'s `page.goto()` allowing to perform requests with HTTP method other than GET,\\nwith custom headers and POST payload. URL, method, headers and payload are taken from\\nrequest parameter that must be an instance of Apify.Request class.","text":"*NOTE:* In recent versions of Puppeteer using requests other than GET, overriding headers and adding payloads disables\\nbrowser cache which degrades performance.\\n"},"parameters":[{"id":4182,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Puppeteer [`Page`](https://pptr.dev/#?product=Puppeteer&show=api-class-page) object."},"type":{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"}},{"id":4183,"name":"request","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","id":1626,"name":"Request"}},{"id":4184,"name":"gotoOptions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4193,"name":"DirectNavigationOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","qualifiedName":"HTTPResponse","package":"puppeteer","name":"HTTPResponse"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":4185,"name":"infiniteScroll","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":429,"character":22}],"signatures":[{"id":4186,"name":"infiniteScroll","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Scrolls to the bottom of a page, or until it times out.\\nLoads dynamic content when it hits the bottom of a page, and then continues scrolling."},"parameters":[{"id":4187,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Puppeteer [`Page`](https://pptr.dev/#?product=Puppeteer&show=api-class-page) object."},"type":{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"}},{"id":4188,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4213,"name":"InfiniteScrollOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":4159,"name":"injectFile","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":112,"character":22}],"signatures":[{"id":4160,"name":"injectFile","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Injects a JavaScript file into a Puppeteer page.\\nUnlike Puppeteer\'s `addScriptTag` function, this function works on pages\\nwith arbitrary Cross-Origin Resource Sharing (CORS) policies.","text":"File contents are cached for up to 10 files to limit file system access.\\n"},"parameters":[{"id":4161,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Puppeteer [`Page`](https://pptr.dev/#?product=Puppeteer&show=api-class-page) object."},"type":{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"}},{"id":4162,"name":"filePath","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"File path"},"type":{"type":"intrinsic","name":"string"}},{"id":4163,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4197,"name":"InjectFileOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":4164,"name":"injectJQuery","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":155,"character":16}],"signatures":[{"id":4165,"name":"injectJQuery","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Injects the [jQuery](https://jquery.com/) library into a Puppeteer page.\\njQuery is often useful for various web scraping and crawling tasks.\\nFor example, it can help extract text from HTML elements using CSS selectors.","text":"Beware that the injected jQuery object will be set to the `window.$` variable and thus it might cause conflicts with\\nother libraries included by the page that use the same variable name (e.g. another version of jQuery).\\nThis can affect functionality of page\'s scripts.\\n\\nThe injected jQuery will survive page navigations and reloads.\\n\\n**Example usage:**\\n```javascript\\nawait Apify.utils.puppeteer.injectJQuery(page);\\nconst title = await page.evaluate(() => {\\n  return $(\'head title\').text();\\n});\\n```\\n\\nNote that `injectJQuery()` does not affect the Puppeteer\'s\\n[`page.$()`](https://pptr.dev/#?product=Puppeteer&show=api-pageselector)\\nfunction in any way.\\n"},"parameters":[{"id":4166,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Puppeteer [`Page`](https://pptr.dev/#?product=Puppeteer&show=api-class-page) object.\\n"},"type":{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":4189,"name":"saveSnapshot","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":569,"character":22}],"signatures":[{"id":4190,"name":"saveSnapshot","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Saves a full screenshot and HTML of the current page into a Key-Value store."},"parameters":[{"id":4191,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Puppeteer [`Page`](https://pptr.dev/#?product=Puppeteer&show=api-class-page) object."},"type":{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"}},{"id":4192,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4220,"name":"SaveSnapshotOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"groups":[{"title":"References","kind":16777216,"children":[4229,4230]},{"title":"Interfaces","kind":256,"children":[4199,4202,4193,4213,4197,4220]},{"title":"Type aliases","kind":4194304,"children":[4205]},{"title":"Functions","kind":64,"children":[4167,4209,4171,4176,4226,4180,4185,4159,4164,4189]}],"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/utils/puppeteer_utils.ts","line":22,"character":0}],"permalink":"/apify-ts/api/next/puppeteer-crawler/namespace/puppeteerUtils","previousId":4122,"nextId":4416},{"id":4636,"name":"PuppeteerCrawler","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"Provides a simple framework for parallel crawling of web pages\\nusing headless Chrome with [Puppeteer](https://github.com/puppeteer/puppeteer).\\nThe URLs to crawl are fed either from a static list of URLs\\nor from a dynamic queue of URLs enabling recursive crawling of websites.","text":"Since `PuppeteerCrawler` uses headless Chrome to download web pages and extract data,\\nit is useful for crawling of websites that require to execute JavaScript.\\nIf the target website doesn\'t need JavaScript, consider using {@link CheerioCrawler},\\nwhich downloads the pages using raw HTTP requests and is about 10x faster.\\n\\nThe source URLs are represented using {@link Request} objects that are fed from\\n{@link RequestList} or {@link RequestQueue} instances provided by the {@link PuppeteerCrawlerOptions.requestList}\\nor {@link PuppeteerCrawlerOptions.requestQueue} constructor options, respectively.\\n\\nIf both {@link PuppeteerCrawlerOptions.requestList} and {@link PuppeteerCrawlerOptions.requestQueue} are used,\\nthe instance first processes URLs from the {@link RequestList} and automatically enqueues all of them\\nto {@link RequestQueue} before it starts their processing. This ensures that a single URL is not crawled multiple times.\\n\\nThe crawler finishes when there are no more {@link Request} objects to crawl.\\n\\n`PuppeteerCrawler` opens a new Chrome page (i.e. tab) for each {@link Request} object to crawl\\nand then calls the function provided by user as the {@link PuppeteerCrawlerOptions.handlePageFunction} option.\\n\\nNew pages are only opened when there is enough free CPU and memory available,\\nusing the functionality provided by the {@link AutoscaledPool} class.\\nAll {@link AutoscaledPool} configuration options can be passed to the {@link PuppeteerCrawlerOptions.autoscaledPoolOptions}\\nparameter of the `PuppeteerCrawler` constructor. For user convenience, the `minConcurrency` and `maxConcurrency`\\n{@link AutoscaledPoolOptions} are available directly in the `PuppeteerCrawler` constructor.\\n\\nNote that the pool of Puppeteer instances is internally managed by the [BrowserPool](https://github.com/apify/browser-pool) class.\\n\\n**Example usage:**\\n\\n```javascript\\nconst crawler = new Apify.PuppeteerCrawler({\\n    requestList,\\n    handlePageFunction: async ({ page, request }) => {\\n        // This function is called to extract data from a single web page\\n        // \'page\' is an instance of Puppeteer.Page with page.goto(request.url) already called\\n        // \'request\' is an instance of Request class with information about the page to load\\n        await Apify.pushData({\\n            title: await page.title(),\\n            url: request.url,\\n            succeeded: true,\\n        })\\n    },\\n    handleFailedRequestFunction: async ({ request }) => {\\n        // This function is called when the crawling of a request failed too many times\\n        await Apify.pushData({\\n            url: request.url,\\n            succeeded: false,\\n            errors: request.errorMessages,\\n        })\\n    },\\n});\\n\\nawait crawler.run();\\n```"},"children":[{"id":4665,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-crawler.ts","line":205,"character":4}],"signatures":[{"id":4666,"name":"new PuppeteerCrawler","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"All `PuppeteerCrawler` parameters are passed via an options object."},"parameters":[{"id":4667,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4602,"name":"PuppeteerCrawlerOptions"}}],"type":{"type":"reference","id":4636,"name":"PuppeteerCrawler"},"overwrites":{"type":"reference","name":"BrowserCrawler<{ browserPlugins: [PuppeteerPlugin] }, LaunchOptions, PuppeteerCrawlContext>.constructor"}}],"overwrites":{"type":"reference","name":"BrowserCrawler<{ browserPlugins: [PuppeteerPlugin] }, LaunchOptions, PuppeteerCrawlContext>.constructor"}},{"id":4727,"name":"autoscaledPool","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A reference to the underlying {@link AutoscaledPool} class that manages the concurrency of the crawler.\\nNote that this property is only initialized after calling the {@link BasicCrawler.run} function.\\nYou can use it to change the concurrency settings on the fly,\\nto pause the crawler by calling {@link AutoscaledPool.pause}\\nor to abort it by calling {@link AutoscaledPool.abort}."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":271,"character":4}],"type":{"type":"reference","id":256,"name":"AutoscaledPool"},"inheritedFrom":{"type":"reference","id":3433,"name":"BrowserCrawler.autoscaledPool"}},{"id":4673,"name":"browserPool","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A reference to the underlying `BrowserPool` class that manages the crawler\'s browsers.\\nFor more information about it, see the [`browser-pool` module](https://github.com/apify/browser-pool).","tags":[{"tag":"todo","text":"the type is almost unusable with so many generic arguments, what should go there? we need inference\\n"}]},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":272,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":4674,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":4675,"name":"browserPlugins","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-crawler.ts","line":195,"character":55}],"type":{"type":"tuple","elements":[{"type":"reference","qualifiedName":"PuppeteerPlugin","package":"browser-pool","name":"PuppeteerPlugin"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[4675]}]}},{"type":"tuple","elements":[{"type":"reference","qualifiedName":"PuppeteerPlugin","package":"browser-pool","name":"PuppeteerPlugin"}]},{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"/home/runner/work/apify-ts/apify-ts/node_modules/browser-pool/dist/puppeteer/puppeteer-proxy-per-page\\"","package":"browser-pool","name":"__module"},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intersection","types":[{"type":"reference","qualifiedName":"LaunchOptions","package":"puppeteer","name":"LaunchOptions"},{"type":"reference","qualifiedName":"BrowserLaunchArgumentOptions","package":"puppeteer","name":"BrowserLaunchArgumentOptions"},{"type":"reference","qualifiedName":"BrowserConnectOptions","package":"puppeteer","name":"BrowserConnectOptions"},{"type":"reflection","declaration":{"id":4676,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":4678,"name":"extraPrefsFirefox","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/browser-pool/dist/puppeteer/puppeteer-proxy-per-page.d.ts","line":24,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"id":4677,"name":"product","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/browser-pool/dist/puppeteer/puppeteer-proxy-per-page.d.ts","line":23,"character":4}],"type":{"type":"reference","qualifiedName":"Product","package":"puppeteer","name":"Product"}}],"groups":[{"title":"Properties","kind":1024,"children":[4678,4677]}]}}]}]},{"type":"reference","qualifiedName":"Browser","package":"browser-pool","name":"Browser"},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ContextOptions","package":"browser-pool","name":"ContextOptions"}]},{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"}],"qualifiedName":"BrowserController","package":"browser-pool","name":"BrowserController"},{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"/home/runner/work/apify-ts/apify-ts/node_modules/browser-pool/dist/puppeteer/puppeteer-proxy-per-page\\"","package":"browser-pool","name":"__module"},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intersection","types":[{"type":"reference","qualifiedName":"LaunchOptions","package":"puppeteer","name":"LaunchOptions"},{"type":"reference","qualifiedName":"BrowserLaunchArgumentOptions","package":"puppeteer","name":"BrowserLaunchArgumentOptions"},{"type":"reference","qualifiedName":"BrowserConnectOptions","package":"puppeteer","name":"BrowserConnectOptions"},{"type":"reflection","declaration":{"id":4679,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":4681,"name":"extraPrefsFirefox","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/browser-pool/dist/puppeteer/puppeteer-proxy-per-page.d.ts","line":24,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"id":4680,"name":"product","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/browser-pool/dist/puppeteer/puppeteer-proxy-per-page.d.ts","line":23,"character":4}],"type":{"type":"reference","qualifiedName":"Product","package":"puppeteer","name":"Product"}}],"groups":[{"title":"Properties","kind":1024,"children":[4681,4680]}]}}]}]},{"type":"reference","qualifiedName":"Browser","package":"browser-pool","name":"Browser"},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ContextOptions","package":"browser-pool","name":"ContextOptions"}]},{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"}],"qualifiedName":"LaunchContext","package":"browser-pool","name":"LaunchContext"},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ContextOptions","package":"browser-pool","name":"ContextOptions"}]},{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"}],"qualifiedName":"BrowserPool","package":"browser-pool","name":"BrowserPool"},"inheritedFrom":{"type":"reference","id":3386,"name":"BrowserCrawler.browserPool"}},{"id":4682,"name":"launchContext","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":274,"character":4}],"type":{"type":"reference","id":3498,"typeArguments":[{"type":"reference","qualifiedName":"LaunchOptions","package":"puppeteer","name":"LaunchOptions"},{"type":"intrinsic","name":"unknown"}],"name":"BrowserLaunchContext"},"inheritedFrom":{"type":"reference","id":3387,"name":"BrowserCrawler.launchContext"}},{"id":4672,"name":"proxyConfiguration","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A reference to the underlying {@link ProxyConfiguration} class that manages the crawler\'s proxies.\\nOnly available if used by the crawler."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":265,"character":4}],"type":{"type":"reference","id":1686,"name":"ProxyConfiguration"},"inheritedFrom":{"type":"reference","id":3385,"name":"BrowserCrawler.proxyConfiguration"}},{"id":4724,"name":"requestList","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A reference to the underlying {@link RequestList} class that manages the crawler\'s {@link Request}s.\\nEither `requestList` or `requestQueue` option must be provided (or both).\\nOnly available if used by the crawler."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":248,"character":4}],"type":{"type":"reference","id":1158,"name":"RequestList"},"inheritedFrom":{"type":"reference","id":3430,"name":"BrowserCrawler.requestList"}},{"id":4725,"name":"requestQueue","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Dynamic queue of URLs to be processed. This is useful for recursive crawling of websites.\\nA reference to the underlying {@link RequestQueue} class that manages the crawler\'s {@link Request}s.\\nEither `requestList` or `requestQueue` option must be provided (or both).\\nOnly available if used by the crawler."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":256,"character":4}],"type":{"type":"reference","id":1270,"name":"RequestQueue"},"inheritedFrom":{"type":"reference","id":3431,"name":"BrowserCrawler.requestQueue"}},{"id":4726,"name":"sessionPool","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A reference to the underlying {@link SessionPool} class that manages the crawler\'s {@link Session}s.\\nOnly available if used by the crawler."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":262,"character":4}],"type":{"type":"reference","id":786,"name":"SessionPool"},"inheritedFrom":{"type":"reference","id":3432,"name":"BrowserCrawler.sessionPool"}},{"id":4723,"name":"stats","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"shortText":"Static list of URLs to be processed."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":241,"character":13}],"type":{"type":"reference","id":536,"name":"Statistics"},"inheritedFrom":{"type":"reference","id":3429,"name":"BrowserCrawler.stats"}},{"id":4745,"name":"addRequests","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":458,"character":10}],"signatures":[{"id":4746,"name":"addRequests","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds requests to be processed by the crawler"},"parameters":[{"id":4747,"name":"requests","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The requests to add"},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","id":1649,"name":"RequestOptions"},{"type":"reference","id":1626,"name":"Request"}]}}},{"id":4748,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Options for the request queue\\n"},"type":{"type":"reference","id":1268,"name":"RequestQueueOperationOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1264,"name":"QueueOperationInfo"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","id":3452,"name":"BrowserCrawler.addRequests"}}],"inheritedFrom":{"type":"reference","id":3451,"name":"BrowserCrawler.addRequests"}},{"id":4743,"name":"getRequestQueue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":447,"character":10}],"signatures":[{"id":4744,"name":"getRequestQueue","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":1270,"name":"RequestQueue"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","id":3450,"name":"BrowserCrawler.getRequestQueue"}}],"inheritedFrom":{"type":"reference","id":3449,"name":"BrowserCrawler.getRequestQueue"}},{"id":4741,"name":"run","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":424,"character":10}],"signatures":[{"id":4742,"name":"run","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Runs the crawler. Returns a promise that gets resolved once all the requests are processed."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","id":3448,"name":"BrowserCrawler.run"}}],"inheritedFrom":{"type":"reference","id":3447,"name":"BrowserCrawler.run"}}],"groups":[{"title":"Constructors","kind":512,"children":[4665]},{"title":"Properties","kind":1024,"children":[4727,4673,4682,4672,4724,4725,4726,4723]},{"title":"Methods","kind":2048,"children":[4745,4743,4741]}],"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-crawler.ts","line":195,"character":13}],"extendedTypes":[{"type":"reference","id":3352,"typeArguments":[{"type":"reflection","declaration":{"id":4637,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":4638,"name":"browserPlugins","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-crawler.ts","line":195,"character":55}],"type":{"type":"tuple","elements":[{"type":"reference","qualifiedName":"PuppeteerPlugin","package":"browser-pool","name":"PuppeteerPlugin"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[4638]}],"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-crawler.ts","line":195,"character":53}]}},{"type":"reference","qualifiedName":"LaunchOptions","package":"puppeteer","name":"LaunchOptions"},{"type":"reference","id":4597,"name":"PuppeteerCrawlContext"}],"name":"BrowserCrawler"}],"permalink":"/apify-ts/api/next/puppeteer-crawler/class/PuppeteerCrawler","nextId":4788},{"id":4602,"name":"PuppeteerCrawlerOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":4630,"name":"autoscaledPoolOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Custom options passed to the underlying {@link AutoscaledPool} constructor.\\nNote that the `runTaskFunction` and `isTaskReadyFunction` options\\nare provided by the crawler and cannot be overridden.\\nHowever, you can provide a custom implementation of `isFinishedFunction`."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":146,"character":4}],"type":{"type":"reference","id":236,"name":"AutoscaledPoolOptions"},"inheritedFrom":{"type":"reference","id":3340,"name":"BrowserCrawlerOptions.autoscaledPoolOptions"}},{"id":4614,"name":"browserPoolOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Custom options passed to the underlying [`BrowserPool`](https://github.com/apify/browser-pool#BrowserPool) constructor.\\nYou can tweak those to fine-tune browser management."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":154,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"CommonLibrary","package":"browser-pool","name":"CommonLibrary"},{"type":"intrinsic","name":"unknown"},{"type":"reference","qualifiedName":"CommonBrowser","package":"browser-pool","name":"CommonBrowser"},{"type":"intrinsic","name":"unknown"},{"type":"reference","qualifiedName":"CommonPage","package":"browser-pool","name":"CommonPage"}],"qualifiedName":"BrowserPlugin","package":"browser-pool","name":"BrowserPlugin"}],"qualifiedName":"BrowserPoolOptions","package":"browser-pool","name":"BrowserPoolOptions"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"/home/runner/work/apify-ts/apify-ts/node_modules/browser-pool/dist/puppeteer/puppeteer-proxy-per-page\\"","package":"browser-pool","name":"__module"},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intersection","types":[{"type":"reference","qualifiedName":"LaunchOptions","package":"puppeteer","name":"LaunchOptions"},{"type":"reference","qualifiedName":"BrowserLaunchArgumentOptions","package":"puppeteer","name":"BrowserLaunchArgumentOptions"},{"type":"reference","qualifiedName":"BrowserConnectOptions","package":"puppeteer","name":"BrowserConnectOptions"},{"type":"reflection","declaration":{"id":4615,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":4617,"name":"extraPrefsFirefox","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/browser-pool/dist/puppeteer/puppeteer-proxy-per-page.d.ts","line":24,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"id":4616,"name":"product","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/browser-pool/dist/puppeteer/puppeteer-proxy-per-page.d.ts","line":23,"character":4}],"type":{"type":"reference","qualifiedName":"Product","package":"puppeteer","name":"Product"}}],"groups":[{"title":"Properties","kind":1024,"children":[4617,4616]}]}}]}]},{"type":"reference","qualifiedName":"Browser","package":"browser-pool","name":"Browser"},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ContextOptions","package":"browser-pool","name":"ContextOptions"}]},{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"}],"qualifiedName":"BrowserController","package":"browser-pool","name":"BrowserController"},{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"/home/runner/work/apify-ts/apify-ts/node_modules/browser-pool/dist/puppeteer/puppeteer-proxy-per-page\\"","package":"browser-pool","name":"__module"},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intersection","types":[{"type":"reference","qualifiedName":"LaunchOptions","package":"puppeteer","name":"LaunchOptions"},{"type":"reference","qualifiedName":"BrowserLaunchArgumentOptions","package":"puppeteer","name":"BrowserLaunchArgumentOptions"},{"type":"reference","qualifiedName":"BrowserConnectOptions","package":"puppeteer","name":"BrowserConnectOptions"},{"type":"reflection","declaration":{"id":4618,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":4620,"name":"extraPrefsFirefox","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/browser-pool/dist/puppeteer/puppeteer-proxy-per-page.d.ts","line":24,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"id":4619,"name":"product","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/browser-pool/dist/puppeteer/puppeteer-proxy-per-page.d.ts","line":23,"character":4}],"type":{"type":"reference","qualifiedName":"Product","package":"puppeteer","name":"Product"}}],"groups":[{"title":"Properties","kind":1024,"children":[4620,4619]}]}}]}]},{"type":"reference","qualifiedName":"Browser","package":"browser-pool","name":"Browser"},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ContextOptions","package":"browser-pool","name":"ContextOptions"}]},{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"}],"qualifiedName":"LaunchContext","package":"browser-pool","name":"LaunchContext"},{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"}],"qualifiedName":"BrowserPoolHooks","package":"browser-pool","name":"BrowserPoolHooks"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"}]},"inheritedFrom":{"type":"reference","id":3328,"name":"BrowserCrawlerOptions.browserPoolOptions"}},{"id":4611,"name":"gotoFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Navigation function for corresponding library. `page.goto(url)` is supported by both `playwright` and `puppeteer`."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":127,"character":4}],"type":{"type":"reference","id":3316,"typeArguments":[{"type":"reference","id":4597,"name":"PuppeteerCrawlContext"},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intersection","types":[{"type":"reference","qualifiedName":"WaitForOptions","package":"puppeteer","name":"WaitForOptions"},{"type":"reflection","declaration":{"id":4612,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":4613,"name":"referer","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/puppeteer/lib/types.d.ts","line":4699,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[4613]}]}}]}]}],"name":"GotoFunction"},"inheritedFrom":{"type":"reference","id":3326,"name":"BrowserCrawlerOptions.gotoFunction"}},{"id":4624,"name":"gotoTimeoutSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"deprecated","text":"Use `navigationTimeoutSecs` instead\\n"}]},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":209,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":3334,"name":"BrowserCrawlerOptions.gotoTimeoutSecs"}},{"id":4606,"name":"handleFailedRequestFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A function to handle requests that failed more than `option.maxRequestRetries` times.","text":"The function receives the following object as an argument:\\n```\\n{\\n    request: Request,\\n    response: Response,\\n    page: Page,\\n    session: Session,\\n    browserController: BrowserController,\\n    proxyInfo: ProxyInfo,\\n    crawler: PuppeteerCrawler,\\n}\\n```\\nWhere the {@link Request} instance corresponds to the failed request, and the `Error` instance\\nrepresents the last error thrown during processing of the request.\\n"},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-crawler.ts","line":93,"character":4}],"type":{"type":"reference","id":3299,"name":"BrowserCrawlerHandleFailedRequest"},"overwrites":{"type":"reference","id":3327,"name":"BrowserCrawlerOptions.handleFailedRequestFunction"}},{"id":4605,"name":"handlePageFunction","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Function that is called to process each request.\\nIt is passed an object with the following fields:","text":"```\\n{\\n    request: Request,\\n    response: Response,\\n    page: Page,\\n    session: Session,\\n    browserController: BrowserController,\\n    proxyInfo: ProxyInfo,\\n    crawler: PuppeteerCrawler,\\n}\\n```\\n\\n`request` is an instance of the {@link Request} object with details about the URL to open, HTTP method etc.\\n`page` is an instance of the `Puppeteer`\\n[`Page`](https://pptr.dev/#?product=Puppeteer&show=api-class-page)\\n`browserPool` is an instance of the\\n[`BrowserPool`](https://github.com/apify/browser-pool#BrowserPool),\\n`browserController` is an instance of the\\n[`BrowserController`](https://github.com/apify/browser-pool#browsercontroller),\\n`response` is an instance of the `Puppeteer`\\n[`Response`](https://pptr.dev/#?product=Puppeteer&show=api-class-response),\\nwhich is the main resource response as returned by `page.goto(request.url)`.\\nThe function must return a promise, which is then awaited by the crawler.\\n\\nIf the function throws an exception, the crawler will try to re-crawl the\\nrequest later, up to `option.maxRequestRetries` times.\\nIf all the retries fail, the crawler calls the function\\nprovided to the `handleFailedRequestFunction` parameter.\\nTo make this work, you should **always**\\nlet your function throw exceptions rather than catch them.\\nThe exceptions are logged to the request using the\\n{@link Request.pushErrorMessage} function.\\n"},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-crawler.ts","line":73,"character":4}],"type":{"type":"reference","id":3303,"typeArguments":[{"type":"reference","id":4597,"name":"PuppeteerCrawlContext"}],"name":"BrowserCrawlerHandleRequest"},"overwrites":{"type":"reference","id":3324,"name":"BrowserCrawlerOptions.handlePageFunction"}},{"id":4610,"name":"handlePageTimeoutSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Timeout in which the function passed as `handlePageFunction` needs to finish, in seconds."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":122,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":3325,"name":"BrowserCrawlerOptions.handlePageTimeoutSecs"}},{"id":4623,"name":"handleRequestTimeoutSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Timeout in which the function passed as `handleRequestFunction` needs to finish, in seconds."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":204,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":3333,"name":"BrowserCrawlerOptions.handleRequestTimeoutSecs"}},{"id":4607,"name":"launchContext","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Options used by {@link launchPuppeteer} to start new Puppeteer instances."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-crawler.ts","line":98,"character":4}],"type":{"type":"reference","id":4791,"name":"PuppeteerLaunchContext"}},{"id":4632,"name":"maxConcurrency","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets the maximum concurrency (parallelism) for the crawl. Shortcut to the corresponding {@link AutoscaledPool} option."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":159,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":3342,"name":"BrowserCrawlerOptions.maxConcurrency"}},{"id":4628,"name":"maxRequestRetries","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates how many times the request is retried if {@link handleRequestFunction} or {@link handlePageFunction} fails.","tags":[{"tag":"default","text":"3\\n"}]},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":131,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":3338,"name":"BrowserCrawlerOptions.maxRequestRetries"}},{"id":4629,"name":"maxRequestsPerCrawl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum number of pages that the crawler will open. The crawl will stop when this limit is reached.\\nAlways set this value in order to prevent infinite loops in misconfigured crawlers.\\nNote that in cases of parallel crawling, the actual number of pages visited might be slightly higher than this value."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":138,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":3339,"name":"BrowserCrawlerOptions.maxRequestsPerCrawl"}},{"id":4631,"name":"minConcurrency","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets the minimum concurrency (parallelism) for the crawl. Shortcut to the corresponding {@link AutoscaledPool} option.","text":"*WARNING:* If you set this value too high with respect to the available system memory and CPU, your crawler will run extremely slow or crash.\\nIf you\'re not sure, just keep the default value and the concurrency will scale up automatically.\\n"},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":154,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":3341,"name":"BrowserCrawlerOptions.minConcurrency"}},{"id":4622,"name":"navigationTimeoutSecs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Timeout in which page navigation needs to finish, in seconds."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":199,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","id":3332,"name":"BrowserCrawlerOptions.navigationTimeoutSecs"}},{"id":4625,"name":"persistCookiesPerSession","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If cookies should be persisted between sessions.\\nThis can only be used when `useSessionPool` is set to `true`."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":215,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":3335,"name":"BrowserCrawlerOptions.persistCookiesPerSession"}},{"id":4609,"name":"postNavigationHooks","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Async functions that are sequentially evaluated after the navigation. Good for checking if the navigation was successful.\\nThe function accepts `crawlingContext` as the only parameter.\\nExample:\\n```\\npostNavigationHooks: [\\n    async (crawlingContext) => {\\n        const { page } = crawlingContext;\\n        if (hasCaptcha(page)) {\\n            await solveCaptcha (page);\\n        }\\n    },\\n]\\n```"},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-crawler.ts","line":131,"character":4}],"type":{"type":"array","elementType":{"type":"reference","id":4598,"name":"PuppeteerHook"}},"overwrites":{"type":"reference","id":3331,"name":"BrowserCrawlerOptions.postNavigationHooks"}},{"id":4608,"name":"preNavigationHooks","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Async functions that are sequentially evaluated before the navigation. Good for setting additional cookies\\nor browser properties before navigation. The function accepts two parameters, `crawlingContext` and `gotoOptions`,\\nwhich are passed to the `page.goto()` function the crawler calls to navigate.\\nExample:\\n```\\npreNavigationHooks: [\\n    async (crawlingContext, gotoOptions) => {\\n        const { page } = crawlingContext;\\n        await page.evaluate((attr) => { window.foo = attr; }, \'bar\');\\n    },\\n]\\n```"},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-crawler.ts","line":114,"character":4}],"type":{"type":"array","elementType":{"type":"reference","id":4598,"name":"PuppeteerHook"}},"overwrites":{"type":"reference","id":3330,"name":"BrowserCrawlerOptions.preNavigationHooks"}},{"id":4621,"name":"proxyConfiguration","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set, the crawler will be configured for all connections to use\\n[Apify Proxy](https://console.apify.com/proxy) or your own Proxy URLs provided and rotated according to the configuration.\\nFor more information, see the [documentation](https://docs.apify.com/proxy)."},"sources":[{"fileName":"packages/browser-crawler/src/internals/browser-crawler.ts","line":161,"character":4}],"type":{"type":"reference","id":1686,"name":"ProxyConfiguration"},"inheritedFrom":{"type":"reference","id":3329,"name":"BrowserCrawlerOptions.proxyConfiguration"}},{"id":4627,"name":"requestList","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Static list of URLs to be processed.\\nEither `requestList` or `requestQueue` option must be provided (or both)."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":92,"character":4}],"type":{"type":"reference","id":1158,"name":"RequestList"},"inheritedFrom":{"type":"reference","id":3337,"name":"BrowserCrawlerOptions.requestList"}},{"id":4626,"name":"requestQueue","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Dynamic queue of URLs to be processed. This is useful for recursive crawling of websites.\\nEither `requestList` or `requestQueue` option must be provided (or both)."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":98,"character":4}],"type":{"type":"reference","id":1270,"name":"RequestQueue"},"inheritedFrom":{"type":"reference","id":3336,"name":"BrowserCrawlerOptions.requestQueue"}},{"id":4634,"name":"sessionPoolOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The configuration options for {@link SessionPool} to use."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":170,"character":4}],"type":{"type":"reference","id":778,"name":"SessionPoolOptions"},"inheritedFrom":{"type":"reference","id":3344,"name":"BrowserCrawlerOptions.sessionPoolOptions"}},{"id":4633,"name":"useSessionPool","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Basic crawler will initialize the  {@link SessionPool} with the corresponding `sessionPoolOptions`.\\nThe session instance will be than available in the `handleRequestFunction`."},"sources":[{"fileName":"packages/basic-crawler/src/internals/basic-crawler.ts","line":165,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":3343,"name":"BrowserCrawlerOptions.useSessionPool"}}],"groups":[{"title":"Properties","kind":1024,"children":[4630,4614,4611,4624,4606,4605,4610,4623,4607,4632,4628,4629,4631,4622,4625,4609,4608,4621,4627,4626,4634,4633]}],"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-crawler.ts","line":31,"character":17}],"extendedTypes":[{"type":"reference","id":3323,"typeArguments":[{"type":"reference","id":4597,"name":"PuppeteerCrawlContext"},{"type":"reference","id":4601,"name":"PuppeteerGoToOptions"},{"type":"reflection","declaration":{"id":4603,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":4604,"name":"browserPlugins","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-crawler.ts","line":34,"character":6}],"type":{"type":"tuple","elements":[{"type":"reference","qualifiedName":"PuppeteerPlugin","package":"browser-pool","name":"PuppeteerPlugin"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[4604]}],"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-crawler.ts","line":34,"character":4}]}}],"name":"BrowserCrawlerOptions"}],"permalink":"/apify-ts/api/next/puppeteer-crawler/interface/PuppeteerCrawlerOptions","previousId":4462,"nextId":4791},{"id":4791,"name":"PuppeteerLaunchContext","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"Apify extends the launch options of Puppeteer.\\nYou can use any of the Puppeteer compatible\\n[`LaunchOptions`](https://pptr.dev/#?product=Puppeteer&show=api-puppeteerlaunchoptions)\\noptions by providing the `launchOptions` property.","text":"**Example:**\\n```js\\n// launch a headless Chrome (not Chromium)\\nconst launchContext = {\\n    // Apify helpers\\n    useChrome: true,\\n    proxyUrl: \'http://user:password@some.proxy.com\'\\n    // Native Puppeteer options\\n    launchOptions: {\\n        headless: true,\\n        args: [\'--some-flag\'],\\n    }\\n}\\n```\\n"},"children":[{"id":4792,"name":"launchOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":" `puppeteer.launch` [options](https://pptr.dev/#?product=Puppeteer&version=v5.5.0&show=api-puppeteerlaunchoptions)"},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-launcher.ts","line":41,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"LaunchOptions","package":"puppeteer","name":"LaunchOptions"},{"type":"reference","qualifiedName":"BrowserLaunchArgumentOptions","package":"puppeteer","name":"BrowserLaunchArgumentOptions"},{"type":"reference","qualifiedName":"BrowserConnectOptions","package":"puppeteer","name":"BrowserConnectOptions"},{"type":"reflection","declaration":{"id":4793,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":4795,"name":"extraPrefsFirefox","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/browser-pool/dist/puppeteer/puppeteer-proxy-per-page.d.ts","line":24,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"id":4794,"name":"product","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/browser-pool/dist/puppeteer/puppeteer-proxy-per-page.d.ts","line":23,"character":4}],"type":{"type":"reference","qualifiedName":"Product","package":"puppeteer","name":"Product"}}],"groups":[{"title":"Properties","kind":1024,"children":[4795,4794]}]}}]},"overwrites":{"type":"reference","id":3501,"name":"BrowserLaunchContext.launchOptions"}},{"id":4799,"name":"launcher","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Already required module (`Object`). This enables usage of various Puppeteer\\nwrappers such as `puppeteer-extra`.","text":"Take caution, because it can cause all kinds of unexpected errors and weird behavior.\\nApify SDK is not tested with any other library besides `puppeteer` itself.\\n"},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-launcher.ts","line":76,"character":4}],"type":{"type":"intrinsic","name":"unknown"},"overwrites":{"type":"reference","id":3500,"name":"BrowserLaunchContext.launcher"}},{"id":4796,"name":"proxyUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL to a HTTP proxy server. It must define the port number,\\nand it may also contain proxy username and password.","text":"Example: `http://bob:pass123@proxy.example.com:1234`.\\n"},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-launcher.ts","line":49,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","id":3502,"name":"BrowserLaunchContext.proxyUrl"}},{"id":4800,"name":"stealth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"This setting hides most of the known properties that identify headless Chrome and makes it nearly undetectable.\\nIt is recommended to use it together with the `useChrome` set to `true`."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-launcher.ts","line":82,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4801,"name":"stealthOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Using this configuration, you can disable some of the hiding tricks.\\nFor these settings to take effect `stealth` must be set to true"},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-launcher.ts","line":88,"character":4}],"type":{"type":"reference","id":4132,"name":"StealthOptions"}},{"id":4798,"name":"useChrome","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true` and `executablePath` is not set,\\nPuppeteer will launch full Google Chrome browser available on the machine\\nrather than the bundled Chromium. The path to Chrome executable\\nis taken from the `APIFY_CHROME_EXECUTABLE_PATH` environment variable if provided,\\nor defaults to the typical Google Chrome executable location specific for the operating system.\\nBy default, this option is `false`.","tags":[{"tag":"default","text":"false\\n"}]},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-launcher.ts","line":67,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"overwrites":{"type":"reference","id":3499,"name":"BrowserLaunchContext.useChrome"}},{"id":4802,"name":"useIncognitoPages","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"By default pages share the same browser context.\\nIf set to true each page uses its own context that is destroyed once the page is closed or crashes.","tags":[{"tag":"default","text":"false\\n"}]},"sources":[{"fileName":"node_modules/browser-pool/dist/abstract-classes/browser-plugin.d.ts","line":45,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":3503,"name":"BrowserLaunchContext.useIncognitoPages"}},{"id":4797,"name":"userAgent","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The `User-Agent` HTTP header used by the browser.\\nIf not provided, the function sets `User-Agent` to a reasonable default\\nto reduce the chance of detection of the crawler."},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-launcher.ts","line":56,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4803,"name":"userDataDir","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Path to a User Data Directory, which stores browser session data like cookies and local storage."},"sources":[{"fileName":"node_modules/browser-pool/dist/abstract-classes/browser-plugin.d.ts","line":49,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":3504,"name":"BrowserLaunchContext.userDataDir"}}],"groups":[{"title":"Properties","kind":1024,"children":[4792,4799,4796,4800,4801,4798,4802,4797,4803]}],"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-launcher.ts","line":37,"character":17}],"extendedTypes":[{"type":"reference","id":3498,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"launchOptions"},"objectType":{"type":"reference","qualifiedName":"PuppeteerPlugin","package":"browser-pool","name":"PuppeteerPlugin"}},{"type":"intrinsic","name":"unknown"}],"name":"BrowserLaunchContext"}],"permalink":"/apify-ts/api/next/puppeteer-crawler/interface/PuppeteerLaunchContext","previousId":4602,"nextId":4470},{"id":4470,"name":"RequestAsBrowserOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":4481,"name":"abortFunction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Function accepts `response` object as a single parameter and should return `true` or `false`.\\nIf function returns true, request gets aborted."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":76,"character":4}],"type":{"type":"reference","id":1899,"name":"AbortFunction"}},{"id":4488,"name":"agent","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"Agents","package":"got-cjs","name":"Agents"}]},"inheritedFrom":{"type":"reference","name":"Omit.agent"}},{"id":4545,"name":"allowGetBody","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.allowGetBody"}},{"id":4492,"name":"body","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"global.Buffer","package":"@types/node","name":"Buffer"},{"type":"reference","qualifiedName":"internal.Readable","package":"@types/node","name":"Readable"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Generator","package":"typescript","name":"Generator"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"AsyncGenerator","package":"typescript","name":"AsyncGenerator"},{"type":"reference","qualifiedName":"FormDataLike","package":"form-data-encoder","name":"FormDataLike"}]},"inheritedFrom":{"type":"reference","name":"Omit.body"}},{"id":4540,"name":"cache","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"boolean"},{"type":"reference","qualifiedName":"CacheableRequest.StorageAdapter","package":"@types/cacheable-request","name":"StorageAdapter"}]},"inheritedFrom":{"type":"reference","name":"Omit.cache"}},{"id":4553,"name":"cacheOptions","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"CacheOptions","package":"got-cjs","name":"CacheOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.cacheOptions"}},{"id":4536,"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}]},"inheritedFrom":{"type":"reference","name":"Omit.context"}},{"id":4494,"name":"cookieJar","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"PromiseCookieJar","package":"got-cjs","name":"PromiseCookieJar"},{"type":"reference","qualifiedName":"ToughCookieJar","package":"got-cjs","name":"ToughCookieJar"}]},"inheritedFrom":{"type":"reference","name":"Omit.cookieJar"}},{"id":4477,"name":"countryCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Two-letter ISO 3166 country code."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":49,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4552,"name":"createConnection","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"CreateConnectionFunction","package":"got-cjs","name":"CreateConnectionFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.createConnection"}},{"id":4490,"name":"decompress","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.decompress"}},{"id":4535,"name":"dnsCache","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"},{"type":"reference","qualifiedName":"CacheableLookup","package":"cacheable-lookup","name":"default"}]},"inheritedFrom":{"type":"reference","name":"Omit.dnsCache"}},{"id":4497,"name":"dnsLookup","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":4498,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":4499,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"tags":[{"tag":"see","text":"https://nodejs.org/api/dns.html#dns_dns_lookup_hostname_options_callback\\n"}]},"parameters":[{"id":4500,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":4501,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}},{"id":4502,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":4503,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":4504,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4505,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":4506,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":4507,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":4508,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4509,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":4510,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":4511,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":4512,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4513,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":4514,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":4515,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":4516,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4517,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":4518,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"LookupOptions","package":"cacheable-lookup","name":"LookupOptions"},{"type":"reflection","declaration":{"id":4519,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":4520,"name":"all","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/cacheable-lookup/index.d.ts","line":104,"character":52}],"type":{"type":"literal","value":true}}],"groups":[{"title":"Properties","kind":1024,"children":[4520]}]}}]}},{"id":4521,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":4522,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":4523,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4524,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":4525,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","qualifiedName":"EntryObject","package":"cacheable-lookup","name":"EntryObject"}}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":4526,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4527,"name":"hostname","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":4528,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"LookupOptions","package":"cacheable-lookup","name":"LookupOptions"}},{"id":4529,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":4530,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":4531,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4532,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"NodeJS.ErrnoException","package":"@types/node","name":"ErrnoException"}]}},{"id":4533,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":4534,"name":"family","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IPFamily","package":"cacheable-lookup","name":"IPFamily"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}]},"inheritedFrom":{"type":"reference","name":"Omit.dnsLookup"}},{"id":4547,"name":"dnsLookupIpVersion","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"DnsLookupIpVersion","package":"got-cjs","name":"DnsLookupIpVersion"},"inheritedFrom":{"type":"reference","name":"Omit.dnsLookupIpVersion"}},{"id":4555,"name":"encoding","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"global.BufferEncoding","package":"@types/node","name":"BufferEncoding"}]},"inheritedFrom":{"type":"reference","name":"Omit.encoding"}},{"id":4538,"name":"followRedirect","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.followRedirect"}},{"id":4493,"name":"form","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}]},"inheritedFrom":{"type":"reference","name":"Omit.form"}},{"id":4489,"name":"h2session","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ClientHttp2Session","package":"@types/node","name":"ClientHttp2Session"}]},"inheritedFrom":{"type":"reference","name":"Omit.h2session"}},{"id":4475,"name":"headerGeneratorOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Configuration to be used for generating correct browser headers.\\nSee the [`header-generator`](https://github.com/apify/header-generator) library."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":39,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"id":4473,"name":"headers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Additional HTTP headers to add. It\'s only recommended to use this option,\\nwith headers that are typically added by websites, such as cookies. Overriding\\ndefault browser headers will remove the masking this function provides."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"overwrites":{"type":"reference","name":"Omit.headers"}},{"id":4537,"name":"hooks","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/got-cjs/dist/source/core/options.d.ts","line":556,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"Hooks","package":"got-cjs","name":"Hooks"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"inheritedFrom":{"type":"reference","name":"Omit.hooks"}},{"id":4544,"name":"http2","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.http2"}},{"id":4554,"name":"https","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"HttpsOptions","package":"got-cjs","name":"HttpsOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.https"}},{"id":4495,"name":"ignoreInvalidCookies","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.ignoreInvalidCookies"}},{"id":4479,"name":"ignoreSslErrors","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to true, SSL/TLS certificate errors will be ignored."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":59,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4557,"name":"isStream","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.isStream"}},{"id":4485,"name":"json","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The `boolean` type for `json` is deprecated"},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":97,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}]}},{"id":4476,"name":"languageCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Two-letter ISO 639 language code."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":44,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4551,"name":"localAddress","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.localAddress"}},{"id":4561,"name":"maxHeaderSize","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]},"inheritedFrom":{"type":"reference","name":"Omit.maxHeaderSize"}},{"id":4539,"name":"maxRedirects","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]},"inheritedFrom":{"type":"reference","name":"Omit.maxRedirects"}},{"id":4472,"name":"method","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"HTTP method."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":21,"character":4}],"type":{"type":"reference","qualifiedName":"Method","package":"got-cjs","name":"Method"},"overwrites":{"type":"reference","name":"Omit.method"}},{"id":4546,"name":"methodRewriting","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.methodRewriting"}},{"id":4559,"name":"pagination","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"unknown"}],"qualifiedName":"PaginationOptions","package":"got-cjs","name":"PaginationOptions"}]},"inheritedFrom":{"type":"reference","name":"Omit.pagination"}},{"id":4548,"name":"parseJson","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ParseJsonFunction","package":"got-cjs","name":"ParseJsonFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.parseJson"}},{"id":4543,"name":"password","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.password"}},{"id":4491,"name":"prefixUrl","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"URL","package":"@types/node","name":"URL"}]},"inheritedFrom":{"type":"reference","name":"Omit.prefixUrl"}},{"id":4474,"name":"proxyUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An HTTP proxy to be passed down to the HTTP request. Supports proxy authentication with Basic Auth."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4487,"name":"request","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"RequestFunction","package":"got-cjs","name":"RequestFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.request"}},{"id":4556,"name":"resolveBodyOnly","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.resolveBodyOnly"}},{"id":4558,"name":"responseType","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"ResponseType","package":"got-cjs","name":"ResponseType"}]},"inheritedFrom":{"type":"reference","name":"Omit.responseType"}},{"id":4550,"name":"retry","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/got-cjs/dist/source/core/options.d.ts","line":557,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"RetryOptions","package":"got-cjs","name":"RetryOptions"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"inheritedFrom":{"type":"reference","name":"Omit.retry"}},{"id":4496,"name":"searchParams","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"SearchParameters","package":"got-cjs","name":"SearchParameters"},{"type":"reference","qualifiedName":"URLSearchParams","package":"@types/node","name":"URLSearchParams"}]},"inheritedFrom":{"type":"reference","name":"Omit.searchParams"}},{"id":4483,"name":"sessionToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A unique object used to generate browser headers. By default, new headers are generated on every call.\\nSet this option to make these headers persistent."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":90,"character":4}],"type":{"type":"intrinsic","name":"object"}},{"id":4560,"name":"setHost","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.setHost"}},{"id":4484,"name":"stream","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":92,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4549,"name":"stringifyJson","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"StringifyJsonFunction","package":"got-cjs","name":"StringifyJsonFunction"}]},"inheritedFrom":{"type":"reference","name":"Omit.stringifyJson"}},{"id":4541,"name":"throwHttpErrors","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]},"inheritedFrom":{"type":"reference","name":"Omit.throwHttpErrors"}},{"id":4486,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"Delays","package":"got-cjs","name":"Delays"}]},"inheritedFrom":{"type":"reference","name":"Omit.timeout"}},{"id":4471,"name":"url","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":" URL of the target endpoint. Supports both HTTP and HTTPS schemes."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":16,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"Omit.url"}},{"id":4482,"name":"useHttp2","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to false, it will prevent use of HTTP2 requests. This is strongly discouraged. Websites\\nexpect HTTP2 connections, because browsers use HTTP2 by default. It will automatically downgrade\\nto HTTP/1.1 for websites that do not support HTTP2. For Node 10 this option is always set to `false`\\nbecause Node 10 does not support HTTP2 very well. Upgrade to Node 12 for better performance."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":84,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4480,"name":"useInsecureHttpParser","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Node.js\' HTTP parser is stricter than parsers used by web browsers, which prevents scraping of websites\\nwhose servers do not comply with HTTP specs, either by accident or due to some anti-scraping protections,\\ncausing e.g. the `invalid header value char` error. The `useInsecureHttpParser` option forces\\nthe HTTP parser to ignore certain errors which lets you scrape such websites.\\nHowever, it will also open your application to some security vulnerabilities,\\nalthough the risk should be negligible as these vulnerabilities mainly relate to server applications, not clients.\\nLearn more in this [blog post](https://snyk.io/blog/node-js-release-fixes-a-critical-http-security-vulnerability/)."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":70,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4478,"name":"useMobileVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true`, the function uses User-Agent of a mobile browser."},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":54,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4542,"name":"username","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Omit.username"}}],"groups":[{"title":"Properties","kind":1024,"children":[4481,4488,4545,4492,4540,4553,4536,4494,4477,4552,4490,4535,4497,4547,4555,4538,4493,4489,4475,4473,4537,4544,4554,4495,4479,4557,4485,4476,4551,4561,4539,4472,4546,4559,4548,4543,4491,4474,4487,4556,4558,4550,4496,4483,4560,4484,4549,4541,4486,4471,4482,4480,4478,4542]}],"sources":[{"fileName":"packages/core/src/utils_request.ts","line":12,"character":17}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"OptionsInit","package":"got-cjs","name":"GotOptionsInit"},{"type":"literal","value":"json"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"}],"permalink":"/apify-ts/api/next/puppeteer-crawler/interface/RequestAsBrowserOptions","previousId":4791,"nextId":4301},{"id":4562,"name":"AbortFunction","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":100,"character":12}],"type":{"type":"reflection","declaration":{"id":4563,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":100,"character":28}],"signatures":[{"id":4564,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4565,"name":"response","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"IncomingMessage","package":"@types/node","name":"IncomingMessage"}}],"type":{"type":"intrinsic","name":"boolean"}}]}},"permalink":"/apify-ts/api/next/puppeteer-crawler#AbortFunction","previousId":4573,"nextId":4596},{"id":4596,"name":"PuppeteerController","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-crawler.ts","line":19,"character":12}],"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"_createController"},"objectType":{"type":"reference","qualifiedName":"PuppeteerPlugin","package":"browser-pool","name":"PuppeteerPlugin"}}],"qualifiedName":"ReturnType","package":"typescript","name":"ReturnType"},"permalink":"/apify-ts/api/next/puppeteer-crawler#PuppeteerController","previousId":4562,"nextId":4597},{"id":4597,"name":"PuppeteerCrawlContext","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-crawler.ts","line":21,"character":12}],"type":{"type":"reference","id":3277,"typeArguments":[{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"},{"type":"reference","qualifiedName":"HTTPResponse","package":"puppeteer","name":"HTTPResponse"},{"type":"reference","id":4596,"name":"PuppeteerController"}],"name":"BrowserCrawlingContext"},"permalink":"/apify-ts/api/next/puppeteer-crawler#PuppeteerCrawlContext","previousId":4596,"nextId":4601},{"id":4601,"name":"PuppeteerGoToOptions","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-crawler.ts","line":29,"character":12}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":1},"objectType":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"goto"},"objectType":{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"}}],"qualifiedName":"Parameters","package":"typescript","name":"Parameters"}},"permalink":"/apify-ts/api/next/puppeteer-crawler#PuppeteerGoToOptions","previousId":4597,"nextId":4600},{"id":4600,"name":"PuppeteerHandlePage","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-crawler.ts","line":27,"character":12}],"type":{"type":"reference","id":3303,"typeArguments":[{"type":"reference","id":4599,"name":"PuppeteerHandlePageFunctionParam"}],"name":"BrowserCrawlerHandleRequest"},"permalink":"/apify-ts/api/next/puppeteer-crawler#PuppeteerHandlePage","previousId":4601,"nextId":4599},{"id":4599,"name":"PuppeteerHandlePageFunctionParam","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-crawler.ts","line":25,"character":12}],"type":{"type":"reference","id":3277,"typeArguments":[{"type":"reference","qualifiedName":"Page","package":"puppeteer","name":"Page"},{"type":"reference","qualifiedName":"HTTPResponse","package":"puppeteer","name":"HTTPResponse"},{"type":"reference","id":4596,"name":"PuppeteerController"}],"name":"BrowserCrawlingContext"},"permalink":"/apify-ts/api/next/puppeteer-crawler#PuppeteerHandlePageFunctionParam","previousId":4600,"nextId":4598},{"id":4598,"name":"PuppeteerHook","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-crawler.ts","line":23,"character":12}],"type":{"type":"reference","id":3309,"typeArguments":[{"type":"reference","id":4597,"name":"PuppeteerCrawlContext"},{"type":"reference","id":4601,"name":"PuppeteerGoToOptions"}],"name":"BrowserHook"},"permalink":"/apify-ts/api/next/puppeteer-crawler#PuppeteerHook","previousId":4599,"nextId":4466},{"id":4466,"name":"RequestAsBrowserResult","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":12}],"typeParameter":[{"id":4469,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"string"}}],"type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"IncomingMessage","package":"@types/node","name":"IncomingMessage"},{"type":"reflection","declaration":{"id":4467,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":4468,"name":"body","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":69}],"type":{"type":"reference","id":1806,"name":"T"}}],"groups":[{"title":"Properties","kind":1024,"children":[4468]}],"sources":[{"fileName":"packages/core/src/utils_request.ts","line":10,"character":67}]}}]},"permalink":"/apify-ts/api/next/puppeteer-crawler#RequestAsBrowserResult","previousId":4598},{"id":4788,"name":"launchPuppeteer","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/puppeteer-crawler/src/internals/puppeteer-launcher.ts","line":215,"character":22}],"signatures":[{"id":4789,"name":"launchPuppeteer","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Launches headless Chrome using Puppeteer pre-configured to work within the Apify platform.\\nThe function has the same argument and the return value as `puppeteer.launch()`.\\nSee [Puppeteer documentation](https://github.com/puppeteer/puppeteer/blob/master/docs/api.md#puppeteerlaunchoptions) for more details.","text":"The `launchPuppeteer()` function alters the following Puppeteer options:\\n\\n- Passes the setting from the `APIFY_HEADLESS` environment variable to the `headless` option,\\n  unless it was already defined by the caller or `APIFY_XVFB` environment variable is set to `1`.\\n  Note that Apify Actor cloud platform automatically sets `APIFY_HEADLESS=1` to all running actors.\\n- Takes the `proxyUrl` option, validates it and adds it to `args` as `--proxy-server=XXX`.\\n  The proxy URL must define a port number and have one of the following schemes: `http://`,\\n  `https://`, `socks4://` or `socks5://`.\\n  If the proxy is HTTP (i.e. has the `http://` scheme) and contains username or password,\\n  the `launchPuppeteer` functions sets up an anonymous proxy HTTP\\n  to make the proxy work with headless Chrome. For more information, read the\\n  [blog post about proxy-chain library](https://blog.apify.com/how-to-make-headless-chrome-and-puppeteer-use-a-proxy-server-with-authentication-249a21a79212).\\n\\nTo use this function, you need to have the [puppeteer](https://www.npmjs.com/package/puppeteer)\\nNPM package installed in your project.\\nWhen running on the Apify cloud, you can achieve that simply\\nby using the `apify/actor-node-chrome` base Docker image for your actor - see\\n[Apify Actor documentation](https://docs.apify.com/actor/build#base-images)\\nfor details.\\n\\nFor an example of usage, see the [Synchronous run Example](../examples/synchronous-run)\\nor the [Puppeteer proxy Example](../examples/puppeteer-with-proxy)\\n","returns":"\\n  Promise that resolves to Puppeteer\'s `Browser` instance.\\n"},"parameters":[{"id":4790,"name":"launchContext","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":4791,"name":"PuppeteerLaunchContext"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"Browser","package":"puppeteer","name":"Browser"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/puppeteer-crawler/function/launchPuppeteer","previousId":4636,"nextId":4462},{"id":4462,"name":"requestAsBrowser","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/utils_request.ts","line":144,"character":22}],"signatures":[{"id":4463,"name":"requestAsBrowser","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"**IMPORTANT:** This function uses an insecure version of HTTP parser by default\\nand also ignores SSL/TLS errors. This is very useful in scraping, because it allows bypassing\\ncertain anti-scraping walls, but it also exposes some vulnerability. For other than scraping\\nscenarios, please set `useInsecureHttpParser: false` and `ignoreSslErrors: false`.","text":"Sends a HTTP request that looks like a request sent by a web browser,\\nfully emulating browser\'s HTTP headers. It uses HTTP2 by default for Node 12+.\\n\\nThis function is useful for web scraping of websites that send the full HTML in the first response.\\nThanks to this function, the target web server has no simple way to find out the request\\nhasn\'t been sent by a human\'s web browser. Using a headless browser for such requests\\nis an order of magnitude more resource-intensive than this function.\\n\\nThe function emulates the Chrome and Firefox web browsers. If you want more control\\nover the browsers and their versions, use the `headerGeneratorOptions` property.\\nYou can find more info in the readme of the [`header-generator`](https://github.com/apify/header-generator) library.\\n\\nInternally, the function uses the [`got-scraping`](https://github.com/apify/got-scraping) library to perform the request.\\nAll `options` not recognized by this function are passed to it so see it for more details.\\n\\n**Example usage:**\\n```js\\nconst Apify = require(\'apify\');\\n\\nconst { utils: { requestAsBrowser } } = Apify;\\n\\n...\\n\\nconst response = await requestAsBrowser({ url: \'https://www.example.com/\' });\\n\\nconst html = response.body;\\nconst status = response.statusCode;\\nconst contentType = response.headers[\'content-type\'];\\n```\\n","returns":"The result can be various objects, but it will always be like a\\n[Node.js HTTP response stream](https://nodejs.org/api/http.html#http_class_http_incomingmessage)\\nwith a \'body\' property for the parsed response body, unless the \'stream\' option is used.\\n"},"typeParameter":[{"id":4464,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":4465,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"All `requestAsBrowser` configuration options.\\n"},"type":{"type":"reference","id":1807,"name":"RequestAsBrowserOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1803,"typeArguments":[{"type":"reference","id":1801,"name":"T"}],"name":"RequestAsBrowserResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}],"permalink":"/apify-ts/api/next/puppeteer-crawler/function/requestAsBrowser","previousId":4788,"nextId":4602}],"groups":[{"title":"Classes","kind":128,"children":[4636],"categories":[{"title":"Crawlers","children":[4636]}]},{"title":"Functions","kind":64,"children":[4788,4462]},{"title":"Interfaces","kind":256,"children":[4602,4791,4470]},{"title":"Namespaces","kind":4,"children":[4301,4144,4122,4158]},{"title":"References","kind":16777216,"children":[4416,4417,4425,4329,4328,4583,4581,4575,4577,4576,4580,4294,4593,4589,4587,4586,4588,4592,4585,4590,4594,4418,4452,4334,4295,4296,4413,4412,4337,4336,4582,4361,4414,4372,4373,4377,4370,4371,4374,4376,4375,4457,4355,4415,4324,4347,4458,4591,4579,4578,4409,4298,4299,4157,4385,4384,4388,4386,4382,4566,4568,4569,4570,4567,4571,4456,4439,4436,4437,4438,4426,4352,4427,4356,4297,4434,4404,4408,4387,4432,4393,4392,4396,4394,4433,4406,4405,4407,4353,4419,4300,4359,4358,4363,4362,4357,4331,4330,4395,4344,4345,4343,4143,4411,4332,4335,4333,4453,4454,4574,4584,4435,4447,4445,4346,4327,4364,4381,4442,4379,4431,4446,4443,4440,4572,4367,4378,4389,4398,4360,4451,4368,4459,4380,4444,4460,4573]},{"title":"Type aliases","kind":4194304,"children":[4562,4596,4597,4601,4600,4599,4598,4466]}],"sources":[{"fileName":"packages/puppeteer-crawler/src/index.ts","line":1,"character":0}],"permalink":"/apify-ts/api/next/puppeteer-crawler"},"urlSlug":"puppeteer-crawler"}],"packageName":"@crawlers/puppeteer","packageVersion":"1.0.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":1,"name":"apify","kind":2,"kindString":"Module","flags":{},"children":[{"id":8,"name":"Actor","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"`Apify` class serves as an alternative approach to the static helpers exported from the package. It allows to pass configuration\\nthat will be used on the instance methods. Environment variables will have precedence over this configuration.\\nSee {@link Configuration} for details about what can be configured and what are the default values."},"children":[{"id":86,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":52,"character":4}],"signatures":[{"id":87,"name":"new Actor","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":88,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1430,"name":"ConfigurationOptions"},"defaultValue":"{}"}],"type":{"type":"reference","id":8,"name":"Actor"}}]},{"id":90,"name":"apifyClient","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"shortText":"Default {@link ApifyClient} instance."},"sources":[{"fileName":"packages/apify/src/actor.ts","line":47,"character":13}],"type":{"type":"reference","qualifiedName":"ApifyClient","package":"apify-client","name":"ApifyClient"}},{"id":89,"name":"config","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"shortText":"Configuration of this SDK instance (provided to its constructor). See {@link Configuration} for details."},"sources":[{"fileName":"packages/apify/src/actor.ts","line":44,"character":13}],"type":{"type":"reference","id":1453,"name":"Configuration"}},{"id":9,"name":"_instance","kind":1024,"kindString":"Property","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":41,"character":11}],"type":{"type":"reference","id":8,"name":"Actor"}},{"id":80,"name":"apifyClient","kind":262144,"kindString":"Accessor","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1219,"character":15}],"getSignature":[{"id":81,"name":"apifyClient","kind":524288,"kindString":"Get signature","flags":{},"comment":{"shortText":"Default {@link ApifyClient} instance."},"type":{"type":"reference","qualifiedName":"ApifyClient","package":"apify-client","name":"ApifyClient"}}]},{"id":82,"name":"config","kind":262144,"kindString":"Accessor","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1224,"character":15}],"getSignature":[{"id":83,"name":"config","kind":524288,"kindString":"Get signature","flags":{},"comment":{"shortText":"Default {@link Configuration} instance."},"type":{"type":"reference","id":1453,"name":"Configuration"}}]},{"id":116,"name":"addWebhook","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":319,"character":10}],"signatures":[{"id":117,"name":"addWebhook","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates an ad-hoc webhook for the current actor run, which lets you receive a notification when the actor run finished or failed.\\nFor more information about Apify actor webhooks, please see the [documentation](https://docs.apify.com/webhooks).","text":"Note that webhooks are only supported for actors running on the Apify platform.\\nIn local environment, the function will print a warning and have no effect.\\n","returns":"The return value is the Webhook object.\\nFor more information, see the [Get webhook](https://apify.com/docs/api/v2#/reference/webhooks/webhook-object/get-webhook) API endpoint.\\n"},"parameters":[{"id":118,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","id":201,"name":"WebhookOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"Webhook","package":"apify-client","name":"Webhook"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":101,"name":"call","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":229,"character":10}],"signatures":[{"id":102,"name":"call","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Runs an actor on the Apify platform using the current user account (determined by the `APIFY_TOKEN` environment variable),\\nwaits for the actor to finish and fetches its output.","text":"By passing the `waitSecs` option you can reduce the maximum amount of time to wait for the run to finish.\\nIf the value is less than or equal to zero, the function returns immediately after the run is started.\\n\\nThe result of the function is an {@link ActorRun} object\\nthat contains details about the actor run and its output (if any).\\n\\nIf you want to run an actor task rather than an actor, please use the\\n{@link Actor.callTask} function instead.\\n\\nFor more information about actors, read the\\n[documentation](https://docs.apify.com/actor).\\n\\n**Example usage:**\\n\\n```javascript\\nconst run = await Actor.call(\'apify/hello-world\', { myInput: 123 });\\nconsole.log(`Received message: ${run.output.body.message}`);\\n```\\n\\nInternally, the `call()` function invokes the\\n[Run actor](https://apify.com/docs/api/v2#/reference/actors/run-collection/run-actor)\\nand several other API endpoints to obtain the output.\\n"},"parameters":[{"id":103,"name":"actId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n Allowed formats are `username/actor-name`, `userId/actor-name` or actor ID."},"type":{"type":"intrinsic","name":"string"}},{"id":104,"name":"input","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"unknown"}},{"id":105,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":186,"name":"CallOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1578,"name":"ActorRunWithOutput"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":106,"name":"callTask","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":271,"character":10}],"signatures":[{"id":107,"name":"callTask","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Runs an actor task on the Apify platform using the current user account (determined by the `APIFY_TOKEN` environment variable),\\nwaits for the task to finish and fetches its output.","text":"By passing the `waitSecs` option you can reduce the maximum amount of time to wait for the run to finish.\\nIf the value is less than or equal to zero, the function returns immediately after the run is started.\\n\\nThe result of the function is an {@link ActorRun} object\\nthat contains details about the actor run and its output (if any).\\n\\nNote that an actor task is a saved input configuration and options for an actor.\\nIf you want to run an actor directly rather than an actor task, please use the\\n{@link Actor.call} function instead.\\n\\nFor more information about actor tasks, read the [documentation](https://docs.apify.com/tasks).\\n\\n**Example usage:**\\n\\n```javascript\\nconst run = await Actor.callTask(\'bob/some-task\');\\nconsole.log(`Received message: ${run.output.body.message}`);\\n```\\n\\nInternally, the `callTask()` function calls the\\n[Run task](https://apify.com/docs/api/v2#/reference/actor-tasks/run-collection/run-task)\\nand several other API endpoints to obtain the output.\\n"},"parameters":[{"id":108,"name":"taskId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n Allowed formats are `username/task-name`, `userId/task-name` or task ID."},"type":{"type":"intrinsic","name":"string"}},{"id":109,"name":"input","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}},{"id":110,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":194,"name":"CallTaskOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1578,"name":"ActorRunWithOutput"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":156,"name":"createProxyConfiguration","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":656,"character":10}],"signatures":[{"id":157,"name":"createProxyConfiguration","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a proxy configuration and returns a promise resolving to an instance\\nof the {@link ProxyConfiguration} class that is already initialized.","text":"Configures connection to a proxy server with the provided options. Proxy servers are used to prevent target websites from blocking\\nyour crawlers based on IP address rate limits or blacklists. Setting proxy configuration in your crawlers automatically configures\\nthem to use the selected proxies for all connections.\\n\\nFor more details and code examples, see the {@link ProxyConfiguration} class.\\n\\n```javascript\\n\\n// Returns initialized proxy configuration class\\nconst proxyConfiguration = await Actor.createProxyConfiguration({\\n    groups: [\'GROUP1\', \'GROUP2\'] // List of Apify proxy groups\\n    countryCode: \'US\'\\n});\\n\\nconst crawler = new Actor.CheerioCrawler({\\n  // ...\\n  proxyConfiguration,\\n  handlePageFunction: ({ proxyInfo }) => {\\n      const usedProxyUrl = proxyInfo.url; // Getting the proxy URL\\n  }\\n})\\n\\n```\\n\\nFor compatibility with existing Actor Input UI (Input Schema), this function\\nreturns `undefined` when the following object is passed as `proxyConfigurationOptions`.\\n\\n```\\n{ useApifyProxy: false }\\n```\\n"},"parameters":[{"id":158,"name":"proxyConfigurationOptions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","id":1670,"name":"ProxyConfigurationOptions"},{"type":"reflection","declaration":{"id":159,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":160,"name":"useApifyProxy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":657,"character":65}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","kind":1024,"children":[160]}]}}]},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","id":1686,"name":"ProxyConfiguration"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":161,"name":"getEnv","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":681,"character":4}],"signatures":[{"id":162,"name":"getEnv","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a new {@link ApifyEnv} object which contains information parsed from all the `APIFY_XXX` environment variables.","text":"For the list of the `APIFY_XXX` environment variables, see\\n[Actor documentation](https://docs.apify.com/actor/run#environment-variables).\\nIf some of the variables are not defined or are invalid, the corresponding value in the resulting object will be null.\\n"},"type":{"type":"reference","id":172,"name":"ApifyEnv"}}]},{"id":137,"name":"getInput","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":499,"character":10}],"signatures":[{"id":138,"name":"getInput","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the actor input value from the default {@link KeyValueStore} associated with the current actor run.","text":"This is just a convenient shortcut for [`keyValueStore.getValue(\'INPUT\')`](key-value-store#getvalue).\\nFor example, calling the following code:\\n```javascript\\nconst input = await Actor.getInput();\\n```\\n\\nis equivalent to:\\n```javascript\\nconst store = await Actor.openKeyValueStore();\\nawait store.getValue(\'INPUT\');\\n```\\n\\nNote that the `getInput()` function does not cache the value read from the key-value store.\\nIf you need to use the input multiple times in your actor,\\nit is far more efficient to read it once and store it locally.\\n\\nFor more information, see  {@link Actor.openKeyValueStore}\\nand {@link KeyValueStore.getValue}.\\n","returns":"\\n  Returns a promise that resolves to an object, string\\n  or [`Buffer`](https://nodejs.org/api/buffer.html), depending\\n  on the MIME content type of the record, or `null`\\n  if the record is missing.\\n"},"typeParameter":[{"id":139,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"},{"type":"reference","qualifiedName":"global.Buffer","package":"@types/node","name":"Buffer"}]}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":139,"name":"T"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":127,"name":"getValue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":431,"character":10}],"signatures":[{"id":128,"name":"getValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets a value from the default {@link KeyValueStore} associated with the current actor run.","text":"This is just a convenient shortcut for {@link KeyValueStore.getValue}.\\nFor example, calling the following code:\\n```javascript\\nconst value = await Actor.getValue(\'my-key\');\\n```\\n\\nis equivalent to:\\n```javascript\\nconst store = await Actor.openKeyValueStore();\\nconst value = await store.getValue(\'my-key\');\\n```\\n\\nTo store the value to the default key-value store, you can use the {@link Actor.setValue} function.\\n\\nFor more information, see  {@link Actor.openKeyValueStore}\\nand  {@link KeyValueStore.getValue}.\\n","returns":"\\n  Returns a promise that resolves to an object, string\\n  or [`Buffer`](https://nodejs.org/api/buffer.html), depending\\n  on the MIME content type of the record, or `null`\\n  if the record is missing.\\n"},"typeParameter":[{"id":129,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"unknown"}}],"parameters":[{"id":130,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Unique record key."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":129,"name":"T"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":166,"name":"isAtHome","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":718,"character":4}],"signatures":[{"id":167,"name":"isAtHome","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns `true` when code is running on Apify platform and `false` otherwise (for example locally)."},"type":{"type":"intrinsic","name":"boolean"}}]},{"id":93,"name":"main","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":121,"character":4}],"signatures":[{"id":94,"name":"main","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Runs the main user function that performs the job of the actor\\nand terminates the process when the user function finishes.","text":"**The `Actor.main()` function is optional** and is provided merely for your convenience.\\nIt is mainly useful when you\'re running your code as an actor on the [Apify platform](https://apify.com/actors).\\nHowever, if you want to use Apify SDK tools directly inside your existing projects, e.g.\\nrunning in an [Express](https://expressjs.com/) server, on\\n[Google Cloud functions](https://cloud.google.com/functions)\\nor [AWS Lambda](https://aws.amazon.com/lambda/), it\'s better to avoid\\nit since the function terminates the main process when it finishes!\\n\\nThe `Actor.main()` function performs the following actions:\\n\\n- When running on the Apify platform (i.e. `APIFY_IS_AT_HOME` environment variable is set),\\n  it sets up a connection to listen for platform events.\\n  For example, to get a notification about an imminent migration to another server.\\n  See {@link Actor.events} for details.\\n- It checks that either `APIFY_TOKEN` or `APIFY_LOCAL_STORAGE_DIR` environment variable\\n  is defined. If not, the functions sets `APIFY_LOCAL_STORAGE_DIR` to `./apify_storage`\\n  inside the current working directory. This is to simplify running code examples.\\n- It invokes the user function passed as the `userFunc` parameter.\\n- If the user function returned a promise, waits for it to resolve.\\n- If the user function throws an exception or some other error is encountered,\\n  prints error details to console so that they are stored to the log.\\n- Exits the Node.js process, with zero exit code on success and non-zero on errors.\\n\\nThe user function can be synchronous:\\n\\n```javascript\\nActor.main(() => {\\n  // My synchronous function that returns immediately\\n  console.log(\'Hello world from actor!\');\\n});\\n```\\n\\nIf the user function returns a promise, it is considered asynchronous:\\n```javascript\\nconst { requestAsBrowser } = require(\'some-request-library\');\\n\\nActor.main(() => {\\n  // My asynchronous function that returns a promise\\n  return request(\'http://www.example.com\').then((html) => {\\n    console.log(html);\\n  });\\n});\\n```\\n\\nTo simplify your code, you can take advantage of the `async`/`await` keywords:\\n\\n```javascript\\nconst request = require(\'some-request-library\');\\n\\nActor.main(async () => {\\n  // My asynchronous function\\n  const html = await request(\'http://www.example.com\');\\n  console.log(html);\\n});\\n```\\n"},"parameters":[{"id":95,"name":"userFunc","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"User function to be executed. If it returns a promise,\\nthe promise will be awaited. The user function is called with no arguments.\\n"},"type":{"type":"reference","id":183,"name":"UserFunc"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":111,"name":"metamorph","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":291,"character":10}],"signatures":[{"id":112,"name":"metamorph","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Transforms this actor run to an actor run of a given actor. The system stops the current container and starts\\nthe new container instead. All the default storages are preserved and the new input is stored under the `INPUT-METAMORPH-1` key\\nin the same default key-value store."},"parameters":[{"id":113,"name":"targetActorId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n Either `username/actor-name` or actor ID of an actor to which we want to metamorph."},"type":{"type":"intrinsic","name":"string"}},{"id":114,"name":"input","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"unknown"}},{"id":115,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":206,"name":"MetamorphOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":163,"name":"newClient","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":711,"character":4}],"signatures":[{"id":164,"name":"newClient","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a new instance of the Apify API client. The `ApifyClient` class is provided\\nby the [apify-client](https://www.npmjs.com/package/apify-client)\\nNPM package, and it is automatically configured using the `APIFY_API_BASE_URL`, and `APIFY_TOKEN`\\nenvironment variables. You can override the token via the available options. That\'s useful\\nif you want to use the client as a different Apify user than the SDK internals are using."},"parameters":[{"id":165,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"ApifyClientOptions","package":"apify-client","name":"ApifyClientOptions"},"defaultValue":"{}"}],"type":{"type":"reference","qualifiedName":"ApifyClient","package":"apify-client","name":"ApifyClient"}}]},{"id":122,"name":"openDataset","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":393,"character":10}],"signatures":[{"id":123,"name":"openDataset","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens a dataset and returns a promise resolving to an instance of the {@link Dataset} class.","text":"Datasets are used to store structured data where each object stored has the same attributes,\\nsuch as online store products or real estate offers.\\nThe actual data is stored either on the local filesystem or in the cloud.\\n\\nFor more details and code examples, see the {@link Dataset} class.\\n"},"typeParameter":[{"id":124,"name":"Data","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"},"default":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}}],"parameters":[{"id":125,"name":"datasetIdOrName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":126,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":1427,"name":"StorageManagerOptions"},{"type":"literal","value":"config"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":992,"typeArguments":[{"type":"reference","id":124,"name":"Data"}],"name":"Dataset"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":140,"name":"openKeyValueStore","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":517,"character":10}],"signatures":[{"id":141,"name":"openKeyValueStore","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens a key-value store and returns a promise resolving to an instance of the {@link KeyValueStore} class.","text":"Key-value stores are used to store records or files, along with their MIME content type.\\nThe records are stored and retrieved using a unique key.\\nThe actual data is stored either on a local filesystem or in the Apify cloud.\\n\\nFor more details and code examples, see the {@link KeyValueStore} class.\\n"},"parameters":[{"id":142,"name":"storeIdOrName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":143,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":1427,"name":"StorageManagerOptions"},{"type":"literal","value":"config"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1090,"name":"KeyValueStore"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":144,"name":"openRequestList","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":579,"character":10}],"signatures":[{"id":145,"name":"openRequestList","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens a request list and returns a promise resolving to an instance\\nof the {@link RequestList} class that is already initialized.","text":"{@link RequestList} represents a list of URLs to crawl, which is always stored in memory.\\nTo enable picking up where left off after a process restart, the request list sources\\nare persisted to the key-value store at initialization of the list. Then, while crawling,\\na small state object is regularly persisted to keep track of the crawling status.\\n\\nFor more details and code examples, see the {@link RequestList} class.\\n\\n**Example usage:**\\n\\n```javascript\\nconst sources = [\\n    \'https://www.example.com\',\\n    \'https://www.google.com\',\\n    \'https://www.bing.com\'\\n];\\n\\nconst requestList = await Actor.openRequestList(\'my-name\', sources);\\n```\\n"},"parameters":[{"id":146,"name":"listName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  Name of the request list to be opened. Setting a name enables the `RequestList`\'s state to be persisted\\n  in the key-value store. This is useful in case of a restart or migration. Since `RequestList` is only\\n  stored in memory, a restart or migration wipes it clean. Setting a name will enable the `RequestList`\'s\\n  state to survive those situations and continue where it left off.\\n\\n  The name will be used as a prefix in key-value store, producing keys such as `NAME-REQUEST_LIST_STATE`\\n  and `NAME-REQUEST_LIST_SOURCES`.\\n\\n  If `null`, the list will not be persisted and will only be stored in memory. Process restart\\n  will then cause the list to be crawled again from the beginning. We suggest always using a name."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":147,"name":"sources","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n An array of sources of URLs for the {@link RequestList}. It can be either an array of strings,\\n plain objects that define at least the `url` property, or an array of {@link Request} instances.\\n\\n **IMPORTANT:** The `sources` array will be consumed (left empty) after {@link RequestList} initializes.\\n This is a measure to prevent memory leaks in situations when millions of sources are\\n added.\\n\\n Additionally, the `requestsFromUrl` property may be used instead of `url`,\\n which will instruct {@link RequestList} to download the source URLs from a given remote location.\\n The URLs will be parsed from the received response. In this case you can limit the URLs\\n using `regex` parameter containing regular expression pattern for URLs to be included.\\n\\n For details, see the {@link RequestListOptions.sources}"},"type":{"type":"array","elementType":{"type":"reference","id":1245,"name":"Source"}}},{"id":148,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1151,"name":"RequestListOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1158,"name":"RequestList"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":149,"name":"openRequestQueue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":599,"character":10}],"signatures":[{"id":150,"name":"openRequestQueue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens a request queue and returns a promise resolving to an instance\\nof the {@link RequestQueue} class.","text":"{@link RequestQueue} represents a queue of URLs to crawl, which is stored either on local filesystem or in the cloud.\\nThe queue is used for deep crawling of websites, where you start with several URLs and then\\nrecursively follow links to other pages. The data structure supports both breadth-first\\nand depth-first crawling orders.\\n\\nFor more details and code examples, see the {@link RequestQueue} class.\\n"},"parameters":[{"id":151,"name":"queueIdOrName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":152,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":1427,"name":"StorageManagerOptions"},{"type":"literal","value":"config"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1270,"name":"RequestQueue"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":153,"name":"openSessionPool","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":614,"character":10}],"signatures":[{"id":154,"name":"openSessionPool","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens a SessionPool and returns a promise resolving to an instance\\nof the {@link SessionPool} class that is already initialized.","text":"For more details and code examples, see the {@link SessionPool} class.\\n"},"parameters":[{"id":155,"name":"sessionPoolOptions","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":778,"name":"SessionPoolOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":786,"name":"SessionPool"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":119,"name":"pushData","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":374,"character":10}],"signatures":[{"id":120,"name":"pushData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Stores an object or an array of objects to the default {@link Dataset} of the current actor run.","text":"This is just a convenient shortcut for {@link Dataset.pushData}.\\nFor example, calling the following code:\\n```javascript\\nawait Actor.pushData({ myValue: 123 });\\n```\\n\\nis equivalent to:\\n```javascript\\nconst dataset = await Actor.openDataset();\\nawait dataset.pushData({ myValue: 123 });\\n```\\n\\nFor more information, see {@link Actor.openDataset} and {@link Dataset.pushData}\\n\\n**IMPORTANT**: Make sure to use the `await` keyword when calling `pushData()`,\\notherwise the actor process might finish before the data are stored!\\n"},"parameters":[{"id":121,"name":"item","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Object or array of objects containing data to be stored in the default dataset.\\nThe objects must be serializable to JSON and the JSON representation of each object must be smaller than 9MB.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":131,"name":"setValue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":466,"character":10}],"signatures":[{"id":132,"name":"setValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Stores or deletes a value in the default {@link KeyValueStore} associated with the current actor run.","text":"This is just a convenient shortcut for  {@link KeyValueStore.setValue}.\\nFor example, calling the following code:\\n```javascript\\nawait Actor.setValue(\'OUTPUT\', { foo: \\"bar\\" });\\n```\\n\\nis equivalent to:\\n```javascript\\nconst store = await Actor.openKeyValueStore();\\nawait store.setValue(\'OUTPUT\', { foo: \\"bar\\" });\\n```\\n\\nTo get a value from the default key-value store, you can use the  {@link Actor.getValue} function.\\n\\nFor more information, see  {@link Actor.openKeyValueStore}\\nand  {@link KeyValueStore.getValue}.\\n"},"typeParameter":[{"id":133,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":134,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  Unique record key."},"type":{"type":"intrinsic","name":"string"}},{"id":135,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  Record data, which can be one of the following values:\\n   - If `null`, the record in the key-value store is deleted.\\n   - If no `options.contentType` is specified, `value` can be any JavaScript object, and it will be stringified to JSON.\\n   - If `options.contentType` is set, `value` is taken as is, and it must be a `String` or [`Buffer`](https://nodejs.org/api/buffer.html).\\n  For any other value an error will be thrown."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":133,"name":"T"}]}},{"id":136,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1140,"name":"RecordOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":96,"name":"start","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":168,"character":4}],"signatures":[{"id":97,"name":"start","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]},{"id":98,"name":"stop","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":179,"character":4}],"signatures":[{"id":99,"name":"stop","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":100,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":210,"name":"StopOptions"},"defaultValue":"{}"}],"type":{"type":"intrinsic","name":"void"}}]},{"id":28,"name":"addWebhook","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":895,"character":17}],"signatures":[{"id":29,"name":"addWebhook","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates an ad-hoc webhook for the current actor run, which lets you receive a notification when the actor run finished or failed.\\nFor more information about Apify actor webhooks, please see the [documentation](https://docs.apify.com/webhooks).","text":"Note that webhooks are only supported for actors running on the Apify platform.\\nIn local environment, the function will print a warning and have no effect.\\n","returns":"The return value is the Webhook object.\\nFor more information, see the [Get webhook](https://apify.com/docs/api/v2#/reference/webhooks/webhook-object/get-webhook) API endpoint.\\n"},"parameters":[{"id":30,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","id":201,"name":"WebhookOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","qualifiedName":"Webhook","package":"apify-client","name":"Webhook"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":13,"name":"call","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":824,"character":17}],"signatures":[{"id":14,"name":"call","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Runs an actor on the Apify platform using the current user account (determined by the `APIFY_TOKEN` environment variable),\\nwaits for the actor to finish and fetches its output.","text":"By passing the `waitSecs` option you can reduce the maximum amount of time to wait for the run to finish.\\nIf the value is less than or equal to zero, the function returns immediately after the run is started.\\n\\nThe result of the function is an {@link ActorRun} object\\nthat contains details about the actor run and its output (if any).\\n\\nIf you want to run an actor task rather than an actor, please use the\\n{@link Actor.callTask} function instead.\\n\\nFor more information about actors, read the\\n[documentation](https://docs.apify.com/actor).\\n\\n**Example usage:**\\n\\n```javascript\\nconst run = await Actor.call(\'apify/hello-world\', { myInput: 123 });\\nconsole.log(`Received message: ${run.output.body.message}`);\\n```\\n\\nInternally, the `call()` function invokes the\\n[Run actor](https://apify.com/docs/api/v2#/reference/actors/run-collection/run-actor)\\nand several other API endpoints to obtain the output.\\n"},"parameters":[{"id":15,"name":"actId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n Allowed formats are `username/actor-name`, `userId/actor-name` or actor ID."},"type":{"type":"intrinsic","name":"string"}},{"id":16,"name":"input","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"unknown"}},{"id":17,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":186,"name":"CallOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1578,"name":"ActorRunWithOutput"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":18,"name":"callTask","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":863,"character":17}],"signatures":[{"id":19,"name":"callTask","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Runs an actor task on the Apify platform using the current user account (determined by the `APIFY_TOKEN` environment variable),\\nwaits for the task to finish and fetches its output.","text":"By passing the `waitSecs` option you can reduce the maximum amount of time to wait for the run to finish.\\nIf the value is less than or equal to zero, the function returns immediately after the run is started.\\n\\nThe result of the function is an {@link ActorRun} object\\nthat contains details about the actor run and its output (if any).\\n\\nNote that an actor task is a saved input configuration and options for an actor.\\nIf you want to run an actor directly rather than an actor task, please use the\\n{@link Actor.call} function instead.\\n\\nFor more information about actor tasks, read the [documentation](https://docs.apify.com/tasks).\\n\\n**Example usage:**\\n\\n```javascript\\nconst run = await Actor.callTask(\'bob/some-task\');\\nconsole.log(`Received message: ${run.output.body.message}`);\\n```\\n\\nInternally, the `callTask()` function calls the\\n[Run task](https://apify.com/docs/api/v2#/reference/actor-tasks/run-collection/run-task)\\nand several other API endpoints to obtain the output.\\n"},"parameters":[{"id":20,"name":"taskId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n Allowed formats are `username/task-name`, `userId/task-name` or task ID."},"type":{"type":"intrinsic","name":"string"}},{"id":21,"name":"input","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}},{"id":22,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":194,"name":"CallTaskOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1578,"name":"ActorRunWithOutput"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":68,"name":"createProxyConfiguration","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1183,"character":17}],"signatures":[{"id":69,"name":"createProxyConfiguration","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a proxy configuration and returns a promise resolving to an instance\\nof the {@link ProxyConfiguration} class that is already initialized.","text":"Configures connection to a proxy server with the provided options. Proxy servers are used to prevent target websites from blocking\\nyour crawlers based on IP address rate limits or blacklists. Setting proxy configuration in your crawlers automatically configures\\nthem to use the selected proxies for all connections.\\n\\nFor more details and code examples, see the {@link ProxyConfiguration} class.\\n\\n```javascript\\n\\n// Returns initialized proxy configuration class\\nconst proxyConfiguration = await Actor.createProxyConfiguration({\\n    groups: [\'GROUP1\', \'GROUP2\'] // List of Apify proxy groups\\n    countryCode: \'US\'\\n});\\n\\nconst crawler = new Actor.CheerioCrawler({\\n  // ...\\n  proxyConfiguration,\\n  handlePageFunction: ({ proxyInfo }) => {\\n      const usedProxyUrl = proxyInfo.url; // Getting the proxy URL\\n  }\\n})\\n\\n```\\n\\nFor compatibility with existing Actor Input UI (Input Schema), this function\\nreturns `undefined` when the following object is passed as `proxyConfigurationOptions`.\\n\\n```\\n{ useApifyProxy: false }\\n```\\n"},"parameters":[{"id":70,"name":"proxyConfigurationOptions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","id":1670,"name":"ProxyConfigurationOptions"},{"type":"reflection","declaration":{"id":71,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":72,"name":"useApifyProxy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1184,"character":65}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","kind":1024,"children":[72]}]}}]},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","id":1686,"name":"ProxyConfiguration"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":84,"name":"getDefaultInstance","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1228,"character":11}],"signatures":[{"id":85,"name":"getDefaultInstance","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":8,"name":"Actor"}}]},{"id":73,"name":"getEnv","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1196,"character":11}],"signatures":[{"id":74,"name":"getEnv","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a new {@link ApifyEnv} object which contains information parsed from all the `APIFY_XXX` environment variables.","text":"For the list of the `APIFY_XXX` environment variables, see\\n[Actor documentation](https://docs.apify.com/actor/run#environment-variables).\\nIf some of the variables are not defined or are invalid, the corresponding value in the resulting object will be null.\\n"},"type":{"type":"reference","id":172,"name":"ApifyEnv"}}]},{"id":49,"name":"getInput","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1039,"character":17}],"signatures":[{"id":50,"name":"getInput","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the actor input value from the default {@link KeyValueStore} associated with the current actor run.","text":"This is just a convenient shortcut for [`keyValueStore.getValue(\'INPUT\')`](key-value-store#getvalue).\\nFor example, calling the following code:\\n```javascript\\nconst input = await Actor.getInput();\\n```\\n\\nis equivalent to:\\n```javascript\\nconst store = await Actor.openKeyValueStore();\\nawait store.getValue(\'INPUT\');\\n```\\n\\nNote that the `getInput()` function does not cache the value read from the key-value store.\\nIf you need to use the input multiple times in your actor,\\nit is far more efficient to read it once and store it locally.\\n\\nFor more information, see  {@link Actor.openKeyValueStore}\\nand {@link KeyValueStore.getValue}.\\n","returns":"\\n  Returns a promise that resolves to an object, string\\n  or [`Buffer`](https://nodejs.org/api/buffer.html), depending\\n  on the MIME content type of the record, or `null`\\n  if the record is missing.\\n"},"typeParameter":[{"id":51,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"},{"type":"reference","qualifiedName":"global.Buffer","package":"@types/node","name":"Buffer"}]}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":51,"name":"T"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":39,"name":"getValue","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":973,"character":17}],"signatures":[{"id":40,"name":"getValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets a value from the default {@link KeyValueStore} associated with the current actor run.","text":"This is just a convenient shortcut for {@link KeyValueStore.getValue}.\\nFor example, calling the following code:\\n```javascript\\nconst value = await Actor.getValue(\'my-key\');\\n```\\n\\nis equivalent to:\\n```javascript\\nconst store = await Actor.openKeyValueStore();\\nconst value = await store.getValue(\'my-key\');\\n```\\n\\nTo store the value to the default key-value store, you can use the {@link Actor.setValue} function.\\n\\nFor more information, see  {@link Actor.openKeyValueStore}\\nand  {@link KeyValueStore.getValue}.\\n","returns":"\\n  Returns a promise that resolves to an object, string\\n  or [`Buffer`](https://nodejs.org/api/buffer.html), depending\\n  on the MIME content type of the record, or `null`\\n  if the record is missing.\\n"},"typeParameter":[{"id":41,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"unknown"}}],"parameters":[{"id":42,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Unique record key."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":41,"name":"T"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":78,"name":"isAtHome","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1214,"character":11}],"signatures":[{"id":79,"name":"isAtHome","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns `true` when code is running on Apify platform and `false` otherwise (for example locally)."},"type":{"type":"intrinsic","name":"boolean"}}]},{"id":10,"name":"main","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":785,"character":11}],"signatures":[{"id":11,"name":"main","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Runs the main user function that performs the job of the actor\\nand terminates the process when the user function finishes.","text":"**The `Actor.main()` function is optional** and is provided merely for your convenience.\\nIt is mainly useful when you\'re running your code as an actor on the [Apify platform](https://apify.com/actors).\\nHowever, if you want to use Apify SDK tools directly inside your existing projects, e.g.\\nrunning in an [Express](https://expressjs.com/) server, on\\n[Google Cloud functions](https://cloud.google.com/functions)\\nor [AWS Lambda](https://aws.amazon.com/lambda/), it\'s better to avoid\\nit since the function terminates the main process when it finishes!\\n\\nThe `Actor.main()` function performs the following actions:\\n\\n- When running on the Apify platform (i.e. `APIFY_IS_AT_HOME` environment variable is set),\\n  it sets up a connection to listen for platform events.\\n  For example, to get a notification about an imminent migration to another server.\\n  See {@link Actor.events} for details.\\n- It checks that either `APIFY_TOKEN` or `APIFY_LOCAL_STORAGE_DIR` environment variable\\n  is defined. If not, the functions sets `APIFY_LOCAL_STORAGE_DIR` to `./apify_storage`\\n  inside the current working directory. This is to simplify running code examples.\\n- It invokes the user function passed as the `userFunc` parameter.\\n- If the user function returned a promise, waits for it to resolve.\\n- If the user function throws an exception or some other error is encountered,\\n  prints error details to console so that they are stored to the log.\\n- Exits the Node.js process, with zero exit code on success and non-zero on errors.\\n\\nThe user function can be synchronous:\\n\\n```javascript\\nActor.main(() => {\\n  // My synchronous function that returns immediately\\n  console.log(\'Hello world from actor!\');\\n});\\n```\\n\\nIf the user function returns a promise, it is considered asynchronous:\\n```javascript\\nconst { requestAsBrowser } = require(\'some-request-library\');\\n\\nActor.main(() => {\\n  // My asynchronous function that returns a promise\\n  return request(\'http://www.example.com\').then((html) => {\\n    console.log(html);\\n  });\\n});\\n```\\n\\nTo simplify your code, you can take advantage of the `async`/`await` keywords:\\n\\n```javascript\\nconst request = require(\'some-request-library\');\\n\\nActor.main(async () => {\\n  // My asynchronous function\\n  const html = await request(\'http://www.example.com\');\\n  console.log(html);\\n});\\n```\\n"},"parameters":[{"id":12,"name":"userFunc","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"User function to be executed. If it returns a promise,\\nthe promise will be awaited. The user function is called with no arguments.\\n"},"type":{"type":"reference","id":183,"name":"UserFunc"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23,"name":"metamorph","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":880,"character":17}],"signatures":[{"id":24,"name":"metamorph","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Transforms this actor run to an actor run of a given actor. The system stops the current container and starts\\nthe new container instead. All the default storages are preserved and the new input is stored under the `INPUT-METAMORPH-1` key\\nin the same default key-value store."},"parameters":[{"id":25,"name":"targetActorId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n Either `username/actor-name` or actor ID of an actor to which we want to metamorph."},"type":{"type":"intrinsic","name":"string"}},{"id":26,"name":"input","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"unknown"}},{"id":27,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":206,"name":"MetamorphOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":75,"name":"newClient","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1207,"character":11}],"signatures":[{"id":76,"name":"newClient","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a new instance of the Apify API client. The `ApifyClient` class is provided\\nby the [apify-client](https://www.npmjs.com/package/apify-client)\\nNPM package, and it is automatically configured using the `APIFY_API_BASE_URL`, and `APIFY_TOKEN`\\nenvironment variables. You can override the token via the available options. That\'s useful\\nif you want to use the client as a different Apify user than the SDK internals are using."},"parameters":[{"id":77,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","qualifiedName":"ApifyClientOptions","package":"apify-client","name":"ApifyClientOptions"},"defaultValue":"{}"}],"type":{"type":"reference","qualifiedName":"ApifyClient","package":"apify-client","name":"ApifyClient"}}]},{"id":34,"name":"openDataset","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":940,"character":17}],"signatures":[{"id":35,"name":"openDataset","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens a dataset and returns a promise resolving to an instance of the {@link Dataset} class.","text":"Datasets are used to store structured data where each object stored has the same attributes,\\nsuch as online store products or real estate offers.\\nThe actual data is stored either on the local filesystem or in the cloud.\\n\\nFor more details and code examples, see the {@link Dataset} class.\\n"},"typeParameter":[{"id":36,"name":"Data","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"},"default":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}}],"parameters":[{"id":37,"name":"datasetIdOrName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":38,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":1427,"name":"StorageManagerOptions"},{"type":"literal","value":"config"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":992,"typeArguments":[{"type":"reference","id":36,"name":"Data"}],"name":"Dataset"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":52,"name":"openKeyValueStore","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1057,"character":17}],"signatures":[{"id":53,"name":"openKeyValueStore","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens a key-value store and returns a promise resolving to an instance of the {@link KeyValueStore} class.","text":"Key-value stores are used to store records or files, along with their MIME content type.\\nThe records are stored and retrieved using a unique key.\\nThe actual data is stored either on a local filesystem or in the Apify cloud.\\n\\nFor more details and code examples, see the {@link KeyValueStore} class.\\n"},"parameters":[{"id":54,"name":"storeIdOrName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":55,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":1427,"name":"StorageManagerOptions"},{"type":"literal","value":"config"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1090,"name":"KeyValueStore"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":56,"name":"openRequestList","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1114,"character":17}],"signatures":[{"id":57,"name":"openRequestList","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens a request list and returns a promise resolving to an instance\\nof the {@link RequestList} class that is already initialized.","text":"{@link RequestList} represents a list of URLs to crawl, which is always stored in memory.\\nTo enable picking up where left off after a process restart, the request list sources\\nare persisted to the key-value store at initialization of the list. Then, while crawling,\\na small state object is regularly persisted to keep track of the crawling status.\\n\\nFor more details and code examples, see the {@link RequestList} class.\\n\\n**Example usage:**\\n\\n```javascript\\nconst sources = [\\n    \'https://www.example.com\',\\n    \'https://www.google.com\',\\n    \'https://www.bing.com\'\\n];\\n\\nconst requestList = await Actor.openRequestList(\'my-name\', sources);\\n```\\n"},"parameters":[{"id":58,"name":"listName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  Name of the request list to be opened. Setting a name enables the `RequestList`\'s state to be persisted\\n  in the key-value store. This is useful in case of a restart or migration. Since `RequestList` is only\\n  stored in memory, a restart or migration wipes it clean. Setting a name will enable the `RequestList`\'s\\n  state to survive those situations and continue where it left off.\\n\\n  The name will be used as a prefix in key-value store, producing keys such as `NAME-REQUEST_LIST_STATE`\\n  and `NAME-REQUEST_LIST_SOURCES`.\\n\\n  If `null`, the list will not be persisted and will only be stored in memory. Process restart\\n  will then cause the list to be crawled again from the beginning. We suggest always using a name."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":59,"name":"sources","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n An array of sources of URLs for the {@link RequestList}. It can be either an array of strings,\\n plain objects that define at least the `url` property, or an array of {@link Request} instances.\\n\\n **IMPORTANT:** The `sources` array will be consumed (left empty) after {@link RequestList} initializes.\\n This is a measure to prevent memory leaks in situations when millions of sources are\\n added.\\n\\n Additionally, the `requestsFromUrl` property may be used instead of `url`,\\n which will instruct {@link RequestList} to download the source URLs from a given remote location.\\n The URLs will be parsed from the received response. In this case you can limit the URLs\\n using `regex` parameter containing regular expression pattern for URLs to be included.\\n\\n For details, see the {@link RequestListOptions.sources}"},"type":{"type":"array","elementType":{"type":"reference","id":1245,"name":"Source"}}},{"id":60,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1151,"name":"RequestListOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1158,"name":"RequestList"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":61,"name":"openRequestQueue","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1134,"character":17}],"signatures":[{"id":62,"name":"openRequestQueue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens a request queue and returns a promise resolving to an instance\\nof the {@link RequestQueue} class.","text":"{@link RequestQueue} represents a queue of URLs to crawl, which is stored either on local filesystem or in the cloud.\\nThe queue is used for deep crawling of websites, where you start with several URLs and then\\nrecursively follow links to other pages. The data structure supports both breadth-first\\nand depth-first crawling orders.\\n\\nFor more details and code examples, see the {@link RequestQueue} class.\\n"},"parameters":[{"id":63,"name":"queueIdOrName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":64,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":1427,"name":"StorageManagerOptions"},{"type":"literal","value":"config"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1270,"name":"RequestQueue"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":65,"name":"openSessionPool","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1144,"character":17}],"signatures":[{"id":66,"name":"openSessionPool","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens a SessionPool and returns a promise resolving to an instance\\nof the {@link SessionPool} class that is already initialized.","text":"For more details and code examples, see the {@link SessionPool} class.\\n"},"parameters":[{"id":67,"name":"sessionPoolOptions","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":778,"name":"SessionPoolOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":786,"name":"SessionPool"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":31,"name":"pushData","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":922,"character":17}],"signatures":[{"id":32,"name":"pushData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Stores an object or an array of objects to the default {@link Dataset} of the current actor run.","text":"This is just a convenient shortcut for {@link Dataset.pushData}.\\nFor example, calling the following code:\\n```javascript\\nawait Actor.pushData({ myValue: 123 });\\n```\\n\\nis equivalent to:\\n```javascript\\nconst dataset = await Actor.openDataset();\\nawait dataset.pushData({ myValue: 123 });\\n```\\n\\nFor more information, see {@link Actor.openDataset} and {@link Dataset.pushData}\\n\\n**IMPORTANT**: Make sure to use the `await` keyword when calling `pushData()`,\\notherwise the actor process might finish before the data are stored!\\n"},"parameters":[{"id":33,"name":"item","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Object or array of objects containing data to be stored in the default dataset.\\nThe objects must be serializable to JSON and the JSON representation of each object must be smaller than 9MB.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Dictionary"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":43,"name":"setValue","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1007,"character":17}],"signatures":[{"id":44,"name":"setValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Stores or deletes a value in the default {@link KeyValueStore} associated with the current actor run.","text":"This is just a convenient shortcut for  {@link KeyValueStore.setValue}.\\nFor example, calling the following code:\\n```javascript\\nawait Actor.setValue(\'OUTPUT\', { foo: \\"bar\\" });\\n```\\n\\nis equivalent to:\\n```javascript\\nconst store = await Actor.openKeyValueStore();\\nawait store.setValue(\'OUTPUT\', { foo: \\"bar\\" });\\n```\\n\\nTo get a value from the default key-value store, you can use the  {@link Actor.getValue} function.\\n\\nFor more information, see  {@link Actor.openKeyValueStore}\\nand  {@link KeyValueStore.getValue}.\\n"},"typeParameter":[{"id":45,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":46,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  Unique record key."},"type":{"type":"intrinsic","name":"string"}},{"id":47,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\\n  Record data, which can be one of the following values:\\n   - If `null`, the record in the key-value store is deleted.\\n   - If no `options.contentType` is specified, `value` can be any JavaScript object, and it will be stringified to JSON.\\n   - If `options.contentType` is set, `value` is taken as is, and it must be a `String` or [`Buffer`](https://nodejs.org/api/buffer.html).\\n  For any other value an error will be thrown."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":45,"name":"T"}]}},{"id":48,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1140,"name":"RecordOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"groups":[{"title":"Constructors","kind":512,"children":[86]},{"title":"Properties","kind":1024,"children":[90,89,9]},{"title":"Accessors","kind":262144,"children":[80,82]},{"title":"Methods","kind":2048,"children":[116,101,106,156,161,137,127,166,93,111,163,122,140,144,149,153,119,131,96,98,28,13,18,68,84,73,49,39,78,10,23,75,34,52,56,61,65,31,43]}],"sources":[{"fileName":"packages/apify/src/actor.ts","line":40,"character":13}],"permalink":"/apify-ts/api/next/apify/class/Actor","nextId":213},{"id":213,"name":"ActorRun","kind":256,"kindString":"Interface","flags":{"isExternal":true},"children":[{"id":215,"name":"actId","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":159,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":217,"name":"actorTaskId","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":161,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":224,"name":"buildId","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":168,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":228,"name":"buildNumber","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":172,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":229,"name":"containerUrl","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":173,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":227,"name":"defaultDatasetId","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":171,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":226,"name":"defaultKeyValueStoreId","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":170,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":225,"name":"exitCode","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":169,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":219,"name":"finishedAt","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":163,"character":4}],"type":{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}},{"id":214,"name":"id","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":158,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":221,"name":"meta","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":165,"character":4}],"type":{"type":"reference","qualifiedName":"ActorRunMeta","package":"apify-client","name":"ActorRunMeta"}},{"id":223,"name":"options","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":167,"character":4}],"type":{"type":"reference","qualifiedName":"ActorRunOptions","package":"apify-client","name":"ActorRunOptions"}},{"id":218,"name":"startedAt","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":162,"character":4}],"type":{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}},{"id":222,"name":"stats","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":166,"character":4}],"type":{"type":"reference","qualifiedName":"ActorRunStats","package":"apify-client","name":"ActorRunStats"}},{"id":220,"name":"status","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":164,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"SUCCEEDED"},{"type":"literal","value":"FAILED"},{"type":"literal","value":"TIMED-OUT"},{"type":"literal","value":"ABORTED"}]}},{"id":216,"name":"userId","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":160,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[215,217,224,228,229,227,226,225,219,214,221,223,218,222,220,216]}],"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":157,"character":17}],"extendedBy":[{"type":"reference","id":1578,"name":"ActorRunWithOutput"}],"permalink":"/apify-ts/api/next/apify/interface/ActorRun","previousId":8,"nextId":172},{"id":172,"name":"ApifyEnv","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"Parsed representation of the `APIFY_XXX` environmental variables.\\nThis object is returned by the {@link Actor.getEnv} function."},"children":[{"id":173,"name":"actorId","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"ID of the actor (APIFY_ACTOR_ID)"},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1251,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":174,"name":"actorRunId","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"ID of the actor run (APIFY_ACTOR_RUN_ID)"},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1256,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":175,"name":"actorTaskId","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"ID of the actor task (APIFY_ACTOR_TASK_ID)"},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1261,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":181,"name":"defaultDatasetId","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"ID of the dataset where input and output data of this\\nactor is stored (APIFY_DEFAULT_DATASET_ID)"},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1295,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":180,"name":"defaultKeyValueStoreId","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"ID of the key-value store where input and output data of this\\nactor is stored (APIFY_DEFAULT_KEY_VALUE_STORE_ID)"},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1289,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":182,"name":"memoryMbytes","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Amount of memory allocated for the actor,\\nin megabytes (APIFY_MEMORY_MBYTES)"},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1301,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"number"}]}},{"id":178,"name":"startedAt","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Date when the actor was started (APIFY_STARTED_AT)"},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1278,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}]}},{"id":179,"name":"timeoutAt","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Date when the actor will time out (APIFY_TIMEOUT_AT)"},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1283,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}]}},{"id":177,"name":"token","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Authentication token representing privileges given to the actor run,\\nit can be passed to various Apify APIs (APIFY_TOKEN)"},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1273,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":176,"name":"userId","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"ID of the user who started the actor - note that it might be\\ndifferent than the owner ofthe actor (APIFY_USER_ID)"},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1267,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[173,174,175,181,180,182,178,179,177,176]}],"sources":[{"fileName":"packages/apify/src/actor.ts","line":1247,"character":17}],"permalink":"/apify-ts/api/next/apify/interface/ApifyEnv","previousId":213,"nextId":186},{"id":186,"name":"CallOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":188,"name":"build","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Tag or number of the actor build to run (e.g. `beta` or `1.2.345`).\\nIf not provided, the run uses build tag or number from the default actor run configuration (typically `latest`)."},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":125,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ActorStartOptions.build"}},{"id":189,"name":"contentType","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Content type for the `input`. If not specified,\\n`input` is expected to be an object that will be stringified to JSON and content type set to\\n`application/json; charset=utf-8`. If `options.contentType` is specified, then `input` must be a\\n`String` or `Buffer`."},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":132,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ActorStartOptions.contentType"}},{"id":190,"name":"memory","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Memory in megabytes which will be allocated for the new actor run.\\nIf not provided, the run uses memory of the default actor run configuration."},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":137,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"ActorStartOptions.memory"}},{"id":191,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Timeout for the actor run in seconds. Zero value means there is no timeout.\\nIf not provided, the run uses timeout of the default actor run configuration."},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":142,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"ActorStartOptions.timeout"}},{"id":187,"name":"token","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"User API token that is used to run the actor. By default, it is taken from the `APIFY_TOKEN` environment variable."},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1310,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":192,"name":"waitForFinish","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Maximum time to wait for the actor run to finish, in seconds.\\nIf the limit is reached, the returned promise is resolved to a run object that will have\\nstatus `READY` or `RUNNING` and it will not contain the actor run output.\\nIf `waitSecs` is null or undefined, the function waits for the actor to finish (default behavior)."},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":149,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"ActorStartOptions.waitForFinish"}},{"id":193,"name":"webhooks","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specifies optional webhooks associated with the actor run, which can be used\\nto receive a notification e.g. when the actor finished or failed, see\\n[ad hook webhooks documentation](https://docs.apify.com/webhooks/ad-hoc-webhooks) for detailed description."},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":155,"character":4}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","qualifiedName":"WebhookUpdateData","package":"apify-client","name":"WebhookUpdateData"}}},"inheritedFrom":{"type":"reference","name":"ActorStartOptions.webhooks"}}],"groups":[{"title":"Properties","kind":1024,"children":[188,189,190,191,187,192,193]}],"sources":[{"fileName":"packages/apify/src/actor.ts","line":1306,"character":17}],"extendedTypes":[{"type":"reference","qualifiedName":"ActorStartOptions","package":"apify-client","name":"ActorStartOptions"}],"permalink":"/apify-ts/api/next/apify/interface/CallOptions","previousId":172,"nextId":194},{"id":194,"name":"CallTaskOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":196,"name":"build","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Tag or number of the actor build to run (e.g. `beta` or `1.2.345`).\\nIf not provided, the run uses build tag or number from the default actor run configuration (typically `latest`)."},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":125,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TaskStartOptions.build"}},{"id":197,"name":"memory","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Memory in megabytes which will be allocated for the new actor run.\\nIf not provided, the run uses memory of the default actor run configuration."},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":137,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"TaskStartOptions.memory"}},{"id":198,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Timeout for the actor run in seconds. Zero value means there is no timeout.\\nIf not provided, the run uses timeout of the default actor run configuration."},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":142,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"TaskStartOptions.timeout"}},{"id":195,"name":"token","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"User API token that is used to run the actor. By default, it is taken from the `APIFY_TOKEN` environment variable."},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1317,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":199,"name":"waitForFinish","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Maximum time to wait for the actor run to finish, in seconds.\\nIf the limit is reached, the returned promise is resolved to a run object that will have\\nstatus `READY` or `RUNNING` and it will not contain the actor run output.\\nIf `waitSecs` is null or undefined, the function waits for the actor to finish (default behavior)."},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":149,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"TaskStartOptions.waitForFinish"}},{"id":200,"name":"webhooks","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"shortText":"Specifies optional webhooks associated with the actor run, which can be used\\nto receive a notification e.g. when the actor finished or failed, see\\n[ad hook webhooks documentation](https://docs.apify.com/webhooks/ad-hoc-webhooks) for detailed description."},"sources":[{"fileName":"node_modules/apify-client/dist/resource_clients/actor.d.ts","line":155,"character":4}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","qualifiedName":"WebhookUpdateData","package":"apify-client","name":"WebhookUpdateData"}}},"inheritedFrom":{"type":"reference","name":"TaskStartOptions.webhooks"}}],"groups":[{"title":"Properties","kind":1024,"children":[196,197,198,195,199,200]}],"sources":[{"fileName":"packages/apify/src/actor.ts","line":1313,"character":17}],"extendedTypes":[{"type":"reference","qualifiedName":"TaskStartOptions","package":"apify-client","name":"TaskStartOptions"}],"permalink":"/apify-ts/api/next/apify/interface/CallTaskOptions","previousId":186,"nextId":206},{"id":206,"name":"MetamorphOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":208,"name":"build","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Tag or number of the target actor build to metamorph into (e.g. `beta` or `1.2.345`).\\nIf not provided, the run uses build tag or number from the default actor run configuration (typically `latest`)."},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1364,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":207,"name":"contentType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Content type for the `input`. If not specified,\\n`input` is expected to be an object that will be stringified to JSON and content type set to\\n`application/json; charset=utf-8`. If `options.contentType` is specified, then `input` must be a\\n`String` or `Buffer`."},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1358,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[208,207]}],"sources":[{"fileName":"packages/apify/src/actor.ts","line":1351,"character":17}],"permalink":"/apify-ts/api/next/apify/interface/MetamorphOptions","previousId":194,"nextId":210},{"id":210,"name":"StopOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":211,"name":"exit","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Call `process.exit()`, defaults to true."},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1372,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":212,"name":"exitCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Exit code, defaults to 0"},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1375,"character":4}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[211,212]}],"sources":[{"fileName":"packages/apify/src/actor.ts","line":1370,"character":17}],"permalink":"/apify-ts/api/next/apify/interface/StopOptions","previousId":206,"nextId":201},{"id":201,"name":"WebhookOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":202,"name":"eventTypes","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Array of event types, which you can set for actor run, see\\nthe [actor run events](https://docs.apify.com/webhooks/events#actor-run) in the Apify doc."},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1325,"character":4}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","qualifiedName":"WebhookEventType","package":"apify-client","name":"WebhookEventType"}}}},{"id":205,"name":"idempotencyKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Idempotency key enables you to ensure that a webhook will not be added multiple times in case of\\nan actor restart or other situation that would cause the `addWebhook()` function to be called again.\\nWe suggest using the actor run ID as the idempotency key. You can get the run ID by calling\\n{@link Actor.getEnv} function."},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1348,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":204,"name":"payloadTemplate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Payload template is a JSON-like string that describes the structure of the webhook POST request payload.\\nIt uses JSON syntax, extended with a double curly braces syntax for injecting variables `{{variable}}`.\\nThose variables are resolved at the time of the webhook\'s dispatch, and a list of available variables with their descriptions\\nis available in the [Apify webhook documentation](https://docs.apify.com/webhooks).\\nIf `payloadTemplate` is omitted, the default payload template is used\\n([view docs](https://docs.apify.com/webhooks/actions#payload-template))."},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1340,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":203,"name":"requestUrl","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"URL which will be requested using HTTP POST request, when actor run will reach the set event type."},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1330,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[202,205,204,203]}],"sources":[{"fileName":"packages/apify/src/actor.ts","line":1320,"character":17}],"permalink":"/apify-ts/api/next/apify/interface/WebhookOptions","previousId":210,"nextId":183},{"id":183,"name":"UserFunc","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1304,"character":12}],"type":{"type":"reflection","declaration":{"id":184,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/apify/src/actor.ts","line":1304,"character":23}],"signatures":[{"id":185,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable"}}]}},"permalink":"/apify-ts/api/next/apify#UserFunc","previousId":201}],"groups":[{"title":"Classes","kind":128,"children":[8]},{"title":"Interfaces","kind":256,"children":[213,172,186,194,206,210,201]},{"title":"Type aliases","kind":4194304,"children":[183]}],"sources":[{"fileName":"packages/apify/src/index.ts","line":1,"character":0}],"permalink":"/apify-ts/api/next/apify"},"urlSlug":"apify"}],"packageName":"apify","packageVersion":"2.2.2"}]')}}]);