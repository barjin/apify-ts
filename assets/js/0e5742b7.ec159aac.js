"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8290],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,h=m["".concat(i,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(h,l(l({ref:t},p),{},{components:n})):r.createElement(h,l({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1736:(e,t,n)=>{n.d(t,{Z:()=>O});var r=n(7462),a=n(7294),o=n(6010);const l={plain:{backgroundColor:"#2a2734",color:"#9a86fd"},styles:[{types:["comment","prolog","doctype","cdata","punctuation"],style:{color:"#6c6783"}},{types:["namespace"],style:{opacity:.7}},{types:["tag","operator","number"],style:{color:"#e09142"}},{types:["property","function"],style:{color:"#9a86fd"}},{types:["tag-id","selector","atrule-id"],style:{color:"#eeebff"}},{types:["attr-name"],style:{color:"#c4b9fe"}},{types:["boolean","string","entity","url","attr-value","keyword","control","directive","unit","statement","regex","at-rule","placeholder","variable"],style:{color:"#ffcc99"}},{types:["deleted"],style:{textDecorationLine:"line-through"}},{types:["inserted"],style:{textDecorationLine:"underline"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["important"],style:{color:"#c4b9fe"}}]};var s={Prism:n(7410).default,theme:l};function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(){return c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},c.apply(this,arguments)}var p=/\r\n|\r|\n/,u=function(e){0===e.length?e.push({types:["plain"],content:"\n",empty:!0}):1===e.length&&""===e[0].content&&(e[0].content="\n",e[0].empty=!0)},m=function(e,t){var n=e.length;return n>0&&e[n-1]===t?e:e.concat(t)},d=function(e,t){var n=e.plain,r=Object.create(null),a=e.styles.reduce((function(e,n){var r=n.languages,a=n.style;return r&&!r.includes(t)||n.types.forEach((function(t){var n=c({},e[t],a);e[t]=n})),e}),r);return a.root=n,a.plain=c({},n,{backgroundColor:null}),a};function h(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(n[r]=e[r]);return n}const y=function(e){function t(){for(var t=this,n=[],r=arguments.length;r--;)n[r]=arguments[r];e.apply(this,n),i(this,"getThemeDict",(function(e){if(void 0!==t.themeDict&&e.theme===t.prevTheme&&e.language===t.prevLanguage)return t.themeDict;t.prevTheme=e.theme,t.prevLanguage=e.language;var n=e.theme?d(e.theme,e.language):void 0;return t.themeDict=n})),i(this,"getLineProps",(function(e){var n=e.key,r=e.className,a=e.style,o=c({},h(e,["key","className","style","line"]),{className:"token-line",style:void 0,key:void 0}),l=t.getThemeDict(t.props);return void 0!==l&&(o.style=l.plain),void 0!==a&&(o.style=void 0!==o.style?c({},o.style,a):a),void 0!==n&&(o.key=n),r&&(o.className+=" "+r),o})),i(this,"getStyleForToken",(function(e){var n=e.types,r=e.empty,a=n.length,o=t.getThemeDict(t.props);if(void 0!==o){if(1===a&&"plain"===n[0])return r?{display:"inline-block"}:void 0;if(1===a&&!r)return o[n[0]];var l=r?{display:"inline-block"}:{},s=n.map((function(e){return o[e]}));return Object.assign.apply(Object,[l].concat(s))}})),i(this,"getTokenProps",(function(e){var n=e.key,r=e.className,a=e.style,o=e.token,l=c({},h(e,["key","className","style","token"]),{className:"token "+o.types.join(" "),children:o.content,style:t.getStyleForToken(o),key:void 0});return void 0!==a&&(l.style=void 0!==l.style?c({},l.style,a):a),void 0!==n&&(l.key=n),r&&(l.className+=" "+r),l})),i(this,"tokenize",(function(e,t,n,r){var a={code:t,grammar:n,language:r,tokens:[]};e.hooks.run("before-tokenize",a);var o=a.tokens=e.tokenize(a.code,a.grammar,a.language);return e.hooks.run("after-tokenize",a),o}))}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.render=function(){var e=this.props,t=e.Prism,n=e.language,r=e.code,a=e.children,o=this.getThemeDict(this.props),l=t.languages[n];return a({tokens:function(e){for(var t=[[]],n=[e],r=[0],a=[e.length],o=0,l=0,s=[],i=[s];l>-1;){for(;(o=r[l]++)<a[l];){var c=void 0,d=t[l],h=n[l][o];if("string"==typeof h?(d=l>0?d:["plain"],c=h):(d=m(d,h.type),h.alias&&(d=m(d,h.alias)),c=h.content),"string"==typeof c){var y=c.split(p),f=y.length;s.push({types:d,content:y[0]});for(var g=1;g<f;g++)u(s),i.push(s=[]),s.push({types:d,content:y[g]})}else l++,t.push(d),n.push(c),r.push(0),a.push(c.length)}l--,t.pop(),n.pop(),r.pop(),a.pop()}return u(s),i}(void 0!==l?this.tokenize(t,r,l,n):[r]),className:"prism-code language-"+n,style:void 0!==o?o.root:{},getLineProps:this.getLineProps,getTokenProps:this.getTokenProps})},t}(a.Component);var f=n(5999),g=n(5450);const v="codeBlockContainer_I0IT",b="codeBlockContent_wNvx",w="codeBlockTitle_BvAR",k="codeBlock_jd64",x="codeBlockStandalone_csWH",C="copyButton_wuS7",T="codeBlockLines_mRuA";function O(e){var t,n=e.children,l=e.className,i=void 0===l?"":l,c=e.metastring,p=e.title,u=e.language,m=(0,g.useThemeConfig)().prism,d=(0,a.useState)(!1),h=d[0],O=d[1],L=(0,a.useState)(!1),E=L[0],P=L[1];(0,a.useEffect)((function(){P(!0)}),[]);var N=(0,g.parseCodeBlockTitle)(c)||p,j=(0,g.usePrismTheme)();if(a.Children.toArray(n).some((function(e){return(0,a.isValidElement)(e)})))return a.createElement(y,(0,r.Z)({},s,{key:String(E),theme:j,code:"",language:"text"}),(function(e){var t=e.className,r=e.style;return a.createElement("pre",{tabIndex:0,className:(0,o.Z)(t,x,"thin-scrollbar",v,i,g.ThemeClassNames.common.codeBlock),style:r},a.createElement("code",{className:T},n))}));var R=Array.isArray(n)?n.join(""):n,A=null!=(t=null!=u?u:(0,g.parseLanguage)(i))?t:m.defaultLanguage,q=(0,g.parseLines)(R,c,A),S=q.highlightLines,D=q.code,B=function(){!function(e,t){var n=(void 0===t?{}:t).target,r=void 0===n?document.body:n,a=document.createElement("textarea"),o=document.activeElement;a.value=e,a.setAttribute("readonly",""),a.style.contain="strict",a.style.position="absolute",a.style.left="-9999px",a.style.fontSize="12pt";var l=document.getSelection(),s=!1;l.rangeCount>0&&(s=l.getRangeAt(0)),r.append(a),a.select(),a.selectionStart=0,a.selectionEnd=e.length;var i=!1;try{i=document.execCommand("copy")}catch(c){}a.remove(),s&&(l.removeAllRanges(),l.addRange(s)),o&&o.focus()}(D),O(!0),setTimeout((function(){return O(!1)}),2e3)};return a.createElement(y,(0,r.Z)({},s,{key:String(E),theme:j,code:D,language:null!=A?A:"text"}),(function(e){var t,n=e.className,l=e.style,s=e.tokens,c=e.getLineProps,p=e.getTokenProps;return a.createElement("div",{className:(0,o.Z)(v,i,(t={},t["language-"+A]=A&&!i.includes("language-"+A),t),g.ThemeClassNames.common.codeBlock)},N&&a.createElement("div",{style:l,className:w},N),a.createElement("div",{className:(0,o.Z)(b,A)},a.createElement("pre",{tabIndex:0,className:(0,o.Z)(n,k,"thin-scrollbar"),style:l},a.createElement("code",{className:T},s.map((function(e,t){1===e.length&&"\n"===e[0].content&&(e[0].content="");var n=c({line:e,key:t});return S.includes(t)&&(n.className+=" docusaurus-highlight-code-line"),a.createElement("span",(0,r.Z)({key:t},n),e.map((function(e,t){return a.createElement("span",(0,r.Z)({key:t},p({token:e,key:t})))})),a.createElement("br",null))})))),a.createElement("button",{type:"button","aria-label":(0,f.I)({id:"theme.CodeBlock.copyButtonAriaLabel",message:"Copy code to clipboard",description:"The ARIA label for copy code blocks button"}),className:(0,o.Z)(C,"clean-btn"),onClick:B},h?a.createElement(f.Z,{id:"theme.CodeBlock.copied",description:"The copied button label on code blocks"},"Copied"):a.createElement(f.Z,{id:"theme.CodeBlock.copy",description:"The copy button label on code blocks"},"Copy"))))}))}},4339:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>p,toc:()=>m});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),l=n(1736);var s=["components"],i={id:"cheerio-crawler",title:"Cheerio crawler"},c=void 0,p={unversionedId:"examples/cheerio-crawler",id:"examples/cheerio-crawler",title:"Cheerio crawler",description:"This example demonstrates how to use CheerioCrawler to crawl a list of URLs from an external file, load each URL using",source:"@site/../docs/examples/cheerio_crawler.mdx",sourceDirName:"examples",slug:"/examples/cheerio-crawler",permalink:"/apify-ts/docs/next/examples/cheerio-crawler",tags:[],version:"current",frontMatter:{id:"cheerio-crawler",title:"Cheerio crawler"},sidebar:"docs",previous:{title:"Capture a screenshot",permalink:"/apify-ts/docs/next/examples/capture-screenshot"},next:{title:"Crawl all links on a website",permalink:"/apify-ts/docs/next/examples/crawl-all-links"}},u={},m=[],d={toc:m};function h(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This example demonstrates how to use ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/cheerio-crawler",target:null,rel:null},(0,o.kt)("inlineCode",{parentName:"a"},"CheerioCrawler"))," to crawl a list of URLs from an external file, load each URL using\na plain HTTP request, parse the HTML using the ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/cheerio",target:"_blank",rel:"noopener"},"Cheerio library")," and extract some data from it: the page title\nand all ",(0,o.kt)("inlineCode",{parentName:"p"},"h1")," tags."),(0,o.kt)(l.Z,{className:"language-js",mdxType:"CodeBlock"},"const Apify = require('apify');\n\n// Apify.utils contains various utilities, e.g. for logging.\n// Here we use debug level of logging to improve the debugging experience.\n// This functionality is optional!\nconst { log } = Apify.utils;\nlog.setLevel(log.LEVELS.DEBUG);\n\n// Apify.main() function wraps the crawler logic (it is optional).\nApify.main(async () => {\n    // Create an instance of the RequestList class that contains a list of URLs to crawl.\n    // Add URLs to a RequestList\n    const requestList = await Apify.openRequestList('start-urls',\n        [\n            { url: 'http://www.example.com/page-1' },\n            { url: 'http://www.example.com/page-2' },\n            { url: 'http://www.example.com/page-3' },\n        ]);\n    // Create an instance of the CheerioCrawler class - a crawler\n    // that automatically loads the URLs and parses their HTML using the cheerio library.\n    const crawler = new Apify.CheerioCrawler({\n        // Let the crawler fetch URLs from our list.\n        requestList,\n\n        // The crawler downloads and processes the web pages in parallel, with a concurrency\n        // automatically managed based on the available system memory and CPU (see AutoscaledPool class).\n        // Here we define some hard limits for the concurrency.\n        minConcurrency: 10,\n        maxConcurrency: 50,\n\n        // On error, retry each page at most once.\n        maxRequestRetries: 1,\n\n        // Increase the timeout for processing of each page.\n        handlePageTimeoutSecs: 30,\n\n        // Limit to 10 requests per one crawl\n        maxRequestsPerCrawl: 10,\n\n        // This function will be called for each URL to crawl.\n        // It accepts a single parameter, which is an object with options as:\n        // https://sdk.apify.com/docs/typedefs/cheerio-crawler-options#handlepagefunction\n        // We use for demonstration only 2 of them:\n        // - request: an instance of the Request class with information such as URL and HTTP method\n        // - $: the cheerio object containing parsed HTML\n        handlePageFunction: async ({ request, $ }) => {\n            log.debug(`Processing ${request.url}...`);\n\n            // Extract data from the page using cheerio.\n            const title = $('title').text();\n            const h1texts = [];\n            $('h1').each((index, el) => {\n                h1texts.push({\n                    text: $(el).text(),\n                });\n            });\n\n            // Store the results to the default dataset. In local configuration,\n            // the data will be stored as JSON files in ./apify_storage/datasets/default\n            await Apify.pushData({\n                url: request.url,\n                title,\n                h1texts,\n            });\n        },\n\n        // This function is called if the page processing failed more than maxRequestRetries+1 times.\n        handleFailedRequestFunction: async ({ request }) => {\n            log.debug(`Request ${request.url} failed twice.`);\n        },\n    });\n\n    // Run the crawler and wait for it to finish.\n    await crawler.run();\n\n    log.debug('Crawler finished.');\n});\n"))}h.isMDXComponent=!0}}]);